<?xml version="1.0" encoding="utf-8"?>
<s:Application name="app" pageTitle="Gold Price" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
			   creationComplete="onCreationComplete(event);" cacheAsBitmap="true" xmlns:controls="controls.*" backgroundColor="Black" xmlns:local="*" 
			   preloader="SlicedCirclePreloader" fontFamily="nextUpdate2" height="480" width="640" applicationDPI="160" resizeForSoftKeyboard="true">

	<fx:Style source="Alive6.css"/>
	<fx:Style> 
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@font-face {
			src: url("assets/Michroma.ttf");
			fontFamily: nextUpdate;
			fontWeight: normal;	
			embedAsCFF: false; 
		}
		@font-face {
			src: url("assets/Michroma.ttf");
			fontFamily: nextUpdate2;
			fontWeight: normal;	
		}
		.customDropDown	
		{
			embedFonts: true;
			fontWeight: normal;	
			fontFamily: nextUpdate;
			backgroundAlpha: 0.2; 
			backgroundColor: yellow;
			fillColors: Black, #0d0d07;
			selectionColor: Yellow;
			dropdownBorderColor: Yellow;
			dropdownTextColor: Yellow;
			verticalScrollBarStyleName: customVertScroll;
			selectorColor: yellow;
			accentColor: yellow;
			barColor: yellow;
			paddingLeft: 0;
			paddingRight: 0;
			paddingBottom: 0;
			paddingTop: 0;
			borderColor: black;
		}
		.customDropDownText
		{
			color: Yellow;
		}

		.customButton
		{
			embedFonts: true;
			fontWeight: normal;	
			fontFamily: nextUpdate;
			color: yellow;
			backgroundColor: Black;
			borderColor: Black;
			disabledColor: #333327;
			textRollOverColor: #ffff00;
			paddingLeft: 0;
			paddingRight: 0;
			paddingBottom: 0;
			paddingTop: 0;
		}
		.customButton2
		{
			backgroundColor: Black;
			fillColors: Gray, Yellow;
			borderColor: #333327;
			fontSize: 11pt;
			fontColor: Yellow;
			paddingLeft: 0;
			paddingRight: 0;
			paddingBottom: 0;
			paddingTop: 0;
		}
		.customButton3
		{
			backgroundColor: Black;
			fillColors: Gray, #69d2e7;
			borderColor: #69d2e7;
			fontSize: 11pt;
			fontColor: Yellow;
		}
		.customButton4
		{
			backgroundColor: Black;
			fillColors: Gray, #ff6600;
			borderColor: #ff6600;
			fontSize: 11pt;
			fontColor: Yellow;
		}
		
		.customFont
		{
			font-family: GotHeroin;
			font-size: 12pt;
			color: Yellow;
		}
		s|RadioButton	
		{
			fillColors: Yellow; 
		}	
		.customLineChart
		{
			fontFamily: nextUpdate2;
		}
		/*		mx|LineChart
		{
		fontFamily: Impact;
		} */
		mx|TextInput
		{
			disabledColor: white;
		}
	</fx:Style>
	<fx:Declarations>
		<mx:SeriesInterpolate id="interpolateIn" duration="50000" />
		<mx:SolidColorStroke id="green" color="yellow"/>
		<mx:SolidColorStroke id="red" color="yellow"/>
		<mx:SolidColorStroke id="white" /> <!-- BACKGROUND COLOR IS HERE! -->
		<mx:SolidColorStroke id="blue" color="yellow"/>
		<mx:CurrencyFormatter id="numForm" currencySymbol="" decimalSeparatorTo="." error="0.00" precision="2" thousandsSeparatorTo="," useThousandsSeparator="true" useNegativeSign="false" />
		<mx:CurrencyFormatter id="numForm2" currencySymbol="" decimalSeparatorTo="." error="0" precision="0" thousandsSeparatorTo="," useThousandsSeparator="true" useNegativeSign="false" />
		<mx:CurrencyFormatter id="numForm_erase" precision="0" currencySymbol='' useThousandsSeparator="false" useNegativeSign="false" />
		<mx:DateFormatter id="dateForm" formatString="MM/DD/YYYY" />
		<s:RadioButtonGroup id="ouncesOrGramsGold"/>
		<mx:Producer id="producer" destination="RandomDataPush" acknowledge="ack(event)"/>
		<mx:Consumer id="consumer" destination="RandomDataPush" message="messageHandler(event.message)"/>
		<s:Animate id="fader"
				   duration="500"
				   repeatBehavior="reverse"
				   repeatCount="0"
				   target="{overdueLabel}" 
				   >
			<s:SimpleMotionPath property="alpha"
								valueFrom="1.0" valueTo="0.0" />
		</s:Animate>
		<!--analytics:FlexTracker
			xmlns:analytics="com.google.analytics.components.*"
			id="tracker"
			account="UA-31150857-1"
			mode="AS3"
			visualDebug="false"
			/-->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flash.events.*;
			import flash.system.Capabilities;
			import flash.utils.setTimeout;
			
			import flashx.textLayout.elements.BreakElement;
			import flashx.textLayout.events.DamageEvent;
			import flashx.textLayout.formats.Float;
			
			import mx.charts.ChartItem;
			import mx.charts.HitData;
			import mx.charts.chartClasses.ChartElement;
			import mx.charts.chartClasses.DataTip;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.chartClasses.Series;
			import mx.charts.events.ChartEvent;
			import mx.charts.events.ChartItemEvent;
			import mx.charts.renderers.AreaRenderer;
			import mx.charts.renderers.CircleItemRenderer;
			import mx.charts.renderers.CrossItemRenderer;
			import mx.charts.renderers.LineRenderer;
			import mx.charts.renderers.ShadowLineRenderer;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.containers.ControlBar;
			import mx.containers.Grid;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.containers.HBox;
			import mx.containers.Panel;
			import mx.containers.TitleWindow;
			import mx.containers.VBox;
			import mx.controls.Alert;
			import mx.controls.ColorPicker;
			import mx.controls.DateField;
			import mx.controls.HSlider;
			import mx.controls.Label;
			import mx.controls.LinkButton;
			import mx.controls.ProgressBar;
			import mx.controls.TextInput;
			import mx.core.Container;
			import mx.core.IFlexDisplayObject;
			import mx.core.INavigatorContent;
			import mx.core.LayoutContainer;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.ColorPickerEvent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.SliderEvent;
			import mx.graphics.SolidColor;
			import mx.graphics.Stroke;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			import mx.messaging.ChannelSet;
			import mx.messaging.channels.AMFChannel;
			import mx.messaging.events.MessageAckEvent;
			import mx.messaging.events.MessageFaultEvent;
			import mx.messaging.messages.AsyncMessage;
			import mx.messaging.messages.IMessage;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			import mx.skins.Border;
			import mx.states.SetStyle;
			import mx.utils.StringUtil;
			import mx.utils.object_proxy;
			
			import nochump.util.zip.ZipEntry;
			import nochump.util.zip.ZipFile;
			
			import spark.components.BorderContainer;
			import spark.components.BusyIndicator;
			import spark.components.Button;
			import spark.components.ComboBox;
			import spark.components.Group;
			import spark.components.TextArea;
			import spark.components.TitleWindow;
			import spark.core.IDisplayText;
			import spark.layouts.HorizontalLayout;
			
			/*			import com.google.analytics.GATracker;
			import com.google.analytics.AnalyticsTracker; */
			
			[Bindable]
			private var isThisZoomMode:Boolean = false;
			[Bindable]
			private var A:Array = new Array();
			[Bindable]
			private var T:Array = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'];
			[Bindable]
			private var currencies:Array = ["ARS","AUD","BRL","CAD","CHF","CNY","COP","EUR","GBP","HKD","IDR","INR","JPY","KWD","MXN","MYR","NZD","PEN","PHP","RUR","SEK","SGD","TRY","USD","VUV","ZAR"];
			[Bindable]
			private var fontsSelect:Array = ["Arial", "Times New Roman", "Courier New", "Georgia", "Verdana", "Batong", "Gulim", "SimSun"];
			[Bindable]
			private var weightData:Array = [1, 2, 3, 4, 5];
			[Bindable]
			private var weightDataAxis:Array = [1,2,3,4,5,6,7,8,9,10,11,12,13,14];
			[Bindable]
			private var fontSizeValues:Array = [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];
			[Bindable]
			private var fontWeightValues:Array = ['normal','bold'];
			[Bindable]
			private var fontStyleValues:Array = ['normal','italic'];
			[Bindable]
			private var gridDirectionValues:Array = ['both','horizontal','vertical'];
			[Bindable]
			private var D_a:Date;
			[Bindable]
			private var D_b:Date;
			[Bindable]
			private var T_a_3Days:String = "00:00";
			[Bindable]
			private var T_a_3Days_:String = '';
			[Bindable]
			private var T_b_3Days:String = "23:58";
			[Bindable]
			private var T_a_Today:String = "00:00";
			[Bindable]
			private var T_a_Today_:String = '';
			[Bindable]
			private var T_b_Today:String = '23:58';
			[Bindable]
			private var Arr:Array = new Array();
			[Bindable]
			private var Arr3Days:Array = new Array();
			[Bindable]
			private var Arr3Days1:Array = new Array();
			[Bindable]
			private var Arr3Days2:Array = new Array();
			[Bindable]
			private var Arr3Days3:Array = new Array();
			[Bindable]
			private var Arr3Days4:Array = new Array();
			[Bindable]
			private var ArrToday:Array = new Array();
			[Bindable]
			private var ArrToday1:Array = new Array();
			[Bindable]
			private var ArrToday2:Array = new Array();
			[Bindable]
			private var ArrToday3:Array = new Array();
			[Bindable]
			private var ArrToday4:Array = new Array();
			private var original_chart_style:ClassFactory;
			[Bindable]
			private var currencyCode:String = new String('USD');
			[Bindable]
			private var currencyCode2:String = new String('USD');
			[Bindable]
			private var ouncesOrGrams:String = new String('o');
			[Bindable]
			private var metal:String = new String('gld');
			[Bindable]
			private var latestGoldPrice:String = '';
			[Bindable]
			private var latestSilverPrice:String = '';
			[Bindable]
			private var latestPlatinumPrice:String = '';
			[Bindable]
			private var latestPalladiumPrice:String = '';
			[Bindable]
			private var latestGoldPriceOz:String = '';
			[Bindable]
			private var latestSilverPriceOz:String = '';
			[Bindable]
			private var latestPlatinumPriceOz:String = '';
			[Bindable]
			private var latestPalladiumPriceOz:String = '';
			[Bindable]
			private var nt:String = '';
			[Bindable]
			private var ct:String = '';
			private var firstRun:Boolean = true;
			private var globalHistoryZoom:Number = 0;
			private var autoUpdateOnHistoricalData:Boolean = true;
			private var previousChartEntry:String = new String('a');
			private var previousChartEntry2:String = new String('a');
			private var counter:int = 0;
			private var wasIt1:Boolean = false;
			private var panel:Panel;
			private var chartStyle:Array = new Array();
			private var isCustomButtonOn:Boolean = false;
			private var isMySavedStylesButtonOn:Boolean = false;
			private var pb:ProgressBar = new ProgressBar();
			private var oldCurrencyCode:int = -1;
			private var oldMetal:String = '';
			private var endMinutesNow:String = ''
			private var endMinutesNowInt:int = 0;
			private var firstRun1:Boolean = true;
			[Bindable]
			private var ac:ArrayCollection;
			[Bindable]
			private var todayDate:String;
			[Bindable]
			private var dateMinusOne:String;
			[Bindable]
			private var dateMinusTwo:String;
			[Bindable]
			private var totalWorthv:String = '0.00';
			[Bindable]
			private var gldWorthv:String = '0.00';
			[Bindable]
			private var slvWorthv:String = '0.00';
			[Bindable]
			private var pltWorthv:String = '0.00';
			[Bindable]
			private var pldWorthv:String = '0.00';
			private var jan:int = 0;
			private var ThreeDaysZoomTable:Array = new Array;
			private var TodayZoomTable:Array = new Array;
			/*			[Bindable]
			private var spin1:Spinner = new Spinner(); */
			private var allData:Array;
			private var allHistoryData:Array = new Array;
			private var ARS:Array = new Array;
			private var AUD:Array = new Array;
			private var BRL:Array = new Array;
			private var CAD:Array = new Array;
			private var CHF:Array = new Array;
			private var CNY:Array = new Array;
			private var COP:Array = new Array;
			private var EUR:Array = new Array;
			private var GBP:Array = new Array;
			private var HKD:Array = new Array;
			private var IDR:Array = new Array;
			private var INR:Array = new Array;
			private var JPY:Array = new Array;
			private var KWD:Array = new Array;
			private var MXN:Array = new Array;
			private var MYR:Array = new Array;
			private var NZD:Array = new Array;
			private var PEN:Array = new Array;
			private var PHP:Array = new Array;
			private var RUR:Array = new Array;
			private var SEK:Array = new Array;
			private var SGD:Array = new Array;
			private var TRY:Array = new Array;
			private var USD:Array = new Array;
			private var VUV:Array = new Array;
			private var ZAR:Array = new Array;
			private var GLDSLV:Array = new Array;
			private var GLDPLT:Array = new Array;
			private var GLDPLD:Array = new Array;
			private var ARSh:Array = new Array;
			private var AUDh:Array = new Array;
			private var BRLh:Array = new Array;
			private var CADh:Array = new Array;
			private var CHFh:Array = new Array;
			private var CNYh:Array = new Array;
			private var COPh:Array = new Array;
			private var EURh:Array = new Array;
			private var GBPh:Array = new Array;
			private var HKDh:Array = new Array;
			private var IDRh:Array = new Array;
			private var INRh:Array = new Array;
			private var JPYh:Array = new Array;
			private var KWDh:Array = new Array;
			private var MXNh:Array = new Array;
			private var MYRh:Array = new Array;
			private var NZDh:Array = new Array;
			private var PENh:Array = new Array;
			private var PHPh:Array = new Array;
			private var RURh:Array = new Array;
			private var SEKh:Array = new Array;
			private var SGDh:Array = new Array;
			private var TRYh:Array = new Array;
			private var USDh:Array = new Array;
			private var VUVh:Array = new Array;
			private var ZARh:Array = new Array;
			private var index_value:int = 0;
			private var Cline:int = 0;
			[Bindable]
			private var rotationInterval:int = 40;
			private var BC:BorderContainer = new BorderContainer();
			private var WB:BorderContainer = new BorderContainer();			
			private var newButton:mx.controls.Button = new mx.controls.Button();
			private var rotationIntervalAdjuster:Timer = new Timer(rotationInterval);
			private var adjustmentFactor:Number = 1.2;
			private var userButtonName:String = new String();
			private var userItemPrice:String = new String();
			private var userCurrency:int = 23;
			private var userMetal:int;
			private var rightGtp:HGroup = new HGroup();
			private var weekend:String = new String();
			[Bindable]
			private var ButtonSelect:String = new String();
			private var todayLabel:mx.controls.Label = new mx.controls.Label;
			private var yesterdayLabel:mx.controls.Label = new mx.controls.Label;
			private var twoDaysAgoLabel:mx.controls.Label = new mx.controls.Label;
			private var chartBkdLabel:mx.controls.Label = new mx.controls.Label;
			private var overdueLabel:mx.controls.Label = new mx.controls.Label;
			private var chartLabel:mx.controls.Label = new mx.controls.Label;
			private var warningLabel:mx.controls.Label = new mx.controls.Label;
			private var zoomSliderLabel:mx.controls.Label = new mx.controls.Label;
			private var zoomSliderLabel1:mx.controls.Label = new mx.controls.Label;
			private var zoomSliderLabel2:mx.controls.Label = new mx.controls.Label;
			private var zoomSliderLabel3:mx.controls.Label = new mx.controls.Label;
			private var timer:Timer; 
			private var m_num:int; 
			private var s_num:int; 
			private var betaLabel:mx.controls.Label = new mx.controls.Label;
			private var WKD:Boolean = false;
			private var negative:Boolean = true;
			private var sliderPositions:Array = [-1,-1,-1,-1,-1,-1];
			private var ArrHistoryG:Array = new Array();
			private var globalX:Number;
			[Bindable]
			private var old_chartLabel:String = '';
			private var checkIfFirstRun:Boolean = true;
			//			public var tracker:AnalyticsTracker;
			
			// Server data push STARTS HERE:			
			private function init():void
			{
				if (ExternalInterface.available)	{
					ExternalInterface.call("eval", "document.getElementById('" + ExternalInterface.objectID + "').tabIndex=0");
					ExternalInterface.call("eval", "document.getElementById('" + ExternalInterface.objectID + "').focus()");
				}
				var msg:AsyncMessage = new AsyncMessage();
				
				if (Capabilities.cpuArchitecture == "ARM") {
					NativeApplication.nativeApplication.addEventListener(Event.ACTIVATE, handleActivate, false, 0, true);
				}
				
				//				Alert.show();
				
				msg.body = "New";
				producer.send(msg);
				consumer.subscribe();
				var fileLoad:URLLoader = new URLLoader();
				fileLoad.dataFormat = URLLoaderDataFormat.BINARY;
				fileLoad.load(new URLRequest("http://goldpricecafe.com:8400/alive5/Alive6_HiRes/data.zip"));
				fileLoad.addEventListener(Event.COMPLETE, onZIPLoaded);
				// START original chart style:
				/*				chartStyle = ["0x000000","0x7D7D43","Arial","12","normal","normal","both","0x333333","1","1","0x333333","1","1","0x000000","0","0x000000","0","0xffff00","1","0x000000","1","yellow",
				"1","0xff6600","1","0x333333","1","1","0x333333","1","1","Arial","12","normal","normal","Yellow","Arial","12","normal","normal","Yellow","Arial","12","normal","normal","Yellow","Arial",
				"12","normal","normal","Yellow"]; */
				// END of original chart style.
				/*				chartStyle = ["0x000000","0x7D7D43","nextUpdate","12","normal","normal","both","0x333333","1","1","0x333333","1","1","0x000000","0","0x000000","0","0xFFff00","3","0x000000","3","0x333327",
				"3","0x80803b","3","0x333333","1","1","0x333333","1","1","nextUpdate","20","normal","normal","0xc7c701","nextUpdate","20","normal","normal","0xc7c701","nextUpdate","20","normal","normal","0xc7c701","nextUpdate",
				"20","normal","normal","0xc7c701"];*/
				chartStyle = ["0x000000","0x7D7D43","nextUpdate","18","normal","normal","both","0x333333","1","1","0x333333","1","1","0x000000","0","0x000000","0","0xFFff00","2","0x000000","2","0x525235",
					"2","0x80803b","2","0x333333","1","1","0x333333","1","1","nextUpdate","20","normal","normal","0xc7c701","nextUpdate","20","normal","normal","0xc7c701","nextUpdate","20","normal","normal","0xc7c701","nextUpdate",
					"20","normal","normal","0xc7c701"];
				chartStyleLoad();  		
				var fileLoad2:URLLoader = new URLLoader();
				fileLoad2.load(new URLRequest("http://goldpricecafe.com:8400/alive5/Alive6_HiRes/time.txt"));
				fileLoad2.addEventListener(Event.COMPLETE, onTIMELoaded);
				zoomingButtons("off");
			}
			
			private function handleActivate(event:Event):void {
				NativeApplication.nativeApplication.systemIdleMode = SystemIdleMode.KEEP_AWAKE;
			}
			
			// received message handling:			
			private function messageHandler(message:IMessage):void	{
				var allDataC:ArrayCollection = new ArrayCollection;
				allDataC = message.body as ArrayCollection;
				allData = allDataC.toArray();
				weekend = allData.pop(); 
				Cline = allData.pop();
				drawUpdateButton();
				extractLatestDataFromServer();
				gldWorthv=(parseFloat(latestGoldPriceOz)*parseFloat(goldozcalc.text)).toFixed(2);
				slvWorthv=(parseFloat(latestSilverPriceOz)*parseFloat(silvozcalc.text)).toFixed(2); 
				pltWorthv=(parseFloat(latestPlatinumPriceOz)*parseFloat(platozcalc.text)).toFixed(2); 
				pldWorthv=(parseFloat(latestPalladiumPriceOz)*parseFloat(pallozcalc.text)).toFixed(2); 
				totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString();
				m_num=2;
				s_num=0;
				if (timer.running == false)	{
					chartBkdLabel.text = 'UPDATED!';
					timer.start();
					overdueLabel.visible = false;
				}
				buildChartLabel();
			}
			
			// received message handling & error handling:
			private function handleFault(event:MessageFaultEvent):void
			{
				Alert.show(event.faultString);
			}
			
			private function ack(event:MessageAckEvent):void
			{
			}
			// Server data push ENDS HERE.	
			
			private function onTIMELoaded(e:Event):void	{
				var loadedData:String = new String;
				var arrmmss:Array = new Array;
				var mmss:String = new String;
				
				loadedData = e.target.data;
				mmss = loadedData;
				arrmmss = mmss.split(':');
				s_num = 68 - parseInt(arrmmss[1]);
				if (parseInt(arrmmss[0]) % 2 == 0)	{
					m_num = 1;
				}	else	{
					m_num = 0;
				}
				if (s_num > 60)	{ 
					s_num = 60 - s_num; m_num++;
				}
				timer = new Timer(1000); 
				timer.addEventListener(TimerEvent.TIMER, onTimer); 
				timer.start();
			}
			
			private function onZIPLoaded(e:Event):void {
				var loadedData:IDataInput; 
				loadedData = e.target.data;
				var zipFile:ZipFile = new ZipFile(loadedData); 
				var entry:ZipEntry = zipFile.entries[0];
				// extract the entry's data from the zip     
				var data:ByteArray = zipFile.getInput(entry);
				allData = data.toString().split("\n");
				weekend = allData.pop(); 
				Cline = allData.pop();
				todayDate = allData.pop();
				dateMinusOne = allData.pop();
				dateMinusTwo = allData.pop();
				extractDataFromServer();
				/*				var myDate:Date = new Date();
				var unixTime:Number = Math.round(myDate.getTime());
				var sinceLastUpdate:int = int(((unixTime - entry.time)/1000))-25200;
				if (sinceLastUpdate < 60)	{
				m_num = 0;
				s_num = 60-sinceLastUpdate;
				} 
				if ((sinceLastUpdate < 120) && (sinceLastUpdate > 59))	{
				m_num = 1;
				s_num = 120-sinceLastUpdate;
				} */
				busyOff();
				if (checkIfFirstRun == true) { 
					checkIfFirstRun = false; 
					doAutoZoom(); 
				}
			}
			
			private function onHistoryZIPLoaded(e:Event):void	{
				var loadedData:IDataInput; 
				loadedData = e.target.data;
				var zipFile:ZipFile = new ZipFile(loadedData); 
				var entry:ZipEntry = zipFile.entries[0];
				// extract the entry's data from the zip     
				var data:ByteArray = zipFile.getInput(entry);
				allHistoryData = data.toString().split("\n");
				extractHistoryDataFromServer();
			}
			
			private function onCreationComplete(e:Event):void 
			{
				//				rotationIntervalAdjuster.addEventListener(TimerEvent.TIMER, tick);
				/*this.scaleX = 1.2;
				this.scaleY = 1.2;*/
				//this.stage.displayState = StageDisplayState.FULL_SCREEN;
				/*var current:Screen;
				var scrArray:Array = Screen.screens;
				var screens:Array = Screen.getScreensForRectangle(stage.nativeWindow.bounds);
				(screens.length > 0) ? current = screens[0] : current = Screen.mainScreen;
				this.width = current.bounds.width ;
				this.height = current.bounds.height;*/
				/*this.height = Screen.mainScreen.bounds.height;
				this.width = Screen.mainScreen.bounds.width;*/
				//this.width = Capabilities.screenResolutionX;
				/*this.height = Capabilities.screenResolutionY; 
				this.width = Capabilities.screenResolutionX;
				this.scaleY=((100-((this.height * 100)/Capabilities.screenResolutionY))/100)+1;
				goldozcalc.text = Screen.mainScreen.bounds.height.toString();
				silvozcalc.text = Capabilities.screenResolutionX.toString();
				platozcalc.text = this.height.toString();
				pallozcalc.text = this.width.toString();*/
				//goldozcalc.text = Screen.mainScreen.bounds.width.toString();
				//silvozcalc.text = chart.width.toString();
				//platozcalc.text = Screen.mainScreen.bounds.height.toString();
				//pallozcalc.text = chart.height.toString(); 
				this.scaleY=((100-((chart.height * 100)/Screen.mainScreen.bounds.height))/100)+0.5;
				this.scaleX=((100-((chart.width * 100)/Screen.mainScreen.bounds.width))/100)+1;
				busyOn();
				init(); 
			}
			
			private function onTimer(event:TimerEvent):void {
				if ((weekend == "weekend") && (chartbtn.selectedIndex != 2))	{
					if (WKD == false)	{
						WKD = true;
						//						chartBkdLabel.x = 450;
					}
					/*				if (chartBkdLabel.x == 0) {
					negative = false;
					}
					if (chartBkdLabel.x == 450) {
					negative = true;
					} */
					chartBkdLabel.setStyle("color","0x656500");
					chartBkdLabel.setStyle("fontSize","40");
					/*					timer.delay = 100;
					if (negative)	{
					chartBkdLabel.x -= 3;
					} else	{
					chartBkdLabel.x += 3;						
					} */
					chartBkdLabel.y = -147;
					chartBkdLabel.x = 20;
					chartBkdLabel.text = 'The Market is Closed. Latest Prices:';
					return;
				} 
				
				//				if (chartbtn.selectedIndex != 2)	{ 
				WKD = false;
				if (timer.delay != 1000) { 
					timer.delay = 1000; 
					chartBkdLabel.setStyle("fontFamily","nextUpdate");
					chartBkdLabel.setStyle("color","yellow");
					chartBkdLabel.setStyle("fontSize",15);
					chartBkdLabel.alpha = 1;
					chartBkdLabel.width = 700;
					chartBkdLabel.height = 50;
					chartBkdLabel.x = 775;
					chartBkdLabel.y = -10;
				}
				
				var mm:String; 
				var ss:String; 
				
				s_num--; 
				if ((s_num == -1) && (m_num > 0)) { 
					m_num--; 
					s_num = 59; 
				} 
				if (s_num < 0) { 
					if (!(overdueLabel.visible))	{
						s_num = 0; 
						timer.stop(); 
						chartBkdLabel.text = 'Next Live Price Update ';     
						overdueLabel.visible = true;
						fader.play();
//						//tracker.trackPageview("waiting...");
						return;
					}
				}
				mm =  (m_num < 10) ? "0" + m_num.toString() : m_num.toString(); 
				ss = (s_num < 10) ? "0" + s_num.toString() : s_num.toString(); 
				chartBkdLabel.setStyle("color","0x656500");
				chartBkdLabel.setStyle("fontSize",50);
				chartBkdLabel.alpha = 1;
				chartBkdLabel.width = 1000;
				chartBkdLabel.height = 65;
				chartBkdLabel.x = 0;
				chartBkdLabel.y = -155;
				chartBkdLabel.text = 'Next Live Price Update  '+mm+':'+ss;
				//					//tracker.trackPageview("odlicza czas ok");
				/*				} else {
				chartBkdLabel.text = '';
				}*/
			} 			
			
			private function busyOn():void
			{
				rotationIntervalAdjuster.delay = rotationInterval;
				rotationIntervalAdjuster.start();
				throbber.visible = true;
			}
			
			private function busyOff():void
			{
				rotationIntervalAdjuster.reset();
				throbber.visible = false;
			}
			
			private function uncompressData(inputFile:String):void
			{
			}
			
			private function drawUpdateButton():void	{
				var button:mx.controls.Button = new mx.controls.Button();
				button.label = "CHART UPDATED";
				button.styleName = "customButton2";
				button.alpha = 0.7;
				button.setStyle("fontFamily","Arial");
				button.setStyle("color","Yellow");
				button.setStyle("fontSize","14");
				button.height = 40;
				button.width = 200;
				/*				button.scaleX = 0.60;
				button.scaleY = 0.60;*/ 
				button.x = 260;
				button.y = 200;
				PopUpManager.addPopUp(button, chart, false);
				//				PopUpManager.centerPopUp(button); 
				setTimeout(function():void { PopUpManager.removePopUp(button)}, 2500);
				chart.invalidateDisplayList(); 
				/*				updateBtnChart.visible = true;
				setTimeout(function():void { updateBtnChart.visible = false }, 400);
				updateBtnPrices.visible = true;
				setTimeout(function():void { updateBtnPrices.visible = false }, 600); */
				////tracker.trackPageview("chart updated");
			}
			
			/*			private function deleteUpdateButton():void	{
			PopUpManager.removePopUp(button);
			} */ 
			
			private function extractDataFromServer():void	{
				var lastLine:String = allData[allData.length-1].toString();;
				
				var linesLength:Array = lastLine.split(" ");
				var i:int;
				var j:int;
				var last_j:int = 0;
				var index_count:int;
				
				//				Alert.show("linesLength length:"+linesLength.length+"\nlinesLength[1]:"+linesLength[1].toString()+"\nlinesLength[last]:"+linesLength[linesLength.length-1]);
				
				
				for (i = 1; i < 31; i++) 
				{
					index_count = 0;
					linesLength[i]--;
					for (j = last_j+1; index_count <= linesLength[i]; j++)
					{
						index_count++;
						switch (i)	{
							case 1: ARS.push(allData[j]); break;
							case 2: AUD.push(allData[j]); break;
							case 3: BRL.push(allData[j]); break;
							case 4: CAD.push(allData[j]); break;
							case 5: CHF.push(allData[j]); break;
							case 6: CNY.push(allData[j]); break;
							case 7: COP.push(allData[j]); break;
							case 8: EUR.push(allData[j]); break;
							case 9: GBP.push(allData[j]); break;
							case 10: HKD.push(allData[j]); break;
							case 11: IDR.push(allData[j]); break;
							case 12: INR.push(allData[j]); break;
							case 13: JPY.push(allData[j]); break;
							case 14: KWD.push(allData[j]); break;
							case 15: MXN.push(allData[j]); break;
							case 16: MYR.push(allData[j]); break;
							case 17: NZD.push(allData[j]); break;
							case 18: PEN.push(allData[j]); break;
							case 19: PHP.push(allData[j]); break;
							case 20: RUR.push(allData[j]); break;
							case 21: SEK.push(allData[j]); break;
							case 22: SGD.push(allData[j]); break;
							case 23: TRY.push(allData[j]); break;
							case 24: USD.push(allData[j]); break;
							case 25: VUV.push(allData[j]); break;
							case 26: ZAR.push(allData[j]); break;
							case 27: GLDSLV.push(allData[j]); break;
							case 28: GLDPLT.push(allData[j]); break;
							case 29: GLDPLD.push(allData[j]); break;
						}
					}
					last_j = j;
				}	
				
				if (indivChartBtn.emphasized) populateChart('individual') else if (newButton.emphasized) populateChart('user') else if (gldslvratioBtn.emphasized) populateChart('goldsilverratio') else if (gldpltratioBtn.emphasized) populateChart('goldplatinumratio') else populateChart('');
				setChartBackground();	
			}
			
			private function zoomFilter(o:Object):Boolean	{
				return true;
			}
			
			private function extractHistoryDataFromServer():void	{
				var line:String;
				var currentCurrency:String;
				
				for each (line in allHistoryData)	{
					if (!(line.match(',')))	{ currentCurrency = line; continue; }
					else	{
						if (currentCurrency == 'ARS')	{ ARSh.push(line); continue;}
						if (currentCurrency == 'AUD')	{ AUDh.push(line); continue;}
						if (currentCurrency == 'BRL')	{ BRLh.push(line); continue;}						
						if (currentCurrency == 'CAD')	{ CADh.push(line); continue;}						
						if (currentCurrency == 'CHF')	{ CHFh.push(line); continue;}						
						if (currentCurrency == 'CNY')	{ CNYh.push(line); continue;}						
						if (currentCurrency == 'COP')	{ COPh.push(line); continue;}						
						if (currentCurrency == 'EUR')	{ EURh.push(line); continue;}						
						if (currentCurrency == 'GBP')	{ GBPh.push(line); continue;}						
						if (currentCurrency == 'HKD')	{ HKDh.push(line); continue;}						
						if (currentCurrency == 'IDR')	{ IDRh.push(line); continue;}						
						if (currentCurrency == 'INR')	{ INRh.push(line); continue;}						
						if (currentCurrency == 'JPY')	{ JPYh.push(line); continue;}						
						if (currentCurrency == 'KWD')	{ KWDh.push(line); continue;}						
						if (currentCurrency == 'MXN')	{ MXNh.push(line); continue;}						
						if (currentCurrency == 'MYR')	{ MYRh.push(line); continue;}						
						if (currentCurrency == 'NZD')	{ NZDh.push(line); continue;}						
						if (currentCurrency == 'PEN')	{ PENh.push(line); continue;}						
						if (currentCurrency == 'PHP')	{ PHPh.push(line); continue;}						
						if (currentCurrency == 'RUR')	{ RURh.push(line); continue;}						
						if (currentCurrency == 'SEK')	{ SEKh.push(line); continue;}						
						if (currentCurrency == 'SGD')	{ SGDh.push(line); continue;}						
						if (currentCurrency == 'TRY')	{ TRYh.push(line); continue;}						
						if (currentCurrency == 'USD')	{ USDh.push(line); continue;}						
						if (currentCurrency == 'VUV')	{ VUVh.push(line); continue;}						
						if (currentCurrency == 'ZAR')	{ ZARh.push(line); continue;}						
					}	
				}
				
				//USDh.filter(zoomFilter);
				
				if (currencyComboBoxGold.selectedIndex == 0) { drawChart_History(ARSh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=ARSh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 1) { drawChart_History(AUDh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=AUDh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 2) { drawChart_History(BRLh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=BRLh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 3) { drawChart_History(CADh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=CADh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 4) { drawChart_History(CHFh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=CHFh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 5) { drawChart_History(CNYh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=CNYh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 6) { drawChart_History(COPh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=COPh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 7) { drawChart_History(EURh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=EURh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 8) { drawChart_History(GBPh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=GBPh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 9) { drawChart_History(HKDh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=HKDh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 10) { drawChart_History(IDRh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=IDRh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 11) { drawChart_History(INRh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=INRh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 12) { drawChart_History(JPYh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=JPYh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 13) { drawChart_History(KWDh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=KWDh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 14) { drawChart_History(MXNh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=MXNh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 15) { drawChart_History(MYRh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=MYRh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 16) { drawChart_History(NZDh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=NZDh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 17) { drawChart_History(PENh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=PENh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 18) { drawChart_History(PHPh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=PHPh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 19) { drawChart_History(RURh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=RURh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 20) { drawChart_History(SEKh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=SEKh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 21) { drawChart_History(SGDh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=SGDh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 22) { drawChart_History(TRYh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=TRYh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 23) { drawChart_History(USDh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=USDh.length-1; return; }					
				if (currencyComboBoxGold.selectedIndex == 24) { drawChart_History(VUVh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=VUVh.length-1;return; }					
				if (currencyComboBoxGold.selectedIndex == 25) { drawChart_History(ZARh); sliderPositions[4]=0; zoomSlider.values[1]=sliderPositions[5]=ZARh.length-1;return; }	
			}
			
			private function extractLatestDataFromServer():void	{
				for (var i:int = 0; i < 30; i++)
				{
					switch (i)	{
						case 0: ARS[Cline] = allData[i]; break; 
						case 1: AUD[Cline] = allData[i]; break;
						case 2: BRL[Cline] = allData[i]; break;
						case 3: CAD[Cline] = allData[i]; break;
						case 4: CHF[Cline] = allData[i]; break;
						case 5: CNY[Cline] = allData[i]; break;
						case 6: COP[Cline] = allData[i]; break;
						case 7: EUR[Cline] = allData[i]; break;
						case 8: GBP[Cline] = allData[i]; break;
						case 9: HKD[Cline] = allData[i]; break;
						case 10: IDR[Cline] = allData[i]; break;
						case 11: INR[Cline] = allData[i]; break;
						case 12: JPY[Cline] = allData[i]; break;
						case 13: KWD[Cline] = allData[i]; break;
						case 14: MXN[Cline] = allData[i]; break;
						case 15: MYR[Cline] = allData[i]; break;
						case 16: NZD[Cline] = allData[i]; break;
						case 17: PEN[Cline] = allData[i]; break;
						case 18: PHP[Cline] = allData[i]; break;
						case 19: RUR[Cline] = allData[i]; break;
						case 20: SEK[Cline] = allData[i]; break;
						case 21: SGD[Cline] = allData[i]; break;
						case 22: TRY[Cline] = allData[i]; break;
						case 23: USD[Cline] = allData[i]; break;
						case 24: VUV[Cline] = allData[i]; break;
						case 25: ZAR[Cline] = allData[i]; break;
						case 26: GLDSLV[Cline] = allData[i]; break;
						case 27: GLDPLT[Cline] = allData[i]; break;
						case 28: GLDPLD[Cline] = allData[i]; break;
					}
				}
				if (indivChartBtn.emphasized) populateChart('individual') else if (newButton.emphasized) populateChart('user') else if (gldslvratioBtn.emphasized) populateChart('goldsilverratio') else if (gldpltratioBtn.emphasized) populateChart('goldplatinumratio') else populateChart('');
				//				setChartBackground();	
			}
			
			/*			private function replaceLine(inputArray:Array, s:String):int	{
			var a:String = s.split(",")[0];
			var hh:String = a.split(":")[0];
			var mm:String = a.split(":")[1];
			var i:int=0;
			var ln:int = inputArray.length;
			
			for (i = 0; i < ln; i++)	{
			if (inputArray[i].match(a))	{
			index_value = i;
			return index_value;
			break;
			}
			}	
			return index_value;
			} */
			
			private function doAutoZoom():void	{
				var zoomLocale:int = 0;
				var i:int = 0;
				
				for (i = 719; i>=0; i--)	{
					if (ArrToday[i].split(',')[1] != "\"\"")	{
						zoomLocale = i;
						break;
					}
				}
				
				if (zoomLocale > 44)	{
					sliderPositions[2] = zoomSlider.values[0] = zoomLocale-60;
				}	else	{
					sliderPositions[2] = zoomSlider.values[0] = 0;
				}
				if (zoomLocale < 720)	{
					sliderPositions[3] = zoomSlider.values[1] = zoomLocale+30;
				}	else	{
					sliderPositions[2] = zoomSlider.values[0] = 719;					
				}
				
				T_a_Today = ArrToday[sliderPositions[2]].split(',')[0];
				T_b_Today = ArrToday[sliderPositions[3]].split(',')[0];
				drawChart_Today('');				
			}
			
			private function zoomCheck():void	{
				/*				if ((TodayZoomTable.length > 0) && (chartbtn.selectedIndex == 1))
				zoomingButtons("on");
				if ((ThreeDaysZoomTable.length > 0) && (chartbtn.selectedIndex == 0))
				zoomingButtons("on");
				if ((TodayZoomTable.length == 0) && (chartbtn.selectedIndex == 1))
				zoomingButtons("off");
				if ((ThreeDaysZoomTable.length == 0) && (chartbtn.selectedIndex == 0))
				zoomingButtons("off");  */
				if (chartbtn.selectedIndex == 0)	{
					todayLabel.visible = true;
					yesterdayLabel.visible = true;
					twoDaysAgoLabel.visible = true;
					zoomSlider.minimum = 0;
					zoomSlider.maximum = 719; 
					zoomSlider.values[0] = sliderPositions[0];
					zoomSlider.values[1] = sliderPositions[1];
				}
				if (chartbtn.selectedIndex == 1)	{
					todayLabel.visible = false;
					yesterdayLabel.visible = false;
					twoDaysAgoLabel.visible = false;
					zoomSlider.minimum = 0;
					zoomSlider.maximum = 719; 
					zoomSlider.values[0] = sliderPositions[2];
					zoomSlider.values[1] = sliderPositions[3];
				}
				if (chartbtn.selectedIndex == 2)	{
					todayLabel.visible = false;
					yesterdayLabel.visible = false;
					twoDaysAgoLabel.visible = false;
					/*					zoomSlider.maximum = USDh.length-1;
					zoomSlider.values[0] = 0;
					zoomSlider.values[1] = USDh.length-1;*/ 
				}
				zoomSlider.invalidateDisplayList();
			}
			
			private function convertTo(multi_array:Array, input_array:Array, option:String, ounces:Boolean):Array	{
				var output_array:Array = new Array();
				var input_extra_array:Array = new Array();
				var multi_extra_array:Array = new Array();
				var time_field:String = new String();
				var field1:Number;
				var field2:Number;
				var field3:Number;
				if (option == 'threeDays')	{
					for (var g:int = 0; g < 720; g++)	{
						input_extra_array = input_array[g].split(","); 
						multi_extra_array = multi_array[g].split(","); 
						time_field = input_extra_array[0];
						if (ounces)	{
							field1 = input_extra_array[1] / multi_extra_array[1];
							field2 = input_extra_array[2] / multi_extra_array[2];
							field3 = input_extra_array[3] / multi_extra_array[3];
						}	else	{
							field1 = input_extra_array[1] / multi_extra_array[1] / 31.1034768;
							field2 = input_extra_array[2] / multi_extra_array[2] / 31.1034768;
							field3 = input_extra_array[3] / multi_extra_array[3] / 31.1034768;							
						}
						output_array[g] = time_field+','+field1+','+field2+','+field3;
					}
				}
				if (option == 'oneDay')	{
					for (var g:int = 0; g < 720; g++)	{
						input_extra_array = input_array[g].split(","); 
						multi_extra_array = multi_array[g].split(","); 
						time_field = input_extra_array[0];
						if (ounces)	{
							field1 = (input_extra_array[1] / multi_extra_array[1]);
						}	else	{
							field1 = (input_extra_array[1] / multi_extra_array[1] / 31.1034768);
						}
						output_array[g] = time_field+','+field1;
					}
				}
				return output_array;					
			}
			
			private function convertToOneDay(input_array:Array,ounces:Boolean):Array	{
				var output_array:Array = new Array();
				var extra_array:Array = new Array();
				for (var g:int = 0; g < 720; g++)	{
					extra_array = input_array[g].split(",");
					if (ounces == false)	{
						extra_array[1] = (extra_array[1] / 31.1034768);
					}
					output_array[g] = extra_array[0]+','+extra_array[1];
				}
				return output_array;
			}
			
			private function convert3Days2Grams(input_array:Array):Array	{
				var output_array:Array = new Array();
				var extra_array:Array = new Array();
				for (var g:int = 0; g < 720; g++)	{
					extra_array = input_array[g].toString().split(",");
					extra_array[1] = (extra_array[1] / 31.1034768);
					extra_array[2] = (extra_array[2] / 31.1034768);
					extra_array[3] = (extra_array[3] / 31.1034768);
					output_array[g] = extra_array[0]+','+extra_array[1]+','+extra_array[2]+','+extra_array[3];
				}
				return output_array;
			}
			
			private function populateChart(buttonSelect:String):void	{
				if (buttonSelect == 'goldsilverratio') {
					osy.title = 'Gold to Silver Ratio';
				} else	{
					if (buttonSelect == 'goldplatinumratio')	{
						osy.title = 'Gold to Platinum Ratio';
					} else	{
						osy.title = "Price in "+currencyComboBoxGold.value.toString();
					}
				}
				if ((chartbtn.selectedIndex == 0) || (chartbtn.selectedIndex == 1))	{
					if (latestGoldBtn.emphasized)	{ chartLabel.text = 'Live Gold '+osy.title+':   '+ numForm.format(latestGoldPrice) ; }
					if (latestSilverBtn.emphasized)	{ chartLabel.text = 'Live Silver '+osy.title+':   '+ numForm.format(latestSilverPrice); }
					if (latestPlatinumBtn.emphasized)	{ chartLabel.text = 'Live Platinum '+osy.title+':   '+ numForm.format(latestPlatinumPrice); }
					if (latestPalladiumBtn.emphasized)	{ chartLabel.text = 'Live Palladium '+osy.title+':   '+ numForm.format(latestPalladiumPrice); }
					if (gldslvratioBtn.emphasized)	{ chartLabel.text = 'Live Gold to Silver Ratio'; }
					if (gldpltratioBtn.emphasized)	{ chartLabel.text = 'Live Gold to Platinum Ratio'; }
				}
				if (buttonSelect == 'history')	{
					if (currencyComboBoxGold.selectedIndex == 0) { zoomSlider.maximum = ARSh.length-1; drawChart_History(ARSh, ARSh[sliderPositions[4]].split(',')[0], ARSh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 1) { zoomSlider.maximum = AUDh.length-1; drawChart_History(AUDh, AUDh[sliderPositions[4]].split(',')[0], AUDh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 2) { zoomSlider.maximum = BRLh.length-1; drawChart_History(BRLh, BRLh[sliderPositions[4]].split(',')[0], BRLh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 3) { zoomSlider.maximum = CADh.length-1; drawChart_History(CADh, CADh[sliderPositions[4]].split(',')[0], CADh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 4) { zoomSlider.maximum = CHFh.length-1; drawChart_History(CHFh, CHFh[sliderPositions[4]].split(',')[0], CHFh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 5) { zoomSlider.maximum = CNYh.length-1; drawChart_History(CNYh, CNYh[sliderPositions[4]].split(',')[0], CNYh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 6) { zoomSlider.maximum = COPh.length-1; drawChart_History(COPh, COPh[sliderPositions[4]].split(',')[0], COPh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 7) { zoomSlider.maximum = EURh.length-1; drawChart_History(EURh, EURh[sliderPositions[4]].split(',')[0], EURh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 8) { zoomSlider.maximum = GBPh.length-1; drawChart_History(GBPh, GBPh[sliderPositions[4]].split(',')[0], GBPh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 9) { zoomSlider.maximum = HKDh.length-1; drawChart_History(HKDh, HKDh[sliderPositions[4]].split(',')[0], HKDh[sliderPositions[5]].split(',')[0] ); return; }					
					if (currencyComboBoxGold.selectedIndex == 10) { zoomSlider.maximum = IDRh.length-1; drawChart_History(IDRh, IDRh[sliderPositions[4]].split(',')[0], IDRh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 11) { zoomSlider.maximum = INRh.length-1; drawChart_History(INRh, INRh[sliderPositions[4]].split(',')[0], INRh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 12) { zoomSlider.maximum = JPYh.length-1; drawChart_History(JPYh, JPYh[sliderPositions[4]].split(',')[0], JPYh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 13) { zoomSlider.maximum = KWDh.length-1; drawChart_History(KWDh, KWDh[sliderPositions[4]].split(',')[0], KWDh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 14) { zoomSlider.maximum = MXNh.length-1; drawChart_History(MXNh, MXNh[sliderPositions[4]].split(',')[0], MXNh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 15) { zoomSlider.maximum = MYRh.length-1; drawChart_History(MYRh, MYRh[sliderPositions[4]].split(',')[0], MYRh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 16) { zoomSlider.maximum = NZDh.length-1; drawChart_History(NZDh, NZDh[sliderPositions[4]].split(',')[0], NZDh[sliderPositions[5]].split(',')[0]); return; }					
					//					if (currencyComboBoxGold.selectedIndex == 17) { zoomSlider.maximum = PENh.length-1; if (sliderPositions[5]>zoomSlider.maximum) { sliderPositions[5] = zoomSlider.maximum; } drawChart_History(PENh, PENh[sliderPositions[4]].split(',')[0], PENh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 17) { zoomSlider.maximum = PENh.length-1; drawChart_History(PENh, PENh[sliderPositions[4]].split(',')[0], PENh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 18) { zoomSlider.maximum = PHPh.length-1; drawChart_History(PHPh, PHPh[sliderPositions[4]].split(',')[0], PHPh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 19) { zoomSlider.maximum = RURh.length-1; drawChart_History(RURh, RURh[sliderPositions[4]].split(',')[0], RURh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 20) { zoomSlider.maximum = SEKh.length-1; drawChart_History(SEKh, SEKh[sliderPositions[4]].split(',')[0], SEKh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 21) { zoomSlider.maximum = SGDh.length-1; drawChart_History(SGDh, SGDh[sliderPositions[4]].split(',')[0], SGDh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 22) { zoomSlider.maximum = TRYh.length-1; drawChart_History(TRYh, TRYh[sliderPositions[4]].split(',')[0], TRYh[sliderPositions[5]].split(',')[0]); return; }					
					//					if (currencyComboBoxGold.selectedIndex == 23) { zoomSlider.maximum = USDh.length-1; if (sliderPositions[5]>zoomSlider.maximum) { sliderPositions[5] = zoomSlider.maximum; } drawChart_History(USDh, USDh[sliderPositions[4]].split(',')[0], USDh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 23) { zoomSlider.maximum = USDh.length-1; drawChart_History(USDh, USDh[sliderPositions[4]].split(',')[0], USDh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 24) { zoomSlider.maximum = VUVh.length-1; drawChart_History(VUVh, VUVh[sliderPositions[4]].split(',')[0], VUVh[sliderPositions[5]].split(',')[0]); return; }					
					if (currencyComboBoxGold.selectedIndex == 25) { zoomSlider.maximum = ZARh.length-1; drawChart_History(ZARh, ZARh[sliderPositions[4]].split(',')[0], ZARh[sliderPositions[5]].split(',')[0]); return; }	
				}
				if (pmcGoldLabel && radioOunce)	{
					if (radioOunce.selected && pmcGoldLabel.text != 'Gold Ounces:')	{
						pmcGoldLabel.text = 'Gold Oz:';
						pmcSilverLabel.text = 'Silver Oz:';
						pmcPlatinumLabel.text = 'Platinum Oz:';
						pmcPalladiumLabel.text = 'Palladium Oz:';
						gldWorthv=(parseFloat(latestGoldPriceOz)*parseFloat(goldozcalc.text)).toFixed(2);
						slvWorthv=(parseFloat(latestSilverPriceOz)*parseFloat(silvozcalc.text)).toFixed(2); 
						pltWorthv=(parseFloat(latestPlatinumPriceOz)*parseFloat(platozcalc.text)).toFixed(2); 
						pldWorthv=(parseFloat(latestPalladiumPriceOz)*parseFloat(pallozcalc.text)).toFixed(2); 
						totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString();
					}
					if (radioGram.selected && pmcGoldLabel.text != 'Gold Grams:')	{
						pmcGoldLabel.text = 'Gold Gr:';
						pmcSilverLabel.text = 'Silver Gr:';
						pmcPlatinumLabel.text = 'Platinum Gr:';
						pmcPalladiumLabel.text = 'Palladium Gr:';
						gldWorthv=((parseFloat(latestGoldPrice)*parseFloat(goldozcalc.text))/31.1034768).toFixed(2); 
						slvWorthv=((parseFloat(latestSilverPrice)*parseFloat(silvozcalc.text))/31.1034768).toFixed(2); 
						pltWorthv=((parseFloat(latestPlatinumPrice)*parseFloat(platozcalc.text))/31.1034768).toFixed(2); 
						pldWorthv=((parseFloat(latestPalladiumPrice)*parseFloat(pallozcalc.text))/31.1034768).toFixed(2); 
						totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString();
					}
				}
				ButtonSelect = buttonSelect;
				if (buttonSelect == 'goldsilverratio')
				{
					currencyCode = currencyCode2 = currencyComboBoxGold.selectedItem.toString();
					currencyCode2 = '';
					if (chartbtn.selectedIndex == 0)
					{
						Arr3Days1 = USD; Arr3Days2 = convertTo(GLDSLV,USD,"threeDays",true); drawChart_3Days('goldsilverratio');
					}
					if (chartbtn.selectedIndex == 1)
					{
						ArrToday1 = convertToOneDay(USD,true); ArrToday2 = convertTo(GLDSLV,USD,"oneDay",true); drawChart_Today('goldsilverratio'); 
					}
					if (currencyComboBoxGold.selectedIndex == 0) { setLatestPrices("ARS",true); return; }
					if (currencyComboBoxGold.selectedIndex == 1) { setLatestPrices("AUD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 2) { setLatestPrices("BRL",true); return; }
					if (currencyComboBoxGold.selectedIndex == 3) { setLatestPrices("CAD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 4) { setLatestPrices("CHF",true); return; }
					if (currencyComboBoxGold.selectedIndex == 5) { setLatestPrices("CNY",true); return; }
					if (currencyComboBoxGold.selectedIndex == 6) { setLatestPrices("COP",true); return; }
					if (currencyComboBoxGold.selectedIndex == 7) { setLatestPrices("EUR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 8) { setLatestPrices("GBP",true); return; }
					if (currencyComboBoxGold.selectedIndex == 9) { setLatestPrices("HKD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 10) { setLatestPrices("IDR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 11) { setLatestPrices("INR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 12) { setLatestPrices("JPY",true); return; }
					if (currencyComboBoxGold.selectedIndex == 13) { setLatestPrices("KWD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 14) { setLatestPrices("MXN",true); return; }
					if (currencyComboBoxGold.selectedIndex == 15) { setLatestPrices("MYR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 16) { setLatestPrices("NZD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 17) { setLatestPrices("PEN",true); return; }
					if (currencyComboBoxGold.selectedIndex == 18) { setLatestPrices("PHP",true); return; }
					if (currencyComboBoxGold.selectedIndex == 19) { setLatestPrices("RUR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 20) { setLatestPrices("SEK",true); return; }
					if (currencyComboBoxGold.selectedIndex == 21) { setLatestPrices("SGD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 22) { setLatestPrices("TRY",true); return; }
					if (currencyComboBoxGold.selectedIndex == 23) { setLatestPrices("USD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 24) { setLatestPrices("VUV",true); return; }
					if (currencyComboBoxGold.selectedIndex == 25) { setLatestPrices("ZAR",true); return; }
				}
				if (buttonSelect == 'goldplatinumratio')
				{
					currencyCode = currencyCode2 = currencyComboBoxGold.selectedItem.toString();
					currencyCode2 = '';
					if (chartbtn.selectedIndex == 0)
					{
						Arr3Days1 = USD; Arr3Days2 = convertTo(GLDPLT,USD,"threeDays",true); drawChart_3Days('goldplatinumratio'); 					
					}
					if (chartbtn.selectedIndex == 1)
					{
						ArrToday1 = convertToOneDay(USD,true); ArrToday2 = convertTo(GLDPLT,USD,"oneDay",true); drawChart_Today('goldplatinumratio'); 			
					}
					if (currencyComboBoxGold.selectedIndex == 0) { setLatestPrices("ARS",true); return; }
					if (currencyComboBoxGold.selectedIndex == 1) { setLatestPrices("AUD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 2) { setLatestPrices("BRL",true); return; }
					if (currencyComboBoxGold.selectedIndex == 3) { setLatestPrices("CAD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 4) { setLatestPrices("CHF",true); return; }
					if (currencyComboBoxGold.selectedIndex == 5) { setLatestPrices("CNY",true); return; }
					if (currencyComboBoxGold.selectedIndex == 6) { setLatestPrices("COP",true); return; }
					if (currencyComboBoxGold.selectedIndex == 7) { setLatestPrices("EUR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 8) { setLatestPrices("GBP",true); return; }
					if (currencyComboBoxGold.selectedIndex == 9) { setLatestPrices("HKD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 10) { setLatestPrices("IDR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 11) { setLatestPrices("INR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 12) { setLatestPrices("JPY",true); return; }
					if (currencyComboBoxGold.selectedIndex == 13) { setLatestPrices("KWD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 14) { setLatestPrices("MXN",true); return; }
					if (currencyComboBoxGold.selectedIndex == 15) { setLatestPrices("MYR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 16) { setLatestPrices("NZD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 17) { setLatestPrices("PEN",true); return; }
					if (currencyComboBoxGold.selectedIndex == 18) { setLatestPrices("PHP",true); return; }
					if (currencyComboBoxGold.selectedIndex == 19) { setLatestPrices("RUR",true); return; }
					if (currencyComboBoxGold.selectedIndex == 20) { setLatestPrices("SEK",true); return; }
					if (currencyComboBoxGold.selectedIndex == 21) { setLatestPrices("SGD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 22) { setLatestPrices("TRY",true); return; }
					if (currencyComboBoxGold.selectedIndex == 23) { setLatestPrices("USD",true); return; }
					if (currencyComboBoxGold.selectedIndex == 24) { setLatestPrices("VUV",true); return; }
					if (currencyComboBoxGold.selectedIndex == 25) { setLatestPrices("ZAR",true); return; }
				}
				if (buttonSelect == 'individual') 
				{
					currencyCode = currencyCode2 = currencyComboBoxGold.selectedItem.toString();
					chartLabel.text = 'Tracking Your Stack Live';
					if (chartbtn.selectedIndex == 0)
					{
						if (currencyComboBoxGold.selectedIndex == 0) { Arr3Days1 = ARS; Arr3Days2 = convertTo(GLDSLV,ARS,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,ARS,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,ARS,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("ARS", true); return; }
						if (currencyComboBoxGold.selectedIndex == 1) { Arr3Days1 = AUD; Arr3Days2 = convertTo(GLDSLV,AUD,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,AUD,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,AUD,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("AUD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 2) { Arr3Days1 = BRL; Arr3Days2 = convertTo(GLDSLV,BRL,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,BRL,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,BRL,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("BRL", true); return; }
						if (currencyComboBoxGold.selectedIndex == 3) { Arr3Days1 = CAD; Arr3Days2 = convertTo(GLDSLV,CAD,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,CAD,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,CAD,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("CAD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 4) { Arr3Days1 = CHF; Arr3Days2 = convertTo(GLDSLV,CHF,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,CHF,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,CHF,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("CHF", true); return; }
						if (currencyComboBoxGold.selectedIndex == 5) { Arr3Days1 = CNY; Arr3Days2 = convertTo(GLDSLV,CNY,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,CNY,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,CNY,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("CNY", true); return; }
						if (currencyComboBoxGold.selectedIndex == 6) { Arr3Days1 = COP; Arr3Days2 = convertTo(GLDSLV,COP,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,COP,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,COP,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("COP", true); return; }
						if (currencyComboBoxGold.selectedIndex == 7) { Arr3Days1 = EUR; Arr3Days2 = convertTo(GLDSLV,EUR,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,EUR,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,EUR,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("EUR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 8) { Arr3Days1 = GBP; Arr3Days2 = convertTo(GLDSLV,GBP,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,GBP,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,GBP,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("GBP", true); return; }
						if (currencyComboBoxGold.selectedIndex == 9) { Arr3Days1 = HKD; Arr3Days2 = convertTo(GLDSLV,HKD,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,HKD,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,HKD,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("HKD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 10) { Arr3Days1 = IDR; Arr3Days2 = convertTo(GLDSLV,IDR,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,IDR,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,IDR,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("IDR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 11) { Arr3Days1 = INR; Arr3Days2 = convertTo(GLDSLV,INR,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,INR,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,INR,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("INR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 12) { Arr3Days1 = JPY; Arr3Days2 = convertTo(GLDSLV,JPY,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,JPY,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,JPY,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("JPY", true); return; }
						if (currencyComboBoxGold.selectedIndex == 13) { Arr3Days1 = KWD; Arr3Days2 = convertTo(GLDSLV,KWD,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,KWD,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,KWD,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("KWD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 14) { Arr3Days1 = MXN; Arr3Days2 = convertTo(GLDSLV,MXN,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,MXN,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,MXN,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("MXN", true); return; }
						if (currencyComboBoxGold.selectedIndex == 15) { Arr3Days1 = MYR; Arr3Days2 = convertTo(GLDSLV,MYR,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,MYR,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,MYR,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("MYR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 16) { Arr3Days1 = NZD; Arr3Days2 = convertTo(GLDSLV,NZD,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,NZD,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,NZD,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("NZD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 17) { Arr3Days1 = PEN; Arr3Days2 = convertTo(GLDSLV,PEN,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,PEN,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,PEN,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("PEN", true); return; }
						if (currencyComboBoxGold.selectedIndex == 18) { Arr3Days1 = PHP; Arr3Days2 = convertTo(GLDSLV,PHP,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,PHP,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,PHP,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("PHP", true); return; }
						if (currencyComboBoxGold.selectedIndex == 19) { Arr3Days1 = RUR; Arr3Days2 = convertTo(GLDSLV,RUR,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,RUR,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,RUR,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("RUR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 20) { Arr3Days1 = SEK; Arr3Days2 = convertTo(GLDSLV,SEK,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,SEK,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,SEK,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("SEK", true); return; }
						if (currencyComboBoxGold.selectedIndex == 21) { Arr3Days1 = SGD; Arr3Days2 = convertTo(GLDSLV,SGD,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,SGD,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,SGD,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("SGD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 22) { Arr3Days1 = TRY; Arr3Days2 = convertTo(GLDSLV,TRY,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,TRY,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,TRY,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("TRY", true); return; }
						if (currencyComboBoxGold.selectedIndex == 23) { Arr3Days1 = USD; Arr3Days2 = convertTo(GLDSLV,USD,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,USD,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,USD,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("USD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 24) { Arr3Days1 = VUV; Arr3Days2 = convertTo(GLDSLV,VUV,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,VUV,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,VUV,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("VUV", true); return; }
						if (currencyComboBoxGold.selectedIndex == 25) { Arr3Days1 = ZAR; Arr3Days2 = convertTo(GLDSLV,ZAR,"threeDays",true); Arr3Days3 = convertTo(GLDPLT,ZAR,"threeDays",true); Arr3Days4 = convertTo(GLDPLD,ZAR,"threeDays",true); drawChart_3Days('individual'); setLatestPrices("ZAR", true); return; }
					}
					if (chartbtn.selectedIndex == 1)
					{
						if (currencyComboBoxGold.selectedIndex == 0) { ArrToday1 = convertToOneDay(ARS,true); ArrToday2 = convertTo(GLDSLV,ARS,"oneDay",true); ArrToday3 = convertTo(GLDPLT,ARS,"oneDay",true); ArrToday4 = convertTo(GLDPLD,ARS,"oneDay",true); drawChart_Today('individual'); setLatestPrices("ARS", true); return; }
						if (currencyComboBoxGold.selectedIndex == 1) { ArrToday1 = convertToOneDay(AUD,true); ArrToday2 = convertTo(GLDSLV,AUD,"oneDay",true); ArrToday3 = convertTo(GLDPLT,AUD,"oneDay",true); ArrToday4 = convertTo(GLDPLD,AUD,"oneDay",true); drawChart_Today('individual'); setLatestPrices("AUD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 2) { ArrToday1 = convertToOneDay(BRL,true); ArrToday2 = convertTo(GLDSLV,BRL,"oneDay",true); ArrToday3 = convertTo(GLDPLT,BRL,"oneDay",true); ArrToday4 = convertTo(GLDPLD,BRL,"oneDay",true); drawChart_Today('individual'); setLatestPrices("BRL", true); return; }
						if (currencyComboBoxGold.selectedIndex == 3) { ArrToday1 = convertToOneDay(CAD,true); ArrToday2 = convertTo(GLDSLV,CAD,"oneDay",true); ArrToday3 = convertTo(GLDPLT,CAD,"oneDay",true); ArrToday4 = convertTo(GLDPLD,CAD,"oneDay",true); drawChart_Today('individual'); setLatestPrices("CAD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 4) { ArrToday1 = convertToOneDay(CHF,true); ArrToday2 = convertTo(GLDSLV,CHF,"oneDay",true); ArrToday3 = convertTo(GLDPLT,CHF,"oneDay",true); ArrToday4 = convertTo(GLDPLD,CHF,"oneDay",true); drawChart_Today('individual'); setLatestPrices("CHF", true); return; }
						if (currencyComboBoxGold.selectedIndex == 5) { ArrToday1 = convertToOneDay(CNY,true); ArrToday2 = convertTo(GLDSLV,CNY,"oneDay",true); ArrToday3 = convertTo(GLDPLT,CNY,"oneDay",true); ArrToday4 = convertTo(GLDPLD,CNY,"oneDay",true); drawChart_Today('individual'); setLatestPrices("CNY", true); return; }
						if (currencyComboBoxGold.selectedIndex == 6) { ArrToday1 = convertToOneDay(COP,true); ArrToday2 = convertTo(GLDSLV,COP,"oneDay",true); ArrToday3 = convertTo(GLDPLT,COP,"oneDay",true); ArrToday4 = convertTo(GLDPLD,COP,"oneDay",true); drawChart_Today('individual'); setLatestPrices("COP", true); return; }
						if (currencyComboBoxGold.selectedIndex == 7) { ArrToday1 = convertToOneDay(EUR,true); ArrToday2 = convertTo(GLDSLV,EUR,"oneDay",true); ArrToday3 = convertTo(GLDPLT,EUR,"oneDay",true); ArrToday4 = convertTo(GLDPLD,EUR,"oneDay",true); drawChart_Today('individual'); setLatestPrices("EUR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 8) { ArrToday1 = convertToOneDay(GBP,true); ArrToday2 = convertTo(GLDSLV,GBP,"oneDay",true); ArrToday3 = convertTo(GLDPLT,GBP,"oneDay",true); ArrToday4 = convertTo(GLDPLD,GBP,"oneDay",true); drawChart_Today('individual'); setLatestPrices("GBP", true); return; }
						if (currencyComboBoxGold.selectedIndex == 9) { ArrToday1 = convertToOneDay(HKD,true); ArrToday2 = convertTo(GLDSLV,HKD,"oneDay",true); ArrToday3 = convertTo(GLDPLT,HKD,"oneDay",true); ArrToday4 = convertTo(GLDPLD,HKD,"oneDay",true); drawChart_Today('individual'); setLatestPrices("HKD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 10) { ArrToday1 = convertToOneDay(IDR,true); ArrToday2 = convertTo(GLDSLV,IDR,"oneDay",true); ArrToday3 = convertTo(GLDPLT,IDR,"oneDay",true); ArrToday4 = convertTo(GLDPLD,IDR,"oneDay",true); drawChart_Today('individual'); setLatestPrices("IDR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 11) { ArrToday1 = convertToOneDay(INR,true); ArrToday2 = convertTo(GLDSLV,INR,"oneDay",true); ArrToday3 = convertTo(GLDPLT,INR,"oneDay",true); ArrToday4 = convertTo(GLDPLD,INR,"oneDay",true); drawChart_Today('individual'); setLatestPrices("INR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 12) { ArrToday1 = convertToOneDay(JPY,true); ArrToday2 = convertTo(GLDSLV,JPY,"oneDay",true); ArrToday3 = convertTo(GLDPLT,JPY,"oneDay",true); ArrToday4 = convertTo(GLDPLD,JPY,"oneDay",true); drawChart_Today('individual'); setLatestPrices("JPY", true); return; }
						if (currencyComboBoxGold.selectedIndex == 13) { ArrToday1 = convertToOneDay(KWD,true); ArrToday2 = convertTo(GLDSLV,KWD,"oneDay",true); ArrToday3 = convertTo(GLDPLT,KWD,"oneDay",true); ArrToday4 = convertTo(GLDPLD,KWD,"oneDay",true); drawChart_Today('individual'); setLatestPrices("KWD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 14) { ArrToday1 = convertToOneDay(MXN,true); ArrToday2 = convertTo(GLDSLV,MXN,"oneDay",true); ArrToday3 = convertTo(GLDPLT,MXN,"oneDay",true); ArrToday4 = convertTo(GLDPLD,MXN,"oneDay",true); drawChart_Today('individual'); setLatestPrices("MXN", true); return; }
						if (currencyComboBoxGold.selectedIndex == 15) { ArrToday1 = convertToOneDay(MYR,true); ArrToday2 = convertTo(GLDSLV,MYR,"oneDay",true); ArrToday3 = convertTo(GLDPLT,MYR,"oneDay",true); ArrToday4 = convertTo(GLDPLD,MYR,"oneDay",true); drawChart_Today('individual'); setLatestPrices("MYR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 16) { ArrToday1 = convertToOneDay(NZD,true); ArrToday2 = convertTo(GLDSLV,NZD,"oneDay",true); ArrToday3 = convertTo(GLDPLT,NZD,"oneDay",true); ArrToday4 = convertTo(GLDPLD,NZD,"oneDay",true); drawChart_Today('individual'); setLatestPrices("NZD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 17) { ArrToday1 = convertToOneDay(PEN,true); ArrToday2 = convertTo(GLDSLV,PEN,"oneDay",true); ArrToday3 = convertTo(GLDPLT,PEN,"oneDay",true); ArrToday4 = convertTo(GLDPLD,PEN,"oneDay",true); drawChart_Today('individual'); setLatestPrices("PEN", true); return; }
						if (currencyComboBoxGold.selectedIndex == 18) { ArrToday1 = convertToOneDay(PHP,true); ArrToday2 = convertTo(GLDSLV,PHP,"oneDay",true); ArrToday3 = convertTo(GLDPLT,PHP,"oneDay",true); ArrToday4 = convertTo(GLDPLD,PHP,"oneDay",true); drawChart_Today('individual'); setLatestPrices("PHP", true); return; }
						if (currencyComboBoxGold.selectedIndex == 19) { ArrToday1 = convertToOneDay(RUR,true); ArrToday2 = convertTo(GLDSLV,RUR,"oneDay",true); ArrToday3 = convertTo(GLDPLT,RUR,"oneDay",true); ArrToday4 = convertTo(GLDPLD,RUR,"oneDay",true); drawChart_Today('individual'); setLatestPrices("RUR", true); return; }
						if (currencyComboBoxGold.selectedIndex == 20) { ArrToday1 = convertToOneDay(SEK,true); ArrToday2 = convertTo(GLDSLV,SEK,"oneDay",true); ArrToday3 = convertTo(GLDPLT,SEK,"oneDay",true); ArrToday4 = convertTo(GLDPLD,SEK,"oneDay",true); drawChart_Today('individual'); setLatestPrices("SEK", true); return; }
						if (currencyComboBoxGold.selectedIndex == 21) { ArrToday1 = convertToOneDay(SGD,true); ArrToday2 = convertTo(GLDSLV,SGD,"oneDay",true); ArrToday3 = convertTo(GLDPLT,SGD,"oneDay",true); ArrToday4 = convertTo(GLDPLD,SGD,"oneDay",true); drawChart_Today('individual'); setLatestPrices("SGD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 22) { ArrToday1 = convertToOneDay(TRY,true); ArrToday2 = convertTo(GLDSLV,TRY,"oneDay",true); ArrToday3 = convertTo(GLDPLT,TRY,"oneDay",true); ArrToday4 = convertTo(GLDPLD,TRY,"oneDay",true); drawChart_Today('individual'); setLatestPrices("TRY", true); return; }
						if (currencyComboBoxGold.selectedIndex == 23) { ArrToday1 = convertToOneDay(USD,true); ArrToday2 = convertTo(GLDSLV,USD,"oneDay",true); ArrToday3 = convertTo(GLDPLT,USD,"oneDay",true); ArrToday4 = convertTo(GLDPLD,USD,"oneDay",true); drawChart_Today('individual'); setLatestPrices("USD", true); return; }
						if (currencyComboBoxGold.selectedIndex == 24) { ArrToday1 = convertToOneDay(VUV,true); ArrToday2 = convertTo(GLDSLV,VUV,"oneDay",true); ArrToday3 = convertTo(GLDPLT,VUV,"oneDay",true); ArrToday4 = convertTo(GLDPLD,VUV,"oneDay",true); drawChart_Today('individual'); setLatestPrices("VUV", true); return; }
						if (currencyComboBoxGold.selectedIndex == 25) { ArrToday1 = convertToOneDay(ZAR,true); ArrToday2 = convertTo(GLDSLV,ZAR,"oneDay",true); ArrToday3 = convertTo(GLDPLT,ZAR,"oneDay",true); ArrToday4 = convertTo(GLDPLD,ZAR,"oneDay",true); drawChart_Today('individual'); setLatestPrices("ZAR", true); return; }
					}
				}
				if (buttonSelect == 'user')	
				{
					currencyCode2 = '';
					currencyComboBoxGold.selectedIndex = userCurrency;
					currencyCode = currencyComboBoxGold.selectedLabel;
					if ((userCurrency == 0) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",true); Arr3Days = ARS; drawChart_3Days('user'); return; }
					if ((userCurrency == 0) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",true); Arr3Days = convertTo(GLDSLV,ARS,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 0) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",true); Arr3Days = convertTo(GLDPLT,ARS,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 0) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",true); Arr3Days = convertTo(GLDPLD,ARS,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 1) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",true); Arr3Days = AUD; drawChart_3Days('user'); return; }
					if ((userCurrency == 1) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",true); Arr3Days = convertTo(GLDSLV,AUD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 1) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",true); Arr3Days = convertTo(GLDPLT,AUD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 1) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",true); Arr3Days = convertTo(GLDPLD,AUD,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 2) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",true); Arr3Days = BRL; drawChart_3Days('user'); return; }
					if ((userCurrency == 2) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",true); Arr3Days = convertTo(GLDSLV,BRL,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 2) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",true); Arr3Days = convertTo(GLDPLT,BRL,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 2) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",true); Arr3Days = convertTo(GLDPLD,BRL,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 3) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",true); Arr3Days = CAD; drawChart_3Days('user'); return; }
					if ((userCurrency == 3) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",true); Arr3Days = convertTo(GLDSLV,CAD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 3) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",true); Arr3Days = convertTo(GLDPLT,CAD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 3) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",true); Arr3Days = convertTo(GLDPLD,CAD,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 4) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",true); Arr3Days = CHF; drawChart_3Days('user'); return; }
					if ((userCurrency == 4) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",true); Arr3Days = convertTo(GLDSLV,CHF,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 4) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",true); Arr3Days = convertTo(GLDPLT,CHF,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 4) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",true); Arr3Days = convertTo(GLDPLD,CHF,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 5) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",true); Arr3Days = CNY; drawChart_3Days('user'); return; }
					if ((userCurrency == 5) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",true); Arr3Days = convertTo(GLDSLV,CNY,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 5) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",true); Arr3Days = convertTo(GLDPLT,CNY,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 5) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",true); Arr3Days = convertTo(GLDPLD,CNY,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 6) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",true); Arr3Days = COP; drawChart_3Days('user'); return; }
					if ((userCurrency == 6) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",true); Arr3Days = convertTo(GLDSLV,COP,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 6) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",true); Arr3Days = convertTo(GLDPLT,COP,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 6) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",true); Arr3Days = convertTo(GLDPLD,COP,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 7) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",true); Arr3Days = EUR; drawChart_3Days('user'); return; }
					if ((userCurrency == 7) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",true); Arr3Days = convertTo(GLDSLV,EUR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 7) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",true); Arr3Days = convertTo(GLDPLT,EUR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 7) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",true); Arr3Days = convertTo(GLDPLD,EUR,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 8) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",true); Arr3Days = GBP; drawChart_3Days('user'); return; }
					if ((userCurrency == 8) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",true); Arr3Days = convertTo(GLDSLV,GBP,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 8) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",true); Arr3Days = convertTo(GLDPLT,GBP,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 8) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",true); Arr3Days = convertTo(GLDPLD,GBP,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 9) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",true); Arr3Days = HKD; drawChart_3Days('user'); return; }
					if ((userCurrency == 9) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",true); Arr3Days = convertTo(GLDSLV,HKD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 9) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",true); Arr3Days = convertTo(GLDPLT,HKD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 9) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",true); Arr3Days = convertTo(GLDPLD,HKD,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 10) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",true); Arr3Days = IDR; drawChart_3Days('user'); return; }
					if ((userCurrency == 10) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",true); Arr3Days = convertTo(GLDSLV,IDR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 10) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",true); Arr3Days = convertTo(GLDPLT,IDR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 10) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",true); Arr3Days = convertTo(GLDPLD,IDR,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 11) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",true); Arr3Days = INR; drawChart_3Days('user'); return; }
					if ((userCurrency == 11) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",true); Arr3Days = convertTo(GLDSLV,INR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 11) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",true); Arr3Days = convertTo(GLDPLT,INR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 11) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",true); Arr3Days = convertTo(GLDPLD,INR,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 12) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",true); Arr3Days = JPY; drawChart_3Days('user'); return; }
					if ((userCurrency == 12) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",true); Arr3Days = convertTo(GLDSLV,JPY,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 12) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",true); Arr3Days = convertTo(GLDPLT,JPY,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 12) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",true); Arr3Days = convertTo(GLDPLD,JPY,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 13) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",true); Arr3Days = KWD; drawChart_3Days('user'); return; }
					if ((userCurrency == 13) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",true); Arr3Days = convertTo(GLDSLV,KWD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 13) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",true); Arr3Days = convertTo(GLDPLT,KWD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 13) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",true); Arr3Days = convertTo(GLDPLD,KWD,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 14) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",true); Arr3Days = MXN; drawChart_3Days('user'); return; }
					if ((userCurrency == 14) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",true); Arr3Days = convertTo(GLDSLV,MXN,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 14) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",true); Arr3Days = convertTo(GLDPLT,MXN,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 14) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",true); Arr3Days = convertTo(GLDPLD,MXN,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 15) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",true); Arr3Days = MYR; drawChart_3Days('user'); return; }
					if ((userCurrency == 15) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",true); Arr3Days = convertTo(GLDSLV,MYR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 15) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",true); Arr3Days = convertTo(GLDPLT,MYR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 15) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",true); Arr3Days = convertTo(GLDPLD,MYR,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 16) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",true); Arr3Days = NZD; drawChart_3Days('user'); return; }
					if ((userCurrency == 16) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",true); Arr3Days = convertTo(GLDSLV,NZD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 16) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",true); Arr3Days = convertTo(GLDPLT,NZD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 16) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",true); Arr3Days = convertTo(GLDPLD,NZD,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 17) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",true); Arr3Days = PEN; drawChart_3Days('user'); return; }
					if ((userCurrency == 17) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",true); Arr3Days = convertTo(GLDSLV,PEN,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 17) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",true); Arr3Days = convertTo(GLDPLT,PEN,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 17) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",true); Arr3Days = convertTo(GLDPLD,PEN,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 18) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",true); Arr3Days = PHP; drawChart_3Days('user'); return; }
					if ((userCurrency == 18) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",true); Arr3Days = convertTo(GLDSLV,PHP,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 18) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",true); Arr3Days = convertTo(GLDPLT,PHP,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 18) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",true); Arr3Days = convertTo(GLDPLD,PHP,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 19) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",true); Arr3Days = RUR; drawChart_3Days('user'); return; }
					if ((userCurrency == 19) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",true); Arr3Days = convertTo(GLDSLV,RUR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 19) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",true); Arr3Days = convertTo(GLDPLT,RUR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 19) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",true); Arr3Days = convertTo(GLDPLD,RUR,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 20) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",true); Arr3Days = SEK; drawChart_3Days('user'); return; }
					if ((userCurrency == 20) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",true); Arr3Days = convertTo(GLDSLV,SEK,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 20) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",true); Arr3Days = convertTo(GLDPLT,SEK,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 20) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",true); Arr3Days = convertTo(GLDPLD,SEK,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 21) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",true); Arr3Days = SGD; drawChart_3Days('user'); return; }
					if ((userCurrency == 21) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",true); Arr3Days = convertTo(GLDSLV,SGD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 21) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",true); Arr3Days = convertTo(GLDPLT,SGD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 21) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",true); Arr3Days = convertTo(GLDPLD,SGD,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 22) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",true); Arr3Days = TRY; drawChart_3Days('user'); return; }
					if ((userCurrency == 22) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",true); Arr3Days = convertTo(GLDSLV,TRY,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 22) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",true); Arr3Days = convertTo(GLDPLT,TRY,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 22) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",true); Arr3Days = convertTo(GLDPLD,TRY,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 23) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",true); Arr3Days = USD; drawChart_3Days('user'); return; }
					if ((userCurrency == 23) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",true); Arr3Days = convertTo(GLDSLV,USD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 23) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",true); Arr3Days = convertTo(GLDPLT,USD,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 23) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",true); Arr3Days = convertTo(GLDPLD,USD,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 24) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",true); Arr3Days = VUV; drawChart_3Days('user'); return; }
					if ((userCurrency == 24) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",true); Arr3Days = convertTo(GLDSLV,VUV,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 24) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",true); Arr3Days = convertTo(GLDPLT,VUV,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 24) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",true); Arr3Days = convertTo(GLDPLD,VUV,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 25) && (userMetal == 0) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",true); Arr3Days = ZAR; drawChart_3Days('user'); return; }
					if ((userCurrency == 25) && (userMetal == 1) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",true); Arr3Days = convertTo(GLDSLV,ZAR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 25) && (userMetal == 2) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",true); Arr3Days = convertTo(GLDPLT,ZAR,"threeDays",true); drawChart_3Days('user'); return; }
					if ((userCurrency == 25) && (userMetal == 3) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",true); Arr3Days = convertTo(GLDPLD,ZAR,"threeDays",true); drawChart_3Days('user'); return; }
					
					if ((userCurrency == 0) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",true); ArrToday = convertToOneDay(ARS,true); drawChart_Today('user'); return; }
					if ((userCurrency == 0) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",true); ArrToday = convertTo(GLDSLV,ARS,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 0) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",true); ArrToday = convertTo(GLDPLT,ARS,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 0) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",true); ArrToday = convertTo(GLDPLD,ARS,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 1) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",true); ArrToday = convertToOneDay(AUD,true); drawChart_Today('user'); return; }
					if ((userCurrency == 1) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",true); ArrToday = convertTo(GLDSLV,AUD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 1) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",true); ArrToday = convertTo(GLDPLT,AUD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 1) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",true); ArrToday = convertTo(GLDPLD,AUD,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 2) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",true); ArrToday = convertToOneDay(BRL,true); drawChart_Today('user'); return; }
					if ((userCurrency == 2) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",true); ArrToday = convertTo(GLDSLV,BRL,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 2) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",true); ArrToday = convertTo(GLDPLT,BRL,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 2) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",true); ArrToday = convertTo(GLDPLD,BRL,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 3) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",true); ArrToday = convertToOneDay(CAD,true); drawChart_Today('user'); return; }
					if ((userCurrency == 3) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",true); ArrToday = convertTo(GLDSLV,CAD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 3) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",true); ArrToday = convertTo(GLDPLT,CAD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 3) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",true); ArrToday = convertTo(GLDPLD,CAD,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 4) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",true); ArrToday = convertToOneDay(CHF,true); drawChart_Today('user'); return; }
					if ((userCurrency == 4) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",true); ArrToday = convertTo(GLDSLV,CHF,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 4) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",true); ArrToday = convertTo(GLDPLT,CHF,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 4) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",true); ArrToday = convertTo(GLDPLD,CHF,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 5) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",true); ArrToday = convertToOneDay(CNY,true); drawChart_Today('user'); return; }
					if ((userCurrency == 5) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",true); ArrToday = convertTo(GLDSLV,CNY,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 5) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",true); ArrToday = convertTo(GLDPLT,CNY,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 5) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",true); ArrToday = convertTo(GLDPLD,CNY,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 6) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",true); ArrToday = convertToOneDay(COP,true); drawChart_Today('user'); return; }
					if ((userCurrency == 6) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",true); ArrToday = convertTo(GLDSLV,COP,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 6) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",true); ArrToday = convertTo(GLDPLT,COP,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 6) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",true); ArrToday = convertTo(GLDPLD,COP,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 7) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",true); ArrToday = convertToOneDay(EUR,true); drawChart_Today('user'); return; }
					if ((userCurrency == 7) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",true); ArrToday = convertTo(GLDSLV,EUR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 7) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",true); ArrToday = convertTo(GLDPLT,EUR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 7) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",true); ArrToday = convertTo(GLDPLD,EUR,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 8) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",true); ArrToday = convertToOneDay(GBP,true); drawChart_Today('user'); return; }
					if ((userCurrency == 8) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",true); ArrToday = convertTo(GLDSLV,GBP,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 8) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",true); ArrToday = convertTo(GLDPLT,GBP,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 8) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",true); ArrToday = convertTo(GLDPLD,GBP,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 9) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",true); ArrToday = convertToOneDay(HKD,true); drawChart_Today('user'); return; }
					if ((userCurrency == 9) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",true); ArrToday = convertTo(GLDSLV,HKD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 9) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",true); ArrToday = convertTo(GLDPLT,HKD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 9) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",true); ArrToday = convertTo(GLDPLD,HKD,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 10) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",true); ArrToday = convertToOneDay(IDR,true); drawChart_Today('user'); return; }
					if ((userCurrency == 10) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",true); ArrToday = convertTo(GLDSLV,IDR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 10) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",true); ArrToday = convertTo(GLDPLT,IDR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 10) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",true); ArrToday = convertTo(GLDPLD,IDR,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 11) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertToOneDay(INR,true); drawChart_Today('user'); return; }
					if ((userCurrency == 11) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDSLV,INR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 11) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDPLT,INR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 11) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDPLD,INR,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 12) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("JPY",true); ArrToday = convertToOneDay(JPY,true); drawChart_Today('user'); return; }
					if ((userCurrency == 12) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("JPY",true); ArrToday = convertTo(GLDSLV,JPY,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 12) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("JPY",true); ArrToday = convertTo(GLDPLT,JPY,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 12) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("JPY",true); ArrToday = convertTo(GLDPLD,JPY,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 13) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",true); ArrToday = convertToOneDay(KWD,true); drawChart_Today('user'); return; }
					if ((userCurrency == 13) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",true); ArrToday = convertTo(GLDSLV,KWD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 13) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",true); ArrToday = convertTo(GLDPLT,KWD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 13) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",true); ArrToday = convertTo(GLDPLD,KWD,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 14) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",true); ArrToday = convertToOneDay(MXN,true); drawChart_Today('user'); return; }
					if ((userCurrency == 14) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",true); ArrToday = convertTo(GLDSLV,MXN,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 14) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",true); ArrToday = convertTo(GLDPLT,MXN,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 14) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",true); ArrToday = convertTo(GLDPLD,MXN,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 15) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",true); ArrToday = convertToOneDay(MYR,true); drawChart_Today('user'); return; }
					if ((userCurrency == 15) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",true); ArrToday = convertTo(GLDSLV,MYR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 15) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",true); ArrToday = convertTo(GLDPLT,MYR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 15) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",true); ArrToday = convertTo(GLDPLD,MYR,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 16) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",true); ArrToday = convertToOneDay(NZD,true); drawChart_Today('user'); return; }
					if ((userCurrency == 16) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",true); ArrToday = convertTo(GLDSLV,NZD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 16) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",true); ArrToday = convertTo(GLDPLT,NZD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 16) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",true); ArrToday = convertTo(GLDPLD,NZD,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 17) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",true); ArrToday = convertToOneDay(PEN,true); drawChart_Today('user'); return; }
					if ((userCurrency == 17) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",true); ArrToday = convertTo(GLDSLV,PEN,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 17) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",true); ArrToday = convertTo(GLDPLT,PEN,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 17) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",true); ArrToday = convertTo(GLDPLD,PEN,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 18) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",true); ArrToday = convertToOneDay(PHP,true); drawChart_Today('user'); return; }
					if ((userCurrency == 18) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",true); ArrToday = convertTo(GLDSLV,PHP,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 18) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",true); ArrToday = convertTo(GLDPLT,PHP,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 18) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",true); ArrToday = convertTo(GLDPLD,PHP,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 19) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",true); ArrToday = convertToOneDay(RUR,true); drawChart_Today('user'); return; }
					if ((userCurrency == 19) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",true); ArrToday = convertTo(GLDSLV,RUR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 19) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",true); ArrToday = convertTo(GLDPLT,RUR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 19) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",true); ArrToday = convertTo(GLDPLD,RUR,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 20) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",true); ArrToday = convertToOneDay(SEK,true); drawChart_Today('user'); return; }
					if ((userCurrency == 20) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",true); ArrToday = convertTo(GLDSLV,SEK,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 20) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",true); ArrToday = convertTo(GLDPLT,SEK,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 20) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",true); ArrToday = convertTo(GLDPLD,SEK,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 21) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",true); ArrToday = convertToOneDay(SGD,true); drawChart_Today('user'); return; }
					if ((userCurrency == 21) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",true); ArrToday = convertTo(GLDSLV,SGD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 21) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",true); ArrToday = convertTo(GLDPLT,SGD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 21) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",true); ArrToday = convertTo(GLDPLD,SGD,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 22) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",true); ArrToday = convertToOneDay(TRY,true); drawChart_Today('user'); return; }
					if ((userCurrency == 22) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",true); ArrToday = convertTo(GLDSLV,TRY,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 22) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",true); ArrToday = convertTo(GLDPLT,TRY,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 22) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",true); ArrToday = convertTo(GLDPLD,TRY,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 23) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",true); ArrToday = convertToOneDay(USD,true); drawChart_Today('user'); return; }
					if ((userCurrency == 23) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",true); ArrToday = convertTo(GLDSLV,USD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 23) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",true); ArrToday = convertTo(GLDPLT,USD,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 23) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",true); ArrToday = convertTo(GLDPLD,USD,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 24) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",true); ArrToday = convertToOneDay(VUV,true); drawChart_Today('user'); return; }
					if ((userCurrency == 24) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",true); ArrToday = convertTo(GLDSLV,VUV,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 24) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",true); ArrToday = convertTo(GLDPLT,VUV,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 24) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",true); ArrToday = convertTo(GLDPLD,VUV,"oneDay",true); drawChart_Today('user'); return; }
					
					if ((userCurrency == 25) && (userMetal == 0) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",true); ArrToday = convertToOneDay(ZAR,true); drawChart_Today('user'); return; }
					if ((userCurrency == 25) && (userMetal == 1) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",true); ArrToday = convertTo(GLDSLV,ZAR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 25) && (userMetal == 2) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",true); ArrToday = convertTo(GLDPLT,ZAR,"oneDay",true); drawChart_Today('user'); return; }
					if ((userCurrency == 25) && (userMetal == 3) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",true); ArrToday = convertTo(GLDPLD,ZAR,"oneDay",true); drawChart_Today('user'); return; }
				}				
				
				if (buttonSelect == '') 
				{
					currencyCode = currencyCode2 = currencyComboBoxGold.selectedItem.toString();
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",true); Arr3Days = ARS; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",false); Arr3Days = convert3Days2Grams(ARS); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",true); Arr3Days = convertTo(GLDSLV,ARS,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",false); Arr3Days = convertTo(GLDSLV,ARS,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",true); Arr3Days = convertTo(GLDPLT,ARS,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",false); Arr3Days = convertTo(GLDPLT,ARS,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",true); Arr3Days = convertTo(GLDPLD,ARS,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ARS",false); Arr3Days = convertTo(GLDPLD,ARS,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",true); ArrToday = convertToOneDay(ARS, true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",false); ArrToday = convertToOneDay(ARS, false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",true); ArrToday = convertTo(GLDSLV,ARS,"oneDay",true); drawChart_Today(buttonSelect);return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",false); ArrToday = convertTo(GLDSLV,ARS,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",true); ArrToday = convertTo(GLDPLT,ARS,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",false); ArrToday = convertTo(GLDPLT,ARS,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",true); ArrToday = convertTo(GLDPLD,ARS,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 0) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ARS",false); ArrToday = convertTo(GLDPLD,ARS,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",true); Arr3Days = AUD; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",false); Arr3Days = convert3Days2Grams(AUD); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",true); Arr3Days = convertTo(GLDSLV,AUD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",false); Arr3Days = convertTo(GLDSLV,AUD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",true); Arr3Days = convertTo(GLDPLT,AUD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",false); Arr3Days = convertTo(GLDPLT,AUD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",true); Arr3Days = convertTo(GLDPLD,AUD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("AUD",false); Arr3Days = convertTo(GLDPLD,AUD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",true); ArrToday = convertToOneDay(AUD,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",false); ArrToday = convertToOneDay(AUD,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",true); ArrToday = convertTo(GLDSLV,AUD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",false); ArrToday = convertTo(GLDSLV,AUD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",true); ArrToday = convertTo(GLDPLT,AUD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",false); ArrToday = convertTo(GLDPLT,AUD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",true); ArrToday = convertTo(GLDPLD,AUD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 1) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("AUD",false); ArrToday = convertTo(GLDPLD,AUD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",true); Arr3Days = BRL; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",false); Arr3Days = convert3Days2Grams(BRL); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",true); Arr3Days = convertTo(GLDSLV,BRL,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",false); Arr3Days = convertTo(GLDSLV,BRL,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",true); Arr3Days = convertTo(GLDPLT,BRL,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",false); Arr3Days = convertTo(GLDPLT,BRL,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",true); Arr3Days = convertTo(GLDPLD,BRL,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("BRL",false); Arr3Days = convertTo(GLDPLD,BRL,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",true); ArrToday = convertToOneDay(BRL,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",false); ArrToday = convertToOneDay(BRL,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",true); ArrToday = convertTo(GLDSLV,BRL,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",false); ArrToday = convertTo(GLDSLV,BRL,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",true); ArrToday = convertTo(GLDPLT,BRL,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",false); ArrToday = convertTo(GLDPLT,BRL,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",true); ArrToday = convertTo(GLDPLD,BRL,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 2) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("BRL",false); ArrToday = convertTo(GLDPLD,BRL,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",true); Arr3Days = CAD; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",false); Arr3Days = convert3Days2Grams(CAD); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",true); Arr3Days = convertTo(GLDSLV,CAD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",false); Arr3Days = convertTo(GLDSLV,CAD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",true); Arr3Days = convertTo(GLDPLT,CAD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",false); Arr3Days = convertTo(GLDPLT,CAD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",true); Arr3Days = convertTo(GLDPLD,CAD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CAD",false); Arr3Days = convertTo(GLDPLD,CAD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",true); ArrToday = convertToOneDay(CAD,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",false); ArrToday = convertToOneDay(CAD,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",true); ArrToday = convertTo(GLDSLV,CAD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",false); ArrToday = convertTo(GLDSLV,CAD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",true); ArrToday = convertTo(GLDPLT,CAD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",false); ArrToday = convertTo(GLDPLT,CAD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",true); ArrToday = convertTo(GLDPLD,CAD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 3) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CAD",false); ArrToday = convertTo(GLDPLD,CAD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",true); Arr3Days = CHF; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",false); Arr3Days = convert3Days2Grams(CHF); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",true); Arr3Days = convertTo(GLDSLV,CHF,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",false); Arr3Days = convertTo(GLDSLV,CHF,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",true); Arr3Days = convertTo(GLDPLT,CHF,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",false); Arr3Days = convertTo(GLDPLT,CHF,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",true); Arr3Days = convertTo(GLDPLD,CHF,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CHF",false); Arr3Days = convertTo(GLDPLD,CHF,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",true); ArrToday = convertToOneDay(CHF,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",false); ArrToday = convertToOneDay(CHF,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",true); ArrToday = convertTo(GLDSLV,CHF,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",false); ArrToday = convertTo(GLDSLV,CHF,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",true); ArrToday = convertTo(GLDPLT,CHF,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",false); ArrToday = convertTo(GLDPLT,CHF,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",true); ArrToday = convertTo(GLDPLD,CHF,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 4) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CHF",false); ArrToday = convertTo(GLDPLD,CHF,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",true); Arr3Days = CNY; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",false); Arr3Days = convert3Days2Grams(CNY); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",true); Arr3Days = convertTo(GLDSLV,CNY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",false); Arr3Days = convertTo(GLDSLV,CNY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",true); Arr3Days = convertTo(GLDPLT,CNY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",false); Arr3Days = convertTo(GLDPLT,CNY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",true); Arr3Days = convertTo(GLDPLD,CNY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("CNY",false); Arr3Days = convertTo(GLDPLD,CNY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",true); ArrToday = convertToOneDay(CNY,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",false); ArrToday = convertToOneDay(CNY,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",true); ArrToday = convertTo(GLDSLV,CNY,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",false); ArrToday = convertTo(GLDSLV,CNY,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",true); ArrToday = convertTo(GLDPLT,CNY,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",false); ArrToday = convertTo(GLDPLT,CNY,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",true); ArrToday = convertTo(GLDPLD,CNY,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 5) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("CNY",false); ArrToday = convertTo(GLDPLD,CNY,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",true); Arr3Days = COP; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",false); Arr3Days = convert3Days2Grams(COP); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",true); Arr3Days = convertTo(GLDSLV,COP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",false); Arr3Days = convertTo(GLDSLV,COP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",true); Arr3Days = convertTo(GLDPLT,COP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",false); Arr3Days = convertTo(GLDPLT,COP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",true); Arr3Days = convertTo(GLDPLD,COP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("COP",false); Arr3Days = convertTo(GLDPLD,COP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",true); ArrToday = convertToOneDay(COP,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",false); ArrToday = convertToOneDay(COP,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",true); ArrToday = convertTo(GLDSLV,COP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",false); ArrToday = convertTo(GLDSLV,COP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",true); ArrToday = convertTo(GLDPLT,COP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",false); ArrToday = convertTo(GLDPLT,COP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",true); ArrToday = convertTo(GLDPLD,COP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 6) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("COP",false); ArrToday = convertTo(GLDPLD,COP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",true); Arr3Days = EUR; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",false); Arr3Days = convert3Days2Grams(EUR); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",true); Arr3Days = convertTo(GLDSLV,EUR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",false); Arr3Days = convertTo(GLDSLV,EUR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",true); Arr3Days = convertTo(GLDPLT,EUR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",false); Arr3Days = convertTo(GLDPLT,EUR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",true); Arr3Days = convertTo(GLDPLD,EUR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("EUR",false); Arr3Days = convertTo(GLDPLD,EUR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",true); ArrToday = convertToOneDay(EUR,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",false); ArrToday = convertToOneDay(EUR,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",true); ArrToday = convertTo(GLDSLV,EUR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",false); ArrToday = convertTo(GLDSLV,EUR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",true); ArrToday = convertTo(GLDPLT,EUR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",false); ArrToday = convertTo(GLDPLT,EUR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",true); ArrToday = convertTo(GLDPLD,EUR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 7) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("EUR",false); ArrToday = convertTo(GLDPLD,EUR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",true); Arr3Days = GBP; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",false); Arr3Days = convert3Days2Grams(GBP); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",true); Arr3Days = convertTo(GLDSLV,GBP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",false); Arr3Days = convertTo(GLDSLV,GBP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",true); Arr3Days = convertTo(GLDPLT,GBP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",false); Arr3Days = convertTo(GLDPLT,GBP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",true); Arr3Days = convertTo(GLDPLD,GBP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("GBP",false); Arr3Days = convertTo(GLDPLD,GBP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",true); ArrToday = convertToOneDay(GBP,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",false); ArrToday = convertToOneDay(GBP,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",true); ArrToday = convertTo(GLDSLV,GBP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",false); ArrToday = convertTo(GLDSLV,GBP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",true); ArrToday = convertTo(GLDPLT,GBP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",false); ArrToday = convertTo(GLDPLT,GBP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",true); ArrToday = convertTo(GLDPLD,GBP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 8) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("GBP",false); ArrToday = convertTo(GLDPLD,GBP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",true); Arr3Days = HKD; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",false); Arr3Days = convert3Days2Grams(HKD); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",true); Arr3Days = convertTo(GLDSLV,HKD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",false); Arr3Days = convertTo(GLDSLV,HKD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",true); Arr3Days = convertTo(GLDPLT,HKD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",false); Arr3Days = convertTo(GLDPLT,HKD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",true); Arr3Days = convertTo(GLDPLD,HKD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("HKD",false); Arr3Days = convertTo(GLDPLD,HKD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",true); ArrToday = convertToOneDay(HKD,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",false); ArrToday = convertToOneDay(HKD,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",true); ArrToday = convertTo(GLDSLV,HKD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",false); ArrToday = convertTo(GLDSLV,HKD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",true); ArrToday = convertTo(GLDPLT,HKD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",false); ArrToday = convertTo(GLDPLT,HKD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",true); ArrToday = convertTo(GLDPLD,HKD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 9) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("HKD",false); ArrToday = convertTo(GLDPLD,HKD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",true); Arr3Days = IDR; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",false); Arr3Days = convert3Days2Grams(IDR); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",true); Arr3Days = convertTo(GLDSLV,IDR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",false); Arr3Days = convertTo(GLDSLV,IDR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",true); Arr3Days = convertTo(GLDPLT,IDR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",false); Arr3Days = convertTo(GLDPLT,IDR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",true); Arr3Days = convertTo(GLDPLD,IDR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("IDR",false); Arr3Days = convertTo(GLDPLD,IDR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",true); ArrToday = convertToOneDay(IDR,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",false); ArrToday = convertToOneDay(IDR,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",true); ArrToday = convertTo(GLDSLV,IDR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",false); ArrToday = convertTo(GLDSLV,IDR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",true); ArrToday = convertTo(GLDPLT,IDR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",false); ArrToday = convertTo(GLDPLT,IDR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",true); ArrToday = convertTo(GLDPLD,IDR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 10) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("IDR",false); ArrToday = convertTo(GLDPLD,IDR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",true); Arr3Days = INR; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",false); Arr3Days = convert3Days2Grams(INR); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",true); Arr3Days = convertTo(GLDSLV,INR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",false); Arr3Days = convertTo(GLDSLV,INR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",true); Arr3Days = convertTo(GLDPLT,INR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",false); Arr3Days = convertTo(GLDPLT,INR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",true); Arr3Days = convertTo(GLDPLD,INR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("INR",false); Arr3Days = convertTo(GLDPLD,INR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertToOneDay(INR,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",false); ArrToday = convertToOneDay(INR,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDSLV,INR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",false); ArrToday = convertTo(GLDSLV,INR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDPLT,INR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",false); ArrToday = convertTo(GLDPLT,INR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDPLD,INR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 11) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",false); ArrToday = convertTo(GLDPLD,INR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",true); Arr3Days = JPY; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",false); Arr3Days = convert3Days2Grams(JPY); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",true); Arr3Days = convertTo(GLDSLV,JPY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",false); Arr3Days = convertTo(GLDSLV,JPY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",true); Arr3Days = convertTo(GLDPLT,JPY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",false); Arr3Days = convertTo(GLDPLT,JPY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",true); Arr3Days = convertTo(GLDPLD,JPY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("JPY",false); Arr3Days = convertTo(GLDPLD,JPY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertToOneDay(INR,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",false); ArrToday = convertToOneDay(INR,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDSLV,INR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",false); ArrToday = convertTo(GLDSLV,INR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDPLT,INR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",false); ArrToday = convertTo(GLDPLT,INR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",true); ArrToday = convertTo(GLDPLD,INR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 12) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("INR",false); ArrToday = convertTo(GLDPLD,INR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",true); Arr3Days = KWD; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",false); Arr3Days = convert3Days2Grams(KWD); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",true); Arr3Days = convertTo(GLDSLV,KWD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",false); Arr3Days = convertTo(GLDSLV,KWD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",true); Arr3Days = convertTo(GLDPLT,KWD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",false); Arr3Days = convertTo(GLDPLT,KWD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",true); Arr3Days = convertTo(GLDPLD,KWD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("KWD",false); Arr3Days = convertTo(GLDPLD,KWD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",true); ArrToday = convertToOneDay(KWD,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",false); ArrToday = convertToOneDay(KWD,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",true); ArrToday = convertTo(GLDSLV,KWD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",false); ArrToday = convertTo(GLDSLV,KWD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",true); ArrToday = convertTo(GLDPLT,KWD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",false); ArrToday = convertTo(GLDPLT,KWD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",true); ArrToday = convertTo(GLDPLD,KWD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 13) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("KWD",false); ArrToday = convertTo(GLDPLD,KWD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",true); Arr3Days = MXN; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",false); Arr3Days = convert3Days2Grams(MXN); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",true); Arr3Days = convertTo(GLDSLV,MXN,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",false); Arr3Days = convertTo(GLDSLV,MXN,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",true); Arr3Days = convertTo(GLDPLT,MXN,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",false); Arr3Days = convertTo(GLDPLT,MXN,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",true); Arr3Days = convertTo(GLDPLD,MXN,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MXN",false); Arr3Days = convertTo(GLDPLD,MXN,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",true); ArrToday = convertToOneDay(MXN,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",false); ArrToday = convertToOneDay(MXN,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",true); ArrToday = convertTo(GLDSLV,MXN,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",false); ArrToday = convertTo(GLDSLV,MXN,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",true); ArrToday = convertTo(GLDPLT,MXN,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",false); ArrToday = convertTo(GLDPLT,MXN,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",true); ArrToday = convertTo(GLDPLD,MXN,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 14) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MXN",false); ArrToday = convertTo(GLDPLD,MXN,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",true); Arr3Days = MYR; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",false); Arr3Days = convert3Days2Grams(MYR); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",true); Arr3Days = convertTo(GLDSLV,MYR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",false); Arr3Days = convertTo(GLDSLV,MYR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",true); Arr3Days = convertTo(GLDPLT,MYR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",false); Arr3Days = convertTo(GLDPLT,MYR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",true); Arr3Days = convertTo(GLDPLD,MYR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("MYR",false); Arr3Days = convertTo(GLDPLD,MYR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",true); ArrToday = convertToOneDay(MYR,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",false); ArrToday = convertToOneDay(MYR,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",true); ArrToday = convertTo(GLDSLV,MYR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",false); ArrToday = convertTo(GLDSLV,MYR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",true); ArrToday = convertTo(GLDPLT,MYR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",false); ArrToday = convertTo(GLDPLT,MYR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",true); ArrToday = convertTo(GLDPLD,MYR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 15) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("MYR",false); ArrToday = convertTo(GLDPLD,MYR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",true); Arr3Days = NZD; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",false); Arr3Days = convert3Days2Grams(NZD); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",true); Arr3Days = convertTo(GLDSLV,NZD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",false); Arr3Days = convertTo(GLDSLV,NZD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",true); Arr3Days = convertTo(GLDPLT,NZD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",false); Arr3Days = convertTo(GLDPLT,NZD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",true); Arr3Days = convertTo(GLDPLD,NZD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("NZD",false); Arr3Days = convertTo(GLDPLD,NZD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",true); ArrToday = convertToOneDay(NZD,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",false); ArrToday = convertToOneDay(NZD,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",true); ArrToday = convertTo(GLDSLV,NZD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",false); ArrToday = convertTo(GLDSLV,NZD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",true); ArrToday = convertTo(GLDPLT,NZD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",false); ArrToday = convertTo(GLDPLT,NZD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",true); ArrToday = convertTo(GLDPLD,NZD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 16) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("NZD",false); ArrToday = convertTo(GLDPLD,NZD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",true); Arr3Days = PEN; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",false); Arr3Days = convert3Days2Grams(PEN); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",true); Arr3Days = convertTo(GLDSLV,PEN,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",false); Arr3Days = convertTo(GLDSLV,PEN,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",true); Arr3Days = convertTo(GLDPLT,PEN,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",false); Arr3Days = convertTo(GLDPLT,PEN,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",true); Arr3Days = convertTo(GLDPLD,PEN,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PEN",false); Arr3Days = convertTo(GLDPLD,PEN,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",true); ArrToday = convertToOneDay(PEN,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",false); ArrToday = convertToOneDay(PEN,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",true); ArrToday = convertTo(GLDSLV,PEN,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",false); ArrToday = convertTo(GLDSLV,PEN,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",true); ArrToday = convertTo(GLDPLT,PEN,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",false); ArrToday = convertTo(GLDPLT,PEN,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",true); ArrToday = convertTo(GLDPLD,PEN,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 17) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PEN",false); ArrToday = convertTo(GLDPLD,PEN,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",true); Arr3Days = PHP; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",false); Arr3Days = convert3Days2Grams(PHP); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",true); Arr3Days = convertTo(GLDSLV,PHP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",false); Arr3Days = convertTo(GLDSLV,PHP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",true); Arr3Days = convertTo(GLDPLT,PHP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",false); Arr3Days = convertTo(GLDPLT,PHP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",true); Arr3Days = convertTo(GLDPLD,PHP,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("PHP",false); Arr3Days = convertTo(GLDPLD,PHP,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",true); ArrToday = convertToOneDay(PHP,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",false); ArrToday = convertToOneDay(PHP,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",true); ArrToday = convertTo(GLDSLV,PHP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",false); ArrToday = convertTo(GLDSLV,PHP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",true); ArrToday = convertTo(GLDPLT,PHP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",false); ArrToday = convertTo(GLDPLT,PHP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",true); ArrToday = convertTo(GLDPLD,PHP,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 18) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("PHP",false); ArrToday = convertTo(GLDPLD,PHP,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",true); Arr3Days = RUR; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",false); Arr3Days = convert3Days2Grams(RUR); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",true); Arr3Days = convertTo(GLDSLV,RUR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",false); Arr3Days = convertTo(GLDSLV,RUR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",true); Arr3Days = convertTo(GLDPLT,RUR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",false); Arr3Days = convertTo(GLDPLT,RUR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",true); Arr3Days = convertTo(GLDPLD,RUR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("RUR",false); Arr3Days = convertTo(GLDPLD,RUR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",true); ArrToday = convertToOneDay(RUR,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",false); ArrToday = convertToOneDay(RUR,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",true); ArrToday = convertTo(GLDSLV,RUR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",false); ArrToday = convertTo(GLDSLV,RUR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",true); ArrToday = convertTo(GLDPLT,RUR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",false); ArrToday = convertTo(GLDPLT,RUR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",true); ArrToday = convertTo(GLDPLD,RUR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 19) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("RUR",false); ArrToday = convertTo(GLDPLD,RUR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",true); Arr3Days = SEK; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",false); Arr3Days = convert3Days2Grams(SEK); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",true); Arr3Days = convertTo(GLDSLV,SEK,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",false); Arr3Days = convertTo(GLDSLV,SEK,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",true); Arr3Days = convertTo(GLDPLT,SEK,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",false); Arr3Days = convertTo(GLDPLT,SEK,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",true); Arr3Days = convertTo(GLDPLD,SEK,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SEK",false); Arr3Days = convertTo(GLDPLD,SEK,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",true); ArrToday = convertToOneDay(SEK,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",false); ArrToday = convertToOneDay(SEK,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",true); ArrToday = convertTo(GLDSLV,SEK,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",false); ArrToday = convertTo(GLDSLV,SEK,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",true); ArrToday = convertTo(GLDPLT,SEK,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",false); ArrToday = convertTo(GLDPLT,SEK,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",true); ArrToday = convertTo(GLDPLD,SEK,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 20) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SEK",false); ArrToday = convertTo(GLDPLD,SEK,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",true); Arr3Days = SGD; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",false); Arr3Days = convert3Days2Grams(SGD); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",true); Arr3Days = convertTo(GLDSLV,SGD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",false); Arr3Days = convertTo(GLDSLV,SGD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",true); Arr3Days = convertTo(GLDPLT,SGD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",false); Arr3Days = convertTo(GLDPLT,SGD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",true); Arr3Days = convertTo(GLDPLD,SGD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("SGD",false); Arr3Days = convertTo(GLDPLD,SGD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",true); ArrToday = convertToOneDay(SGD,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",false); ArrToday = convertToOneDay(SGD,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",true); ArrToday = convertTo(GLDSLV,SGD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",false); ArrToday = convertTo(GLDSLV,SGD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",true); ArrToday = convertTo(GLDPLT,SGD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",false); ArrToday = convertTo(GLDPLT,SGD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",true); ArrToday = convertTo(GLDPLD,SGD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 21) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("SGD",false); ArrToday = convertTo(GLDPLD,SGD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",true); Arr3Days = TRY; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",false); Arr3Days = convert3Days2Grams(TRY); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",true); Arr3Days = convertTo(GLDSLV,TRY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",false); Arr3Days = convertTo(GLDSLV,TRY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",true); Arr3Days = convertTo(GLDPLT,TRY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",false); Arr3Days = convertTo(GLDPLT,TRY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",true); Arr3Days = convertTo(GLDPLD,TRY,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("TRY",false); Arr3Days = convertTo(GLDPLD,TRY,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",true); ArrToday = convertToOneDay(TRY,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",false); ArrToday = convertToOneDay(TRY,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",true); ArrToday = convertTo(GLDSLV,TRY,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",false); ArrToday = convertTo(GLDSLV,TRY,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",true); ArrToday = convertTo(GLDPLT,TRY,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",false); ArrToday = convertTo(GLDPLT,TRY,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",true); ArrToday = convertTo(GLDPLD,TRY,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 22) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("TRY",false); ArrToday = convertTo(GLDPLD,TRY,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",true); Arr3Days = USD; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",false); Arr3Days = convert3Days2Grams(USD); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",true); Arr3Days = convertTo(GLDSLV,USD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",false); Arr3Days = convertTo(GLDSLV,USD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",true); Arr3Days = convertTo(GLDPLT,USD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",false); Arr3Days = convertTo(GLDPLT,USD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",true); Arr3Days = convertTo(GLDPLD,USD,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("USD",false); Arr3Days = convertTo(GLDPLD,USD,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",true); ArrToday = convertToOneDay(USD,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",false); ArrToday = convertToOneDay(USD,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",true); ArrToday = convertTo(GLDSLV,USD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",false); ArrToday = convertTo(GLDSLV,USD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",true); ArrToday = convertTo(GLDPLT,USD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",false); ArrToday = convertTo(GLDPLT,USD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",true); ArrToday = convertTo(GLDPLD,USD,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 23) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("USD",false); ArrToday = convertTo(GLDPLD,USD,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",true); Arr3Days = VUV; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",false); Arr3Days = convert3Days2Grams(VUV); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",true); Arr3Days = convertTo(GLDSLV,VUV,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",false); Arr3Days = convertTo(GLDSLV,VUV,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",true); Arr3Days = convertTo(GLDPLT,VUV,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",false); Arr3Days = convertTo(GLDPLT,VUV,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",true); Arr3Days = convertTo(GLDPLD,VUV,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("VUV",false); Arr3Days = convertTo(GLDPLD,VUV,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",true); ArrToday = convertToOneDay(VUV,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",false); ArrToday = convertToOneDay(VUV,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",true); ArrToday = convertTo(GLDSLV,VUV,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",false); ArrToday = convertTo(GLDSLV,VUV,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",true); ArrToday = convertTo(GLDPLT,VUV,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",false); ArrToday = convertTo(GLDPLT,VUV,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",true); ArrToday = convertTo(GLDPLD,VUV,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 24) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("VUV",false); ArrToday = convertTo(GLDPLD,VUV,"oneDay",false); drawChart_Today(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",true); Arr3Days = ZAR; drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",false); Arr3Days = convert3Days2Grams(ZAR); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",true); Arr3Days = convertTo(GLDSLV,ZAR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",false); Arr3Days = convertTo(GLDSLV,ZAR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",true); Arr3Days = convertTo(GLDPLT,ZAR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",false); Arr3Days = convertTo(GLDPLT,ZAR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",true); Arr3Days = convertTo(GLDPLD,ZAR,"threeDays",true); drawChart_3Days(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 0)) { setLatestPrices("ZAR",false); Arr3Days = convertTo(GLDPLD,ZAR,"threeDays",false); drawChart_3Days(buttonSelect); return; }
					
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == true) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",true); ArrToday = convertToOneDay(ZAR,true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == false) && (latestGoldBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",false); ArrToday = convertToOneDay(ZAR,false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == true) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",true); ArrToday = convertTo(GLDSLV,ZAR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == false) && (latestSilverBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",false); ArrToday = convertTo(GLDSLV,ZAR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == true) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",true); ArrToday = convertTo(GLDPLT,ZAR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == false) && (latestPlatinumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",false); ArrToday = convertTo(GLDPLT,ZAR,"oneDay",false); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == true) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",true); ArrToday = convertTo(GLDPLD,ZAR,"oneDay",true); drawChart_Today(buttonSelect); return; }
					if ((currencyComboBoxGold.selectedIndex == 25) && (radioOunce.selected == false) && (latestPalladiumBtn.emphasized == true) && (chartbtn.selectedIndex == 1)) { setLatestPrices("ZAR",false); ArrToday = convertTo(GLDPLD,ZAR,"oneDay",false); drawChart_Today(buttonSelect); return; }
				}
			}
			
			private function setCurrentPriceFor(currency:String, ounce:Boolean):String	{
				switch (currency)	{
					case  "ARS":
						if (ounce == true)	{
							return ARS[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(ARS[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "AUD":
						if (ounce == true)	{
							return AUD[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(AUD[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "BRL":
						if (ounce == true)	{
							return BRL[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(BRL[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "CAD":
						if (ounce == true)	{
							return CAD[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(CAD[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "CHF":
						if (ounce == true)	{
							return CHF[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(CHF[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "CNY":
						if (ounce == true)	{
							return CNY[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(CNY[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "COP":
						if (ounce == true)	{
							return COP[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(COP[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "EUR":
						if (ounce == true)	{
							return EUR[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(EUR[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "GBP":
						if (ounce == true)	{
							return GBP[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(GBP[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "HKD":
						if (ounce == true)	{
							return HKD[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(HKD[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "IDR":
						if (ounce == true)	{
							return IDR[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(IDR[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "INR":
						if (ounce == true)	{
							return INR[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(INR[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "JPY":
						if (ounce == true)	{
							return JPY[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(JPY[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "KWD":
						if (ounce == true)	{
							return KWD[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(KWD[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "MXN":
						if (ounce == true)	{
							return MXN[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(MXN[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "MYR":
						if (ounce == true)	{
							return MYR[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(MYR[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "NZD":
						if (ounce == true)	{
							return NZD[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(NZD[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "PEN":
						if (ounce == true)	{
							return PEN[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(PEN[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "PHP":
						if (ounce == true)	{
							return PHP[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(PHP[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "RUR":
						if (ounce == true)	{
							return RUR[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(RUR[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "SEK":
						if (ounce == true)	{
							return SEK[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(SEK[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "SGD":
						if (ounce == true)	{
							return SGD[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(SGD[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "TRY":
						if (ounce == true)	{
							return TRY[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(TRY[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "USD":
						if (ounce == true)	{
							return USD[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(USD[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "VUV":
						if (ounce == true)	{
							return VUV[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(VUV[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
						break;
					case  "ZAR":
						if (ounce == true)	{
							return ZAR[Cline].toString().split(",")[1];
						} else	{
							return (parseInt(ZAR[Cline].toString().split(",")[1])/31.1034768).toString();			
						}
				}
				return "no data available";
			}
			
			private function setLatestPrices(currency:String, ounce:Boolean):void	{
				switch (currency)	{
					case "ARS": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = ARS[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (ARS[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (ARS[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (ARS[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (ARS[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (ARS[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (ARS[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (ARS[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "AUD": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = AUD[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (AUD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (AUD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (AUD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (AUD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (AUD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (AUD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (AUD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "BRL": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = BRL[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (BRL[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (BRL[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (BRL[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (BRL[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (BRL[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (BRL[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (BRL[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "CAD": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = CAD[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (CAD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (CAD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (CAD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (CAD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (CAD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (CAD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (CAD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "CHF": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = CHF[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (CHF[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (CHF[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (CHF[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (CHF[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (CHF[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (CHF[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (CHF[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "CNY": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = CNY[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (CNY[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (CNY[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (CNY[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (CNY[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (CNY[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (CNY[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (CNY[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "COP": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = COP[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (COP[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(0).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (COP[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(0).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (COP[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(0).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (COP[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (COP[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(0).toString();							
							latestPlatinumPrice = (COP[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(0).toString();
							latestPalladiumPrice = (COP[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(0).toString();	
						}
						break;
					case "EUR": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = EUR[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (EUR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (EUR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (EUR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (EUR[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (EUR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (EUR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (EUR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "GBP": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = GBP[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (GBP[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (GBP[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (GBP[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (GBP[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (GBP[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (GBP[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (GBP[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "HKD": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = HKD[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (HKD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (HKD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (HKD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (HKD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (HKD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (HKD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (HKD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "IDR": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = IDR[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (IDR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(0).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (IDR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(0).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (IDR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(0).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (IDR[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (IDR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(0).toString();							
							latestPlatinumPrice = (IDR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(0).toString();
							latestPalladiumPrice = (IDR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(0).toString();	
						}
						break;
					case "INR": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = INR[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (INR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (INR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (INR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (INR[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (INR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (INR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (INR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "JPY": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = JPY[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (JPY[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(0).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (JPY[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(0).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (JPY[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(0).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (JPY[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (JPY[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(0).toString();							
							latestPlatinumPrice = (JPY[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(0).toString();
							latestPalladiumPrice = (JPY[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(0).toString();	
						}
						break;
					case "KWD": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = KWD[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (KWD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (KWD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (KWD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (KWD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (KWD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (KWD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (KWD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "MXN": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = MXN[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (MXN[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (MXN[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (MXN[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (MXN[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (MXN[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (MXN[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (MXN[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "MYR": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = MYR[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (MYR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (MYR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (MYR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (MYR[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (MYR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (MYR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (MYR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "NZD": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = NZD[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (NZD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (NZD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (NZD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (NZD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (NZD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (NZD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (NZD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "PEN": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = PEN[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (PEN[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (PEN[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (PEN[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (PEN[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (PEN[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (PEN[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (PEN[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "PHP": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = PHP[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (PHP[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(1).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (PHP[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(1).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (PHP[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(1).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (PHP[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (PHP[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(1).toString();							
							latestPlatinumPrice = (PHP[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(1).toString();
							latestPalladiumPrice = (PHP[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(1).toString();	
						}
						break;
					case "RUR": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = RUR[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (RUR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(1).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (RUR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(1).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (RUR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(1).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (RUR[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (RUR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(1).toString();							
							latestPlatinumPrice = (RUR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(1).toString();
							latestPalladiumPrice = (RUR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(1).toString();	
						}
						break;
					case "SEK": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = SEK[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (SEK[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (SEK[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (SEK[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (SEK[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (SEK[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (SEK[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (SEK[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "SGD": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = SGD[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (SGD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (SGD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (SGD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (SGD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (SGD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (SGD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (SGD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "TRY": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = TRY[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (TRY[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (TRY[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (TRY[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (TRY[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (TRY[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (TRY[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (TRY[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "USD": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = USD[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (USD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (USD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(2).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (USD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (USD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (USD[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (USD[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (USD[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "VUV": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = VUV[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (VUV[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(2).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (VUV[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(0).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (VUV[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(2).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (VUV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (VUV[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(2).toString();							
							latestPlatinumPrice = (VUV[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestPalladiumPrice = (VUV[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(2).toString();	
						}
						break;
					case "ZAR": if (ounce == true) {
						latestGoldPrice = latestGoldPriceOz = ZAR[Cline].split(",")[1];
						latestSilverPrice = latestSilverPriceOz = (ZAR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]).toFixed(1).toString();					
						latestPlatinumPrice = latestPlatinumPriceOz = (ZAR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]).toFixed(1).toString();	
						latestPalladiumPrice = latestPalladiumPriceOz = (ZAR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]).toFixed(1).toString();	
					}
						if (ounce == false) {
							latestGoldPrice = (ZAR[Cline].split(",")[1]/31.1034768).toFixed(2).toString();
							latestSilverPrice = (ZAR[Cline].split(",")[1]/GLDSLV[Cline].split(",")[1]/31.1034768).toFixed(1).toString();							
							latestPlatinumPrice = (ZAR[Cline].split(",")[1]/GLDPLT[Cline].split(",")[1]/31.1034768).toFixed(1).toString();
							latestPalladiumPrice = (ZAR[Cline].split(",")[1]/GLDPLD[Cline].split(",")[1]/31.1034768).toFixed(1).toString();	
						}
				}
			}
			
			private function add2Minutes(t:String):String	{
				var hhmm:Array = t.split(":");
				var h:String = '';
				var m:String = '';
				
				if (parseInt(hhmm[1]) == 58)	{
					m = '00';
					if (parseInt(hhmm[0]) == 23)	{
						h = '00';
					}	else	{
						h = (parseInt(hhmm[0])+1).toString();
					}
				}	else	{
					m = (parseInt(hhmm[1]) + 2).toString();
					if (parseInt(hhmm[0]) == 23)	{
						h = '00';
					}	else	{
						h = hhmm[0];
					}					
				}
				if (h.length == 1)
					h = '0' + h;
				if (m.length == 1)
					m = '0' + m;
				return h+":"+m;
			}
			
			private function drawChart_3Days(chartType:String):void	{
				osx.title = "New York Time";
				ser1.yField = "Price3";
				ser2.yField = "Price2";
				ser3.yField = "Price1";
				osx.labelFunction = categoryLabelFunctionTime;
				zoomSlider.dataTipFormatFunction = myDataTipFunc;
				zoomSliderLabel1.text = '00:00';
				zoomSliderLabel2.text = '12:00';
				zoomSliderLabel3.text = '23:58';   
				ser1.visible = ser2.visible = true;				
				if (chartType == 'user')	{
					chart.dataProvider = massageData3DaysUser(Arr3Days, userItemPrice, T_a_3Days, T_b_3Days);
				}
				if ((chartType == 'goldsilverratio') || (chartType == 'goldplatinumratio')) {
					chart.dataProvider = massageData3DaysGoldSilverRatio(Arr3Days1, Arr3Days2, T_a_3Days, T_b_3Days);					
				}
				if (chartType == 'individual')	{
					chart.dataProvider = massageData3DaysCombine(Arr3Days1, Arr3Days2, Arr3Days3, Arr3Days4, T_a_3Days, T_b_3Days);
				}
				if (chartType == '')	{
					chart.dataProvider = massageData3Days(Arr3Days, T_a_3Days,T_b_3Days);
				}
				buildChartLabel();
				chart.invalidateDisplayList();
				/*				ct = USD[Cline].split(",")[0];
				nt = add2Minutes(ct); */
				//				chart.dataProvider.item
			}
			
			private function drawChart_Today(chartType:String):void	{
				osx.title = "New York Time";
				ser3.yField = "Price";
				osx.labelFunction = categoryLabelFunctionTime;
				zoomSlider.dataTipFormatFunction = myDataTipFunc;
				zoomSliderLabel1.text = '00:00';
				zoomSliderLabel2.text = '12:00';
				zoomSliderLabel3.text = '23:58';   
				if (chartType == 'user')	{
					chart.dataProvider = massageDataConstantTimeUser(ArrToday, userItemPrice, T_a_Today, T_b_Today);
				}
				if ((chartType == 'goldsilverratio') || (chartType == 'goldplatinumratio')) {
					chart.dataProvider = massageDataConstantTimeGoldSilverRatio(ArrToday1, ArrToday2, T_a_Today, T_b_Today);
					/*					ct = ArrToday1[Cline].split(",")[0];
					nt = add2Minutes(ct); */
				}
				if (chartType == 'individual')	{
					chart.dataProvider = massageDataConstantTimeCombine(ArrToday1, ArrToday2, ArrToday3, ArrToday4, T_a_Today, T_b_Today);
					/*					ct = ArrToday1[Cline].split(",")[0];
					nt = add2Minutes(ct);*/
				}
				if (chartType == '')	{
					ser1.visible = ser2.visible = false;
					chart.dataProvider=massageDataConstantTime(ArrToday, T_a_Today, T_b_Today);
					/*					ct = ArrToday[Cline].split(",")[0];
					nt = add2Minutes(ct); */
				}
				buildChartLabel();
				chart.invalidateDisplayList();
			}
			
			private function drawChart_History(ArrHistory:Array,a_start:String='none',a_end:String='none'):void	{
				ArrHistoryG = ArrHistory;
				latestSilverBtn.enabled = latestPlatinumBtn.enabled = latestPalladiumBtn.enabled = latestGoldBtn.enabled = radioGram.enabled = radioOunce.enabled = gldpltratioBtn.enabled = gldslvratioBtn.enabled = goldozcalc.enabled = silvozcalc.enabled = platozcalc.enabled = pallozcalc.enabled = indivChartBtn.enabled = false;
				chartLabel.text = 'Historical Gold Price in ' + currencyComboBoxGold.selectedLabel;// + ' from '+ ArrHistory[zoomSlider.values[0]].split(',')[0] +' to '+ArrHistory[zoomSlider.values[1]].split(',')[0];
				osx.title = "Date";
				ser3.yField = "Price";
				osy.title = "Price in "+currencyComboBoxGold.value.toString();
				osx.labelFunction = categoryLabelFunctionDate;
				zoomSlider.dataTipFormatFunction = myDataTipFuncH;
				zoomSliderLabel1.text = ArrHistory[0].split(',')[0];
				var juster:int = (ArrHistory.length)/2;
				zoomSliderLabel2.text = ArrHistory[juster].split(',')[0];
				zoomSliderLabel3.text = ArrHistory[ArrHistory.length-1].split(',')[0];   
				
				if ((a_start == 'none') && (a_end == 'none'))	{
					zoomSlider.maximum = ArrHistory.length-1;
					zoomSlider.values[0] = 0;
					zoomSlider.values[1] = zoomSlider.maximum;
					sliderPositions[4] = 0;
					sliderPositions[5] = zoomSlider.maximum;
				}
				if ((zoomSlider.maximum < sliderPositions[5]) || (zoomSlider.maximum < sliderPositions[4])) {
					sliderPositions[4] = 0;
					sliderPositions[5] = zoomSlider.maximum;
				}
				if (sliderPositions[5] == -1)	{
					zoomSlider.values[1] = ArrHistoryG.length-1;
				}	else	{
					zoomSlider.values[1] = sliderPositions[5];
				}
				if (sliderPositions[4] == -1)	{
					zoomSlider.values[0] = 0;
				}	else	{
					zoomSlider.values[0] = sliderPositions[4];
				}
				if (zoomSlider.values[0] == zoomSlider.values[1])	{
					zoomSlider.values[0] = 0;
					zoomSlider.values[1] = ArrHistory.length-1;
					a_start = 'none';
					a_end = 'none';
				}
				chart.dataProvider = massageDataHistory(ArrHistory,a_start,a_end);
				//				chart.invalidateDisplayList();
			}
			
			public function formatDate(date:String):String	{
				var arr:Array = date.split('/');
				if (arr[0].toString().match(/^\d$/))	{
					arr[0] = '0'+arr[0];
				}
				if (arr[1].toString().match(/^\d$/))	{
					arr[1] = '0'+arr[1];
				}
				if (arr[2].toString().match(/0\d/))		{
					arr[2] = "20"+arr[2];
					return arr[0]+'/'+arr[1]+'/'+arr[2];
				}
				if (arr[2].toString().match(/1\d/))		{
					arr[2] = "20"+arr[2];
					return arr[0]+'/'+arr[1]+'/'+arr[2];
				}
				arr[2] = "19"+arr[2];
				return arr[0]+'/'+arr[1]+'/'+arr[2];				
			}			
			
			public function diffDate(d1:String,d2:String):int	{
				var D1:Array = d1.split('/');
				var D2:Array = d2.split('/');
				
				return (((parseInt(D2[0])*30)+(parseInt(D2[1]))+(parseInt(D2[2])*365)))-(((parseInt(D1[0])*30)+(parseInt(D1[1]))+(parseInt(D1[2])*365)));
			} 
			
			public function zoomData_t(input:Array, d1:String, d2:String, scale:int, zoomIn:Boolean):ArrayCollection	{
				var getRidOf:int;
				var output:ArrayCollection = new ArrayCollection;
				var maxIndex:Number;
				var i:Number;
				var elements:Array;
				var newArr:Array = new Array();
				var d:String;
				var o:Object;
				var iterations:Number = input.length-1;
				
				if (zoomIn)	{
					for (i=0; i<iterations; i++)	{ 
						elements = input[i].split(",",2); 
						elements[0] = formatDate(elements[0]);
						if (((isLeftDateGreaterThanRight(elements[0], d1)) == true) && ((isLeftDateGreaterThanRight(elements[0],d2)) == false))	{
							newArr.push(input[i]); 
						}	else	{
							continue;
						}  
					}
					getRidOf = (newArr.length * scale / 200);
					maxIndex = newArr.length - getRidOf;
					if (newArr.length <= 3)		
						getRidOf = maxIndex = newArr.length;
					if (maxIndex - getRidOf < 3)	{
						maxIndex++;
						getRidOf--;
					}
					A = [];
					for (i=getRidOf; i<maxIndex; i++)	{
						elements = newArr[i].split(",",2);
						o = {Date:elements[0], Price:elements[1]};
						A.push(elements[0]);
						output.addItem(o); 
					}					
				}	else	{
					for (i=0; i<iterations; i++)	{ 
						elements = input[i].split(",",2); 
						elements[0] = formatDate(elements[0]);
						if (elements[0] == d1)	getRidOf = i;
						if (elements[0] == d2)	maxIndex = i;
					}
					var skala:int = diffDate(d1,d2)/10;
					getRidOf = getRidOf - skala;
					maxIndex = maxIndex + skala; 
					if (getRidOf <= 2)	getRidOf = 0;
					if (maxIndex >= iterations-2)	maxIndex = iterations;
					if (maxIndex - getRidOf < 3)	{
						maxIndex += 5;
						getRidOf -= 5;
					}
					A = [];
					for (i=getRidOf; i<maxIndex; i++)	{
						elements = input[i].split(",",2);
						o = {Date:elements[0], Price:elements[1]};
						A.push(elements[0]);
						output.addItem(o); 
					}					
				}
				d = A[A.length-1];
				return output;
			}
			
			public function massageData(input:Array, d1:Date, d2:Date):ArrayCollection	{
				var piece:String;
				var elements:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var d:Date;
				
				A = [];
				
				for each (piece in input)
				{
					elements = piece.split(",",2);
					d = DateField.stringToDate(elements[0], "MM/DD/YYYY");
					if (d < d1)	
						continue;
					if (d > d2)	
						return a;
					o = {Date:elements[0], Price:elements[1]};
					A.push(elements[0]);
					a.addItem(o);
				} 				
				return a;
			}
			
			public function isLeftDateGreaterThanRight(leftDate:String, rightDate:String):Boolean	{
				var leftArr:Array = leftDate.split('/');
				var rightArr:Array = rightDate.split('/');
				var i:int;
				var buff:String;
				
				buff=leftArr[0];
				leftArr[0] = leftArr[1];
				leftArr[1]=buff;
				buff=rightArr[0];
				rightArr[0] = rightArr[1];
				rightArr[1]=buff;
				for (i=2; i>=0; i--)	{
					if (parseInt(leftArr[i]) > parseInt(rightArr[i]))	
						return true;
					if (parseInt(leftArr[i]) < parseInt(rightArr[i]))	
						return false;
				}
				return false;
			}
			
			public function massageData_t(input:Array, d1:String, d2:String):ArrayCollection	{
				var piece:String;
				var elements:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var d:String
				
				A = [];
				
				for each (piece in input)
				{
					elements = piece.split(",",2);
					d = formatDate(elements[0]);
					if (isLeftDateGreaterThanRight(d1,d))	
						continue;
					if (isLeftDateGreaterThanRight(d,d2))	{
						return a;
					}
					o = {Date:elements[0], Price:elements[1]};
					A.push(elements[0]);
					a.addItem(o);
				} 
				return a;
			}
			
			public function massageDataConstantTime(input:Array, T1:String, T2:String):ArrayCollection	{
				var piece:String;
				var elements:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var ar_start:Array = T1.split(":");
				var ar_end:Array = T2.split(":");				
				A = [];
				
				for each (piece in input)
				{
					elements = piece.split(",",2);
					var ar_curr:Array = elements[0].split(":");
					var ar_start_hr:int = parseInt(ar_start[0]);
					var ar_start_min:int = parseInt(ar_start[1]);
					var ar_end_hr:int = parseInt(ar_end[0]);
					var ar_end_min:int = parseInt(ar_end[1]);
					var ar_curr_hr:int = parseInt(ar_curr[0]);
					var ar_curr_min:int = parseInt(ar_curr[1]);	
					if ((ar_start_hr > ar_curr_hr) || (ar_end_hr < ar_curr_hr))	{
						continue;
					}
					if (ar_start_hr == ar_curr_hr)	{
						if ((ar_start_min > ar_curr_min) || (ar_end_min < ar_curr_min))	{
							continue;
						}						
					}
					o = {Date:elements[0], Price:elements[1]};
					A.push(elements[0]);
					a.addItem(o);
				}
				return a;
			}
			
			public function massageDataConstantTimeUser(input:Array, itemPrice:String, T1:String, T2:String):ArrayCollection	{
				var piece:String;
				var elements:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var ar_start:Array = T1.split(":");
				var ar_end:Array = T2.split(":");
				var ip:Number = parseFloat(itemPrice);
				A = [];
				
				for each (piece in input)
				{
					elements = piece.split(",",2);
					var ar_curr:Array = elements[0].split(":");
					var ar_start_hr:int = parseInt(ar_start[0]);
					var ar_start_min:int = parseInt(ar_start[1]);
					var ar_end_hr:int = parseInt(ar_end[0]);
					var ar_end_min:int = parseInt(ar_end[1]);
					var ar_curr_hr:int = parseInt(ar_curr[0]);
					var ar_curr_min:int = parseInt(ar_curr[1]);	
					if ((ar_start_hr > ar_curr_hr) || (ar_end_hr < ar_curr_hr))	{
						continue;
					}
					if (ar_start_hr == ar_curr_hr)	{
						if ((ar_start_min > ar_curr_min) || (ar_end_min < ar_curr_min))	{
							continue;
						}						
					}
					o = {Date:elements[0], Price:(ip/elements[1]).toFixed(2)};
					A.push(elements[0]);
					a.addItem(o);
				}
				return a;
			}
			
			public function massageDataHistory(input:Array, a_start:String='none', a_end:String='none'):ArrayCollection	{
				var line:String;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var inRange:Boolean = false;
				A = [];
				
				for each (line in input)	{
					var item:Array = line.split(',');
					if (a_start != 'none')	{
						if ((!inRange) && (item[0] != a_start))	{
							continue;
						}	else	{
							inRange = true;
						}
						if ((inRange) && (item[0] == a_end))	{
							inRange = false;
						}
					}
					if ((inRange) || (a_start == 'none'))	{
						o = {Date:item[0],Price:item[1]};
						A.push(item[0]);
						a.addItem(o);
					}
				}
				//				var pattern:RegExp = /(\d+)-(\d+)-(\d+)/;
				chartLabel.text = 'Historical Gold Price in ' + currencyComboBoxGold.selectedLabel;// + ' from '+ input[zoomSlider.values[0]].split(',')[0].replace(pattern, "$1\/$2\/$3") +' to '+input[zoomSlider.values[1]].split(',')[0].replace(pattern, "$1\/$2\/$3");
				
				return a;
			}
			
			public function massageDataConstantTimeCombine(inputGld:Array, inputSlv:Array, inputPlt:Array, inputPld:Array, T1:String, T2:String):ArrayCollection	{
				var piece:String;
				var elements1:Array;
				var elements2:Array;
				var elements3:Array;
				var elements4:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var ar_start:Array = T1.split(":");
				var ar_end:Array = T2.split(":");				
				A = [];
				
				for (var k:int = 0; k<720; k++)
				{
					elements1 = inputGld[k].split(",",2);
					elements2 = inputSlv[k].split(",",2);
					elements3 = inputPlt[k].split(",",2);
					elements4 = inputPld[k].split(",",2);
					var ar_curr:Array = elements1[0].split(":");
					var ar_start_hr:int = parseInt(ar_start[0]);
					var ar_start_min:int = parseInt(ar_start[1]);
					var ar_end_hr:int = parseInt(ar_end[0]);
					var ar_end_min:int = parseInt(ar_end[1]);
					var ar_curr_hr:int = parseInt(ar_curr[0]);
					var ar_curr_min:int = parseInt(ar_curr[1]);	
					var goldCount:int = parseInt(goldozcalc.text);
					var silverCount:int = parseInt(silvozcalc.text);
					var platinumCount:int = parseInt(platozcalc.text);
					var palladiumCount:int = parseInt(pallozcalc.text);
					if (!(goldCount >= 0)) goldCount = 0;
					if (!(silverCount >= 0)) silverCount = 0;
					if (!(platinumCount >= 0)) platinumCount = 0;
					if (!(palladiumCount >= 0)) palladiumCount = 0;
					if ((ar_start_hr > ar_curr_hr) || (ar_end_hr < ar_curr_hr))	{
						continue;
					}
					if (ar_start_hr == ar_curr_hr)	{
						if ((ar_start_min > ar_curr_min) || (ar_end_min < ar_curr_min))	{
							continue;
						}						
					}
					o = {Date:elements1[0], Price:elements1[1]*goldCount+elements2[1]*silverCount+elements3[1]*platinumCount+elements4[1]*palladiumCount};
					A.push(elements1[0]);
					a.addItem(o);
				}
				return a;
			}
			
			public function massageData3Days(input:Array, T1:String, T2:String):ArrayCollection     {
				var piece:String;
				var elements:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var ar_start:Array = T1.split(":");
				var ar_end:Array = T2.split(":");
				
				A = [];
				for each (piece in input)
				{
					elements = piece.split(",",5);
					var ar_curr:Array = elements[0].split(":");
					var ar_start_hr:int = parseInt(ar_start[0]);
					var ar_start_min:int = parseInt(ar_start[1]);
					var ar_end_hr:int = parseInt(ar_end[0]);
					var ar_end_min:int = parseInt(ar_end[1]);
					var ar_curr_hr:int = parseInt(ar_curr[0]);
					var ar_curr_min:int = parseInt(ar_curr[1]);					
					if ((ar_start_hr > ar_curr_hr) || (ar_end_hr < ar_curr_hr))	{
						continue;
					}
					if (ar_start_hr == ar_curr_hr)	{
						if ((ar_start_min > ar_curr_min) || (ar_end_min < ar_curr_min))	{
							continue;
						}						
					}
					o = {Date:elements[0], Price1:elements[1], Price2:elements[2], Price3:elements[3], Price4:elements[4]};
					A.push(elements[0]);
					a.addItem(o);
				}
				return a;
			}
			
			public function massageData3DaysUser(input:Array, itemPrice:String, T1:String, T2:String):ArrayCollection     {
				var piece:String;
				var elements:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var ar_start:Array = T1.split(":");
				var ar_end:Array = T2.split(":");
				var ip:Number = parseFloat(itemPrice);
				A = [];
				for each (piece in input)
				{
					elements = piece.split(",",5);
					var ar_curr:Array = elements[0].split(":");
					var ar_start_hr:int = parseInt(ar_start[0]);
					var ar_start_min:int = parseInt(ar_start[1]);
					var ar_end_hr:int = parseInt(ar_end[0]);
					var ar_end_min:int = parseInt(ar_end[1]);
					var ar_curr_hr:int = parseInt(ar_curr[0]);
					var ar_curr_min:int = parseInt(ar_curr[1]);					
					if ((ar_start_hr > ar_curr_hr) || (ar_end_hr < ar_curr_hr))	{
						continue;
					}
					if (ar_start_hr == ar_curr_hr)	{
						if ((ar_start_min > ar_curr_min) || (ar_end_min < ar_curr_min))	{
							continue;
						}						
					}
					o = {Date:elements[0], Price1:(ip/elements[1]).toFixed(2), Price2:(ip/elements[2]).toFixed(2), Price3:(ip/elements[3]).toFixed(2), Price4:(ip/elements[4]).toFixed(2)};
					A.push(elements[0]);
					a.addItem(o);
				}
				return a;
			}
			
			public function massageData3DaysCombine(inputGld:Array, inputSlv:Array, inputPlt:Array, inputPld:Array, T1:String, T2:String):ArrayCollection	{
				var piece:String;
				var elements1:Array;
				var elements2:Array;
				var elements3:Array;
				var elements4:Array;
				var input:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var ar_start:Array = T1.split(":");
				var ar_end:Array = T2.split(":");
				A = [];
				var goldCount:int = parseInt(goldozcalc.text);
				var silverCount:int = parseInt(silvozcalc.text);
				var platinumCount:int = parseInt(platozcalc.text);
				var palladiumCount:int = parseInt(pallozcalc.text);
				if (!(goldCount >= 0)) goldCount = 0;
				if (!(silverCount >= 0)) silverCount = 0;
				if (!(platinumCount >= 0)) platinumCount = 0;
				if (!(palladiumCount >= 0)) palladiumCount = 0;
				for (var k:int = 0; k < 720; k++)
				{
					elements1 = inputGld[k].split(",",5);
					elements2 = inputSlv[k].split(",",5);
					elements3 = inputPlt[k].split(",",5);
					elements4 = inputPld[k].split(",",5);
					var ar_curr:Array = elements1[0].split(":");
					var ar_start_hr:int = parseInt(ar_start[0]);
					var ar_start_min:int = parseInt(ar_start[1]);
					var ar_end_hr:int = parseInt(ar_end[0]);
					var ar_end_min:int = parseInt(ar_end[1]);
					var ar_curr_hr:int = parseInt(ar_curr[0]);
					var ar_curr_min:int = parseInt(ar_curr[1]);					
					if ((ar_start_hr > ar_curr_hr) || (ar_end_hr < ar_curr_hr))	{
						continue;
					}
					if (ar_start_hr == ar_curr_hr)	{
						if ((ar_start_min > ar_curr_min) || (ar_end_min < ar_curr_min))	{
							continue;
						}						
					}
					o = {Date:elements1[0], Price1:elements1[1]*goldCount+elements2[1]*silverCount+elements3[1]*platinumCount+elements4[1]*palladiumCount, Price2:elements1[2]*goldCount+elements2[2]*silverCount+elements3[2]*platinumCount+elements4[2]*palladiumCount, Price3:elements1[3]*goldCount+elements2[3]*silverCount+elements3[3]*platinumCount+elements4[3]*palladiumCount, Price4:elements1[4]*goldCount+elements2[4]*silverCount+elements3[4]*platinumCount+elements4[4]*palladiumCount};
					A.push(elements1[0]);
					a.addItem(o);					
				}
				return a;				
			}
			
			public function massageData3DaysGoldSilverRatio(inputGld:Array, inputSlv:Array, T1:String, T2:String):ArrayCollection	{
				var piece:String;
				var elements1:Array;
				var elements2:Array;
				var input:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var ar_start:Array = T1.split(":");
				var ar_end:Array = T2.split(":");
				A = [];
				for (var k:int = 0; k < 720; k++)
				{
					elements1 = inputGld[k].split(",",5);
					elements2 = inputSlv[k].split(",",5);
					var ar_curr:Array = elements1[0].split(":");
					var ar_start_hr:int = parseInt(ar_start[0]);
					var ar_start_min:int = parseInt(ar_start[1]);
					var ar_end_hr:int = parseInt(ar_end[0]);
					var ar_end_min:int = parseInt(ar_end[1]);
					var ar_curr_hr:int = parseInt(ar_curr[0]);
					var ar_curr_min:int = parseInt(ar_curr[1]);					
					if ((ar_start_hr > ar_curr_hr) || (ar_end_hr < ar_curr_hr))	{
						continue;
					}
					if (ar_start_hr == ar_curr_hr)	{
						if ((ar_start_min > ar_curr_min) || (ar_end_min < ar_curr_min))	{
							continue;
						}						
					}
					o = {Date:elements1[0], Price1:(elements1[1]/elements2[1]).toFixed(3), Price2:(elements1[2]/elements2[2]).toFixed(3), Price3:(elements1[3]/elements2[3]).toFixed(3), Price4:(elements1[4]/elements2[4]).toFixed(3)};
					A.push(elements1[0]);
					a.addItem(o);					
				}
				return a;				
			}
			
			public function massageDataConstantTimeGoldSilverRatio(inputGld:Array, inputSlv:Array, T1:String, T2:String):ArrayCollection	{
				var piece:String;
				var elements1:Array;
				var elements2:Array;
				var o:Object;
				var a:ArrayCollection = new ArrayCollection();
				var ar_start:Array = T1.split(":");
				var ar_end:Array = T2.split(":");				
				A = [];
				
				for (var k:int = 0; k<720; k++)
				{
					elements1 = inputGld[k].split(",",2);
					elements2 = inputSlv[k].split(",",2);
					var ar_curr:Array = elements1[0].split(":");
					var ar_start_hr:int = parseInt(ar_start[0]);
					var ar_start_min:int = parseInt(ar_start[1]);
					var ar_end_hr:int = parseInt(ar_end[0]);
					var ar_end_min:int = parseInt(ar_end[1]);
					var ar_curr_hr:int = parseInt(ar_curr[0]);
					var ar_curr_min:int = parseInt(ar_curr[1]);	
					var goldCount:int = parseInt(goldozcalc.text);
					var silverCount:int = parseInt(silvozcalc.text);
					var platinumCount:int = parseInt(platozcalc.text);
					var palladiumCount:int = parseInt(pallozcalc.text);
					if (!(goldCount >= 0)) goldCount = 0;
					if (!(silverCount >= 0)) silverCount = 0;
					if (!(platinumCount >= 0)) platinumCount = 0;
					if (!(palladiumCount >= 0)) palladiumCount = 0;
					if ((ar_start_hr > ar_curr_hr) || (ar_end_hr < ar_curr_hr))	{
						continue;
					}
					if (ar_start_hr == ar_curr_hr)	{
						if ((ar_start_min > ar_curr_min) || (ar_end_min < ar_curr_min))	{
							continue;
						}						
					}
					o = {Date:elements1[0], Price:(elements1[1]/elements2[1]).toFixed(3)};
					A.push(elements1[0]);
					a.addItem(o);
				}
				return a;
			}
			
			public function returnDays(today:Date):Array	{
				var a:Array = new Array();
				switch(today.day)	{
					case 0: if (today.hours < 18) {a[0] = 'Friday'; a[1] = 'Thursday'; a[2] = 'Wednesday'; break;}
					else {a[0] = 'Today'; a[1] = 'Friday'; a[2] = 'Thursday'; break;}
					case 1: a[0] = 'Today'; a[1] = 'Sunday'; a[2] = 'Friday'; break;
					case 2: a[0] = 'Today'; a[1] = 'Monday'; a[2] = 'Sunday'; break;
					case 3: a[0] = 'Today'; a[1] = 'Tuesday'; a[2] = 'Monday'; break;
					case 4: a[0] = 'Today'; a[1] = 'Wednesday'; a[2] = 'Tuesday'; break;
					case 5: a[0] = 'Today'; a[1] = 'Thursday'; a[2] = 'Wednesday'; break;
					case 6: a[0] = 'Friday'; a[1] = 'Thursday'; a[2] = 'Wednesday'; 
				}
				ac = new ArrayCollection(a);
				return a;
			}
			
			public function showDataTip(hd:HitData):String	{
				var item:Object = hd.item;
				//				var s:String = new String();
				//				var todayDate:Date = new Date();
				var a:Array = new Array();
				//				a = returnDays(todayDate);
				currencyCode = currencyComboBoxGold.selectedLabel;
				if (ButtonSelect == 'user') {
					currencyCode = osy.title;
				}
				if (ButtonSelect == 'goldsilverratio')	{
					currencyCode = currencyCode2 = 'GLD/SLV Ratio';
				}
				if (ButtonSelect == 'goldplatinumratio')	{
					currencyCode = currencyCode2 = 'GLD/PLT Ratio';
				}
				if (item.hasOwnProperty("Price1")) 	{
					//Alert.show(hd.chartItem.element.name); // Jesli przestaje dzialac to odkomentowac ta linie
					// todayLabel.visible=true;
					// todayLabel.text = hd.chartItem.element.name;
					// i sprawdzic czy sie zgadzaja nazwy LineSer7es##
					if (hd.chartItem.element.name == "LineSeries54")	{
						/*						chartBkdLabel.setStyle("color",red.color);
						chartBkdLabel.text = item.Date + ' ' + todayDate + ' ' + currencyCode2 + ': ' + numForm.format(parseFloat(item.Price1).toFixed(2).toString()); */
						return item.Date + ' ' + todayDate + "<b><br>" + currencyCode2 + ': ' + numForm.format(parseFloat(item.Price1).toFixed(2).toString());
					}
					/*					if (hd.chartItem.element.name == "LineSeries27")	{
					return '';
					} */
					if (hd.chartItem.element.name == "LineSeries53")	{
						/*						chartBkdLabel.setStyle("color",blue.color);
						chartBkdLabel.text = item.Date + ' ' + dateMinusOne + " " + currencyCode2 + ': ' + numForm.format(parseFloat(item.Price2).toFixed(2).toString()); */
						return item.Date + ' ' + dateMinusOne + "<b><br>" + currencyCode2 + ': ' + numForm.format(parseFloat(item.Price2).toFixed(2).toString());
					}
					if (hd.chartItem.element.name == "LineSeries52")	{
						/*						chartBkdLabel.setStyle("color",green.color);
						chartBkdLabel.text = item.Date + ' ' + dateMinusTwo + " " + currencyCode2 + ': ' + numForm.format(parseFloat(item.Price3).toFixed(2).toString()); */
						return item.Date + ' ' + dateMinusTwo + "<b><br>" + currencyCode2 + ': ' + numForm.format(parseFloat(item.Price3).toFixed(2).toString());
						//						return item.Date + "<b><br>" + currencyCode + ' ' + item.Price1  +"<\b><i><br>" + a[1];
					}
				}
				//				chartBkdLabel.text = '';
				if (chartbtn.selectedIndex == 2)	{
					return "Historical Gold: "+item.Date + "<b><br>" + currencyComboBoxGold.selectedLabel + ' ' + numForm.format(parseFloat(item.Price).toFixed(2).toString());
				}
				
				return item.Date + " New York Time (today)<b><br>" + currencyCode + ' ' + numForm.format(parseFloat(item.Price).toFixed(2).toString());
			} 
			
			/*			public function selectItem(event:ChartItemEvent):void	{
			//			public function selectItem(event:Event):void	{
			var props:Array = new Array();
			if (chartbtn.selectedIndex == 0)	{
			if (!isThisZoomMode)	{
			//						original_chart_style = ser1.getStyle("itemRenderer");
			switch (event.hitData.element.name)	{
			case "LineSeries46": ser1.getStyle("itemRenderer"); ser1.dataTipItems = ser1.items.slice(event.hitData.chartItem.index,event.hitData.chartItem.index+1); break;
			case "LineSeries45": ser2.getStyle("itemRenderer"); ser2.dataTipItems = ser2.items.slice(event.hitData.chartItem.index,event.hitData.chartItem.index+1); break;
			case "LineSeries44": ser3.getStyle("itemRenderer"); ser3.dataTipItems = ser3.items.slice(event.hitData.chartItem.index,event.hitData.chartItem.index+1); 
			}							
			//			chart.invalidateDisplayList();
			T_a_3Days_ = event.hitData.item["Date"];
			isThisZoomMode = true;
			return;	
			}  else	{
			T_b_3Days = event.hitData.item["Date"];
			if (T_b_3Days == T_a_3Days_)	{
			Alert.show("Select different date.");
			return;
			}
			T_a_3Days = T_a_3Days_;
			if (standardTimeToTotalMinutes(T_a_3Days) > standardTimeToTotalMinutes(T_b_3Days))	{
			chart.dataProvider = massageData3Days(Arr3Days, T_b_3Days, T_a_3Days);
			ThreeDaysZoomTable.push(T_b_3Days);
			ThreeDaysZoomTable.push(T_a_3Days);
			}	else	{
			chart.dataProvider = massageData3Days(Arr3Days, T_a_3Days, T_b_3Days);
			ThreeDaysZoomTable.push(T_a_3Days);
			ThreeDaysZoomTable.push(T_b_3Days);
			}		
			switch (event.hitData.element.name)	{
			case "LineSeries46": ser1.setStyle("itemRenderer", original_chart_style); break;
			case "LineSeries45": ser2.setStyle("itemRenderer", original_chart_style); break;
			case "LineSeries44": ser3.setStyle("itemRenderer", original_chart_style);
			}
			//			chart.invalidateDisplayList();
			isThisZoomMode = false;
			zoomingButtons("on");
			}						
			}
			if (chartbtn.selectedIndex == 1)	{
			if (!isThisZoomMode)	{
			original_chart_style = ser1.getStyle("itemRenderer");
			// selectedDataTip = event.hitData.chartItem.index;
			ser1.dataTipItems = ser1.items.slice(event.hitData.chartItem.index,event.hitData.chartItem.index+1);
			// chart.invalidateDisplayList();
			T_a_Today_ = event.hitData.item["Date"];
			isThisZoomMode = true;
			return;
			}
			else	{
			T_b_Today = event.hitData.item["Date"];
			if (T_a_Today_ == T_b_Today)	{
			Alert.show("Select different date.");
			return;
			}
			T_a_Today = T_a_Today_;
			if (standardTimeToTotalMinutes(T_a_Today) > standardTimeToTotalMinutes(T_b_Today))	{
			chart.dataProvider = massageDataConstantTime(ArrToday, T_b_Today, T_a_Today);						
			TodayZoomTable.push(T_b_Today);
			TodayZoomTable.push(T_a_Today);
			}	else	{
			chart.dataProvider = massageDataConstantTime(ArrToday, T_a_Today, T_b_Today);
			TodayZoomTable.push(T_a_Today);
			TodayZoomTable.push(T_b_Today);
			}
			ser1.setStyle("itemRenderer", original_chart_style);
			//			chart.invalidateDisplayList();
			//						selectedDataTip = -1;
			isThisZoomMode = false;
			zoomingButtons("on");
			}						
			}
			} */
			
			private function zoomingButtons(todo:String):void	{
				/*				if (todo == "off")	{
				zoomOutBtn.visible = false;
				resetBtn.visible = false;
				} else	{
				zoomOutBtn.visible = true;
				resetBtn.visible = true;					
				} */
			}
			
			/*			private function zoomOut():void	{
			if (chartbtn.selectedIndex == 0)	{
			if (ThreeDaysZoomTable.length <= 2)	{
			ThreeDaysZoomTable = [];
			reset();
			return;
			}
			if ((T_b_3Days == ThreeDaysZoomTable[ThreeDaysZoomTable.length-1]) && (T_a_3Days == ThreeDaysZoomTable[ThreeDaysZoomTable.length-2]))	{
			ThreeDaysZoomTable.pop();
			ThreeDaysZoomTable.pop();
			}
			T_a_3Days = ThreeDaysZoomTable.pop();
			T_b_3Days = ThreeDaysZoomTable.pop();
			chart.dataProvider = massageData3Days(Arr3Days, T_b_3Days, T_a_3Days);
			}
			if (chartbtn.selectedIndex == 1)	{
			if (TodayZoomTable.length <= 2)	{
			TodayZoomTable = [];
			reset();
			return;
			}
			if ((T_b_Today == TodayZoomTable[TodayZoomTable.length-1]) && (T_a_Today == TodayZoomTable[TodayZoomTable.length-2]))	{
			TodayZoomTable.pop();
			TodayZoomTable.pop();
			}
			T_a_Today = TodayZoomTable.pop();
			T_b_Today = TodayZoomTable.pop();
			chart.dataProvider = massageDataConstantTime(ArrToday, T_b_Today, T_a_Today);
			}
			}
			
			private function standardTimeToTotalMinutes(time:String):Number	{
			var timeArr:Array = time.split(':');
			var timeTotal:Number = parseInt(timeArr[0]) * 60 + parseInt(timeArr[1]);
			return timeTotal;
			}
			
			private function totalMinutesToStandardTime(timeTotal:int):String	{
			var hrs:Number = timeTotal/60;
			var timeS:String = hrs.toString();
			var timeArr:Array = timeS.split('.');
			var Hr:String = timeArr[0].substr(0,2);
			var Min:String = (timeArr[1] * 60).toString().substr(0,2);
			if ((Min == 'Na') || (parseInt(Min) > 59))	{ Min = '00'; }
			return Hr+':'+Min;
			} */
			
			public function categoryLabelFunctionDate(labelValue:Object,previousValue:Object, axis:IAxis):String
			{
				var index:int = int(labelValue);
				
				if (index >= 0 && index < A.length)	{
					return dateForm.format(A[index].toString());
				}
				return "";
			}
			
			public function categoryLabelFunctionTime(labelValue:Object,previousValue:Object, axis:IAxis):String
			{
				var index:int = int(labelValue);
				
				if (index >= 0 && index < A.length)	{
					return A[index].toString();
				}
				return "";
			}
			
			public function defineVerticalLabel(cat:Object, pcat:Object,ax:LinearAxis):String 
			{
				// OLD DESIGN:
				//				return currencyCode2 + ' ' + numForm.format(cat);
				// NEW DESIGN:
				//				return numForm2.format(cat);
				// EVEN NEWWER DESIGN:
				return numForm.format(cat);
			}
			
			public function makeButtonsFontLightColor():void	{
				latestGoldBtn.setStyle("color","0xc7c701");				
				latestSilverBtn.setStyle("color","0xc7c701");				
				latestPlatinumBtn.setStyle("color","0xc7c701");				
				latestPalladiumBtn.setStyle("color","0xc7c701");
				gldslvratioBtn.setStyle("color","0xc7c701");				
				gldpltratioBtn.setStyle("color","0xc7c701");	
				indivChartBtn.setStyle("color","0xc7c701");
				newButton.setStyle("color","0xc7c701");
			}
			
			public function deEmphasize(s:String):void	{
				isThisZoomMode = false;
				if (s != 'user')	{
					currencyComboBoxGold.enabled = true;
					radioOunce.enabled = true;
					radioGram.enabled = true;
				}
				switch (s)	{
					case 'gold': latestSilverBtn.emphasized = latestPlatinumBtn.emphasized = latestPalladiumBtn.emphasized = indivChartBtn.emphasized = gldslvratioBtn.emphasized = gldpltratioBtn.emphasized = newButton.emphasized = false;
						//tracker.trackPageview("przycisk zloto");
						makeButtonsFontLightColor();
						latestGoldBtn.emphasized = true;
						latestGoldBtn.setStyle("color","0xffff00");
						totalWorth.setStyle("color","0x5f5f00");
						layoutRedesign('system');
						return;
					case 'silver': latestGoldBtn.emphasized = latestPlatinumBtn.emphasized = latestPalladiumBtn.emphasized = indivChartBtn.emphasized = gldslvratioBtn.emphasized = gldpltratioBtn.emphasized = newButton.emphasized = false;
						//tracker.trackPageview("przycisk srebro");
						makeButtonsFontLightColor();
						latestSilverBtn.setStyle("color","0xffff00");
						totalWorth.setStyle("color","0x5f5f00");
						latestSilverBtn.emphasized = true;
						layoutRedesign('system');
						return;
					case 'platinum': latestGoldBtn.emphasized = latestSilverBtn.emphasized = latestPalladiumBtn.emphasized = indivChartBtn.emphasized = gldslvratioBtn.emphasized = gldpltratioBtn.emphasized = newButton.emphasized = false;
						//tracker.trackPageview("przycisk platyna");
						makeButtonsFontLightColor();
						latestPlatinumBtn.setStyle("color","0xffff00");
						totalWorth.setStyle("color","0x5f5f00");
						latestPlatinumBtn.emphasized = true;
						layoutRedesign('system');
						return;
					case 'palladium': latestSilverBtn.emphasized = latestPlatinumBtn.emphasized = latestGoldBtn.emphasized = indivChartBtn.emphasized = gldslvratioBtn.emphasized = gldpltratioBtn.emphasized = newButton.emphasized = false;
						//tracker.trackPageview("przycisk palad");
						makeButtonsFontLightColor();
						latestPalladiumBtn.setStyle("color","0xffff00");
						totalWorth.setStyle("color","0x5f5f00");
						latestPalladiumBtn.emphasized = true;
						layoutRedesign('system');
						return;
					case 'individual': latestSilverBtn.emphasized = latestPalladiumBtn.emphasized = latestPlatinumBtn.emphasized = latestGoldBtn.emphasized = gldslvratioBtn.emphasized = gldpltratioBtn.emphasized = newButton.emphasized = false;
						//tracker.trackPageview("przycisk indywidualny: "+ numForm.format(parseFloat(totalWorthv)) + ' ' + currencyComboBoxGold.selectedLabel  );
						makeButtonsFontLightColor();
						indivChartBtn.setStyle("color","0xffff00");
						indivChartBtn.emphasized = true;
						layoutRedesign('system');
						totalWorth.setStyle("color","0xffff00");
						return;
					case 'gldslvratio': latestSilverBtn.emphasized = latestPalladiumBtn.emphasized = latestPlatinumBtn.emphasized = latestGoldBtn.emphasized = indivChartBtn.emphasized = gldpltratioBtn.emphasized = newButton.emphasized = false;
						//tracker.trackPageview("przycisk gld/slv");
						makeButtonsFontLightColor();
						gldslvratioBtn.setStyle("color","0xffff00");
						totalWorth.setStyle("color","0x5f5f00");
						gldslvratioBtn.emphasized = true;
						layoutRedesign('system');
						return;
					case 'gldpltratio': latestSilverBtn.emphasized = latestPalladiumBtn.emphasized = latestPlatinumBtn.emphasized = latestGoldBtn.emphasized = indivChartBtn.emphasized = gldslvratioBtn.emphasized = newButton.emphasized = false;
						//tracker.trackPageview("przycisk gld/plt");
						makeButtonsFontLightColor();
						gldpltratioBtn.setStyle("color","0xffff00");
						totalWorth.setStyle("color","0x5f5f00");
						gldpltratioBtn.emphasized = true;
						layoutRedesign('system');
						return;
					case 'user': latestSilverBtn.emphasized = latestPalladiumBtn.emphasized = latestPlatinumBtn.emphasized = latestGoldBtn.emphasized = indivChartBtn.emphasized = gldslvratioBtn.emphasized = gldpltratioBtn.emphasized = false;
						makeButtonsFontLightColor();
						newButton.setStyle("color","0xffff00");
						totalWorth.setStyle("color","0x5f5f00");
						newButton.emphasized = true;
						currencyComboBoxGold.enabled = false;
						radioOunce.enabled = false;
						radioGram.enabled = false;
						layoutRedesign('user');
						return;
				}
			}
			
			private function camelCaseString(inputstr:String):String
			{
				var loopcount:int;
				var returnstr:String = "";
				var origStr:String;
				loopcount = inputstr.length;
				origStr = inputstr;
				while(loopcount>0)
				{
					var lastSpaceIndex:int = origStr.indexOf(" ",0);
					if(lastSpaceIndex<0)
					{
						lastSpaceIndex=origStr.length;
					}
					var tempstr:String = origStr.substring(0,lastSpaceIndex);
					var firstpartStr:String = tempstr.substr(0,1);
					var secondpartStr:String = tempstr.substr(1,tempstr.length);
					
					returnstr = returnstr+firstpartStr.toUpperCase()+secondpartStr.toLowerCase()+' ';
					origStr = origStr.substring(lastSpaceIndex+1,origStr.length);
					loopcount = loopcount - 1;
				}
				return StringUtil.trim(returnstr);
			}
			
			private function layoutRedesign(option:String):void	{
				if (option == 'user')	{
					var metals:Array = ["Gold", "Silver", "Platinum", "Palladium"];
					currencyCode2 = '';
					/*					if (currencyComboBoxGold.parent)	{
					horizontalParent1.removeElement(currencyComboBoxGold);
					}
					spotLabel.setStyle("color",0xff6600);
					spotLabel.width = 167;
					spotLabel.text = */ osy.title = chartLabel.text = camelCaseString(userButtonName.toLowerCase())+' In '+metals[userMetal];
				}
				if (option == 'system')	{
					currencyCode2 = currencyCode;
					/*					spotLabel.setStyle("color","Yellow");
					spotLabel.width = 92;
					spotLabel.text = 'SPOT PRICE IN ';
					horizontalParent1.addElementAt(currencyComboBoxGold,1); */
				}	
			}
			
			/*			private function reset():void	{
			zoomingButtons("off");
			switch (chartbtn.selectedIndex)	{
			case 0: T_a_3Days = '00:00'; T_b_3Days = '23:58'; chart.dataProvider=massageData3Days(Arr3Days, T_a_3Days, T_b_3Days); break;
			case 1: T_a_Today = '00:00'; T_b_Today = '23:58'; chart.dataProvider=massageDataConstantTime(ArrToday, T_a_Today, T_b_Today);   
			}
			chart.invalidateDisplayList();
			}	*/
			
			private function chartStyleLoad():void	{
				backgroundColor.color = chartStyle[0]; 
				chart.setStyle("color",chartStyle[1].toString());
				//				chart.setStyle("fontFamily",chartStyle[2].toString())
				chart.setStyle("fontFamily","Arial")
				chart.setStyle("fontSize",chartStyle[3].toString())
				chart.setStyle("fontStyle",chartStyle[4].toString())
				chart.setStyle("fontWeight",chartStyle[5].toString())
				gridlines.setStyle("gridDirection",chartStyle[6].toString())
				horLine.color = chartStyle[7]
				horLine.weight = chartStyle[8]
				horLine.alpha = chartStyle[9]
				verLine.color = chartStyle[10]
				verLine.weight = chartStyle[11]
				verLine.alpha = chartStyle[12]
				horFill.color = chartStyle[13]
				horFill.alpha = chartStyle[14]
				verFill.color = chartStyle[15]
				verFill.alpha = chartStyle[16]
				red.color = chartStyle[17]
				red.weight = chartStyle[18]
				ser3.setStyle("lineStroke", red)
				white.color = chartStyle[19] // must be background color
				white.weight = chartStyle[20]
				//				ser4.setStyle("lineStroke", white)
				green.color = chartStyle[21]
				green.weight = chartStyle[22]
				ser1.setStyle("lineStroke", green)
				blue.color = chartStyle[23]
				blue.weight = chartStyle[24]
				ser2.setStyle("lineStroke", blue)
				XAxis.color = chartStyle[25]
				XAxis.weight = chartStyle[26]
				XAxis.alpha = chartStyle[27]
				YAxis.color = chartStyle[28]
				YAxis.weight = chartStyle[29]
				YAxis.alpha = chartStyle[30]
				latestGoldBtn.setStyle("fontFamily",chartStyle[31].toString())
				latestGoldBtn.setStyle("fontSize",chartStyle[32].toString())
				latestGoldBtn.setStyle("fontWeight",chartStyle[33].toString())
				latestGoldBtn.setStyle("fontStyle",chartStyle[34].toString())
				//				latestGoldBtn.setStyle("color",chartStyle[35].toString()) 
				latestGoldBtn.setStyle("color",'0xffff00') 
				latestSilverBtn.setStyle("fontFamily",chartStyle[36].toString())
				latestSilverBtn.setStyle("fontSize",chartStyle[37].toString())
				latestSilverBtn.setStyle("fontWeight",chartStyle[38].toString())
				latestSilverBtn.setStyle("fontStyle",chartStyle[39].toString())
				latestSilverBtn.setStyle("color",chartStyle[40].toString())
				latestPlatinumBtn.setStyle("fontFamily",chartStyle[41].toString())
				latestPlatinumBtn.setStyle("fontSize",chartStyle[42].toString())
				latestPlatinumBtn.setStyle("fontWeight",chartStyle[43].toString())
				latestPlatinumBtn.setStyle("fontStyle",chartStyle[44].toString())
				latestPlatinumBtn.setStyle("color",chartStyle[45].toString())
				latestPalladiumBtn.setStyle("fontFamily",chartStyle[46].toString())
				latestPalladiumBtn.setStyle("fontSize",chartStyle[47].toString())
				latestPalladiumBtn.setStyle("fontWeight",chartStyle[48].toString())
				latestPalladiumBtn.setStyle("fontStyle",chartStyle[49].toString())
				latestPalladiumBtn.setStyle("color",chartStyle[45].toString())
				gldslvratioBtn.setStyle("fontFamily",chartStyle[46].toString())
				//				gldslvratioBtn.setStyle("fontSize",chartStyle[47].toString())
				gldslvratioBtn.setStyle("fontSize",'16')
				gldslvratioBtn.setStyle("fontWeight",chartStyle[48].toString())
				gldslvratioBtn.setStyle("fontStyle",chartStyle[49].toString())
				gldslvratioBtn.setStyle("color",chartStyle[45].toString())
				gldpltratioBtn.setStyle("fontFamily",chartStyle[46].toString())
				//				gldpltratioBtn.setStyle("fontSize",chartStyle[47].toString())
				gldpltratioBtn.setStyle("fontSize",'16')
				gldpltratioBtn.setStyle("fontWeight",chartStyle[48].toString())
				gldpltratioBtn.setStyle("fontStyle",chartStyle[49].toString())
				gldpltratioBtn.setStyle("color",chartStyle[45].toString())
			}
			
			/*			private function updateWorthLabels():void	{
			accgold.text = (parseFloat(latestGoldPriceOz)*parseFloat(goldozcalc.text)).toFixed(2);
			accsilv.text = (parseFloat(latestSilverPriceOz)*parseFloat(silvozcalc.text)).toFixed(2);
			accplat.text = (parseFloat(latestPlatinumPriceOz)*parseFloat(platozcalc.text)).toFixed(2);
			accpall.text = (parseFloat(latestPalladiumPriceOz)*parseFloat(pallozcalc.text)).toFixed(2);
			totalWorthv=(parseFloat(accgold.text)+parseFloat(accsilv.text)+parseFloat(accplat.text)+parseFloat(accpall.text)).toString();
			} */
			
			private function newChart(event:MouseEvent):void	{
				//				buttonsGrp.removeElement(newUserChartBtn);
				//				buttonsGrp.removeElement(wishboxBtn);	wish box...
				buttonsGrp.addElement(BC = createNewChartTable());
				//				buttonsGrp.addElement(wishboxBtn);	wish box...
			}
			
			private function newWishbox(event:MouseEvent):void	{
				//				buttonsGrp.removeElement(newUserChartBtn);
				//				buttonsGrp.removeElement(wishboxBtn);	wish box...
				buttonsGrp.addElement(WB = createNewWishbox());
				//				buttonsGrp.addElement(wishboxBtn);	wish box...
			}
			
			private function cancelNewChart(event:MouseEvent):void	{
				calcLabel1.visible = true;
				calcHGroup.visible = true;
				
				buttonsGrp.removeElement(BC);
				//				buttonsGrp.removeElement(wishboxBtn);	wish box...
				//				buttonsGrp.addElement(newUserChartBtn);
				//				buttonsGrp.addElement(wishboxBtn);	wish box...
			}
			
			private function cancelNewWishbox(event:MouseEvent):void	{
				buttonsGrp.removeElement(WB);
				//				buttonsGrp.removeElement(wishboxBtn); wish box...
				//				buttonsGrp.addElement(newUserChartBtn);
				//				buttonsGrp.addElement(wishboxBtn); wish box...
			}
			
			private function newChartBtn(event:MouseEvent):void	{
				//userButtonName = userButtonName.toUpperCase();
				calcLabel1.visible = true;
				calcHGroup.visible = true;
				
				newButton.width = 115;
				newButton.setStyle("fontSize",15);
				newButton.setStyle("color",chartStyle[45].toString()); 
				/*				newButton.setStyle("fontFamily","Arial");
				newButton.setStyle("fontWeight",chartStyle[48].toString());
				newButton.setStyle("fontStyle",chartStyle[49].toString());
				newButton.setStyle("color",chartStyle[45].toString()); */
				newButton.styleName = "customButton";
				newButton.width = 170;
				newButton.height = 27;
				newButton.addEventListener(MouseEvent.CLICK, function():void { deEmphasize('user'); populateChart('user'); });
				newButton.label = userButtonName;
				buttonsGrp.removeElement(BC); 
				//				buttonsGrp.removeElement(wishboxBtn);	wish box...
				buttonsGrp.addElement(newButton);
				//				newUserChartBtn.label = 'Modify Button...';
				//				newUserChartBtn.width = 150;
				//				newUserChartBtn.height = 27;
				//				buttonsGrp.addElement(newUserChartBtn);
				//				buttonsGrp.addElement(wishboxBtn);	wish box...
				deEmphasize('user');
				populateChart('user');
			}
			
			private function createNewChartTable():BorderContainer	{
				var bc:BorderContainer = new BorderContainer();
				var nameLabel:spark.components.Label = new spark.components.Label();
				var nameTextInput:spark.components.TextInput = new spark.components.TextInput();
				var priceLabel:spark.components.Label = new spark.components.Label();
				var priceTextInput:spark.components.TextInput = new spark.components.TextInput();
				var comboBoxLabel:spark.components.Label = new spark.components.Label();
				var comboBox1:spark.components.ComboBox = new spark.components.ComboBox();
				var comboBoxLabel2:spark.components.Label = new spark.components.Label();
				var comboBox2:spark.components.ComboBox = new spark.components.ComboBox();
				var b1:LinkButton = new LinkButton();
				var b2:LinkButton = new LinkButton();
				var currenciesCollection:ArrayCollection = new ArrayCollection(currencies);
				var metalsCollection:ArrayCollection = new ArrayCollection(["GLD","SLV","PLT","PLD"]);
				var hg1:HGroup = new HGroup();
				var hg2:HGroup = new HGroup();
				var hg3:HGroup = new HGroup();
				var vg:VGroup = new VGroup();
				var sp:Spacer = new Spacer();
				var topLabel:spark.components.Label = new spark.components.Label();
				
				calcLabel1.visible = false;
				calcHGroup.visible = false;
				
				topLabel.setStyle("fontSize",18);
				nameLabel.setStyle("fontSize",18);
				nameLabel.setStyle("backgroundAlpha",0);
				priceLabel.setStyle("fontSize",18);
				priceLabel.setStyle("backgroundAlpha",0);
				comboBoxLabel2.setStyle("fontSize",18);
				comboBox1.setStyle("fontSize",15);
				comboBox2.setStyle("fontSize",15);
				nameTextInput.setStyle("fontSize",12);
				priceTextInput.setStyle("fontSize",12);
				b1.setStyle("fontSize",16);
				b2.setStyle("fontSize",16);
				nameTextInput.maxChars = 11;
				nameTextInput.text = 'Dream House';
				priceTextInput.restrict = "0-9";
				priceTextInput.text = numForm2.format("1000000");
				priceTextInput.maxChars = 12;				
				
				topLabel.text = 'Design Your Chart';
				topLabel.setStyle("color","0xff6600");
				comboBox1.dataProvider = currenciesCollection;
				comboBox2.dataProvider = metalsCollection;
				comboBox1.selectedIndex = 0;
				comboBox2.selectedIndex = 0;
				if (userCurrency >= 0) comboBox1.selectedIndex = userCurrency;
				if (userMetal >= 0) comboBox2.selectedIndex = userMetal;
				if (userButtonName != '') nameTextInput.text = userButtonName;
				if (userItemPrice != '') priceTextInput.text = userItemPrice;
				b1.label = "OK";
				b2.label = "Cancel";
				b1.setStyle("color","0xff6600");
				b2.setStyle("color","0xff6600");				
				nameLabel.text = "Item ";
				nameLabel.setStyle("color","0xff6600");
				priceLabel.text = "Price ";
				priceLabel.setStyle("color","0xff6600");
				comboBoxLabel.text = "Currency:";
				comboBoxLabel.setStyle("color","0xff6600");
				comboBoxLabel2.text = "Convert To";
				comboBoxLabel2.setStyle("color","0xff6600");
				comboBox1.width = 50;
				comboBox2.width = 50;
				comboBox1.addEventListener(Event.CHANGE, function():void { userCurrency = comboBox1.selectedIndex; });
				userCurrency = comboBox1.selectedIndex;
				comboBox2.addEventListener(Event.CHANGE, function():void { userMetal = comboBox2.selectedIndex; });
				userMetal = comboBox2.selectedIndex;
				nameLabel.styleName = "customButton";
				priceLabel.styleName = "customButton";
				nameTextInput.width = 122;
				nameTextInput.addEventListener(Event.CHANGE, function():void { userButtonName = nameTextInput.text; });
				userButtonName = nameTextInput.text;
				priceTextInput.width = 64;
				priceTextInput.addEventListener(Event.CHANGE, function():void { userItemPrice = priceTextInput.text; });	
				userItemPrice = numForm_erase.format(priceTextInput.text);
				sp.height = 3;
				bc.setStyle("backgroundColor",0xff6600);
				bc.setStyle("borderColor",0xff6600);
				bc.setStyle("backgroundAlpha",0.5);
				hg1.addElement(nameLabel);
				hg1.addElement(nameTextInput);
				hg2.addElement(priceLabel);
				hg2.addElement(priceTextInput);
				hg2.addElement(comboBox1);
				hg2.addElement(comboBoxLabel2);
				hg2.addElement(comboBox2);
				hg3.addElement(b1);
				hg3.addElement(b2);
				vg.addElement(sp);
				vg.addElement(topLabel);
				vg.addElement(hg1);
				vg.addElement(hg2);
				vg.addElement(hg3);
				bc.addElement(vg);
				b2.addEventListener(MouseEvent.CLICK, cancelNewChart);
				b1.addEventListener(MouseEvent.CLICK, newChartBtn);
				bc.width = 285;
				return bc;
			}
			
			private function createNewWishbox():BorderContainer	{
				var wb:BorderContainer = new BorderContainer();
				var sp1:Spacer = new Spacer();
				var sp2:Spacer = new Spacer();
				var nameLabel:spark.components.Label = new spark.components.Label();
				var nameLabel2:spark.components.Label = new spark.components.Label();
				var nameTextInput:spark.components.TextInput = new spark.components.TextInput();
				var emailLabel:spark.components.Label = new spark.components.Label();
				var emailLabel2:spark.components.Label = new spark.components.Label();
				var emailTextInput:spark.components.TextInput = new spark.components.TextInput();
				var wishlistLabel:spark.components.Label = new spark.components.Label();
				var wishlistInput:TextArea = new TextArea();
				var b1:LinkButton = new LinkButton();
				var b2:LinkButton = new LinkButton();
				var hg1:HGroup = new HGroup();
				var hg2:HGroup = new HGroup();
				var hg3:HGroup = new HGroup();
				var hg4:HGroup = new HGroup();
				var hg5:HGroup = new HGroup();
				var vg:VGroup = new VGroup();
				var sp:Spacer = new Spacer();
				var topLabel:spark.components.Label = new spark.components.Label();
				
				topLabel.setStyle("fontSize",19);
				nameLabel.setStyle("fontSize",18);
				nameLabel.setStyle("backgroundAlpha",0);
				nameTextInput.setStyle("fontSize",18);
				nameLabel2.setStyle("fontSize",18);
				nameLabel2.setStyle("backgroundAlpha",0);
				emailLabel.setStyle("fontSize",18);
				emailLabel.setStyle("backgroundAlpha",0);
				emailTextInput.setStyle("fontSize",18);
				emailLabel2.setStyle("fontSize",18);
				emailLabel2.setStyle("backgroundAlpha",0);
				wishlistLabel.setStyle("fontSize",18);
				wishlistLabel.setStyle("backgroundAlpha",0);
				wishlistInput.setStyle("fontSize",18);
				b1.setStyle("fontSize",16);
				b2.setStyle("fontSize",16);
				
				sp1.height = sp2.height = 5;
				topLabel.text = 'New Feature / Bug Report';
				topLabel.setStyle("color","yellow");
				b1.label = "Send";
				b2.label = "Cancel";
				b1.setStyle("color","yellow");
				b2.setStyle("color","yellow");				
				nameLabel.text = "Name  ";
				nameLabel.setStyle("color","yellow");
				nameLabel2.text = "not required";
				nameLabel2.setStyle("color","yellow");
				emailLabel.text = "e-mail ";
				emailLabel.setStyle("color","yellow");
				emailLabel2.text = "not required";
				emailLabel2.setStyle("color","yellow");
				wishlistLabel.text = "New Feature / Bug Report (appreciated!)";
				wishlistLabel.setStyle("color","yellow");
				nameLabel.styleName = "customButton";
				emailLabel.styleName = "customButton";
				wishlistLabel.styleName = "customButton";
				nameTextInput.width = 170;
				nameTextInput.addEventListener(Event.CHANGE, function():void { });
				emailTextInput.width = 166;
				emailTextInput.addEventListener(Event.CHANGE, function():void { });
				wishlistInput.width = 270;
				wishlistInput.height = 75;
				sp.height = 3;
				wb.setStyle("backgroundColor","yellow");
				wb.setStyle("borderColor","yellow");
				wb.setStyle("backgroundAlpha",0.5);
				hg1.addElement(nameLabel);
				hg1.addElement(nameTextInput);
				hg1.addElement(nameLabel2);
				hg2.addElement(emailLabel);
				hg2.addElement(emailTextInput);
				hg2.addElement(emailLabel2);
				hg3.addElement(wishlistLabel);
				hg4.addElement(wishlistInput);
				hg5.addElement(b1);
				hg5.addElement(b2);
				vg.addElement(sp);
				vg.addElement(topLabel);
				vg.addElement(sp1);
				vg.addElement(hg1);
				vg.addElement(hg2);
				vg.addElement(sp2);				
				vg.addElement(hg3);
				vg.addElement(hg4);
				vg.addElement(hg5);
				wb.addElement(vg);
				b2.addEventListener(MouseEvent.CLICK, cancelNewWishbox);
				b1.addEventListener(MouseEvent.CLICK, newWishbox);
				wb.width = 285;
				return wb;
			}
			
			private function onKeyDown(event:KeyboardEvent):void {
				if (event.target.text == '0.00') event.target.text = ''; 
				// parseFloat(String.fromCharCode(event.charCode));
				/*				if (event.keyCode == 190) {
				var pattern:RegExp = /\./;
				if (pattern.test(event.target.text)) event.keyCode = 45;
				else
				event.target.maxChars = 9;
				}*/
			}
			
			private function setChartBackground():void	{
				betaLabel.text = 'BETA 0.6.7';
				betaLabel.setStyle("color","0x656500");
				betaLabel.setStyle("fontSize",9);
				betaLabel.x = 902;
				betaLabel.y = 660;		
				betaLabel.width = 400;
				betaLabel.height = 50;
				betaLabel.alpha = 0.8;
				
				chartLabel.setStyle("fontFamily","Arial");
				chartLabel.text = 'Live Gold Price in USD:   '+numForm.format(latestGoldPrice);
				chartLabel.setStyle("color","yellow");
				chartLabel.setStyle("fontSize",28);
				chartLabel.alpha = 1;
				chartLabel.width = 600;
				chartLabel.height = 50;
				chartLabel.x = 330;
				chartLabel.y = -32;
				
				chartBkdLabel.setStyle("fontFamily","nextUpdate");
				chartBkdLabel.setStyle("color","0x656500");
				chartBkdLabel.setStyle("fontSize",50);
				chartBkdLabel.alpha = 1;
				chartBkdLabel.width = 1000;
				chartBkdLabel.height = 65;
				chartBkdLabel.x = 0;
				chartBkdLabel.y = -155;
				
				overdueLabel.visible = false;
				overdueLabel.setStyle("color","0x656500");
				overdueLabel.setStyle("fontSize",47);
				overdueLabel.setStyle("fontFamily","nextUpdate");
				overdueLabel.alpha = 1;
				overdueLabel.width = 400;
				overdueLabel.height = 65;
				overdueLabel.x = 760;
				overdueLabel.y = -155;
				overdueLabel.text = 'waiting';
				
				/*				chartLabel.setStyle("color","white");
				chartLabel.setStyle("fontSize","62");
				chartLabel.setStyle("style","bold");
				chartLabel.alpha = 1;
				chartLabel.width = 600;
				chartLabel.height = 100;
				chartLabel.x = 300;
				chartLabel.y = 100;
				chartLabel.alpha = 0.15;
				chartLabel.text = osy.title.toUpperCase(); */
				
				//				todayLabel.text = todayDate.toUpperCase()+" (today)";
				/*				todayLabel.text = 'Today';
				todayLabel.setStyle("color",red.color);
				todayLabel.setStyle("fontSize",11);
				todayLabel.width = 200;
				todayLabel.height = 50; 
				todayLabel.x = 863;
				todayLabel.y = 12;
				todayLabel.alpha = 1; 
				
				yesterdayLabel.text = dateMinusOne.toUpperCase();
				yesterdayLabel.text = 'Yesterday';
				yesterdayLabel.setStyle("color",blue.color);
				yesterdayLabel.setStyle("fontSize",11);
				yesterdayLabel.width = 200;
				yesterdayLabel.height = 50; 
				yesterdayLabel.x = 863;
				yesterdayLabel.y = 25;
				yesterdayLabel.alpha = 1;
				
				//				twoDaysAgoLabel.text = dateMinusTwo.toUpperCase();
				/*				twoDaysAgoLabel.text = 'Two days ago';
				twoDaysAgoLabel.setStyle("color",green.color);
				twoDaysAgoLabel.setStyle("fontSize",11);
				twoDaysAgoLabel.width = 200;
				twoDaysAgoLabel.height = 50; 
				twoDaysAgoLabel.x = 863;
				twoDaysAgoLabel.y = 37;
				twoDaysAgoLabel.alpha = 1;	*/			
				
				//				chart.addChild(betaLabel);
				/*				chart.addChild(todayLabel);
				chart.addChild(yesterdayLabel);
				chart.addChild(twoDaysAgoLabel); */
				chart.addChild(chartBkdLabel);
				chart.addChild(overdueLabel);
				chart.addChild(chartLabel); 
				
				/*				latestGoldBtn.setStyle("fontSize",15);
				latestSilverBtn.setStyle("fontSize",15);
				latestPlatinumBtn.setStyle("fontSize",14);
				latestPalladiumBtn.setStyle("fontSize",14);
				gldslvratioBtn.setStyle("fontSize",15);
				gldpltratioBtn.setStyle("fontSize",15);
				//				newUserChartBtn.setStyle("fontSize",15);*/
				indivChartBtn.setStyle("fontSize",18);
				/* //				newUserChartBtn.setStyle("fontSize",15);
				currencyComboBoxGold.setStyle("fontSize",15);*/
				
				zoomSlider.values[1] = 719;
				zoomSlider.invalidateDisplayList();
				
				zoomSliderLabel.setStyle("fontFamily","nextUpdate");
				zoomSliderLabel.setStyle("color","yellow");
				zoomSliderLabel.setStyle("fontSize",12);
				zoomSliderLabel.width = 200;
				zoomSliderLabel.height = 50; 
				zoomSliderLabel.x = 750;
				zoomSliderLabel.y = 524;
				zoomSliderLabel.alpha = 1;				
				zoomSliderLabel.text = 'ZOOM SLIDER';
				
				zoomSliderLabel1.setStyle("fontFamily","nextUpdate");
				zoomSliderLabel1.setStyle("color","0x656500");
				zoomSliderLabel1.setStyle("fontSize",12);
				zoomSliderLabel1.width = 200;
				zoomSliderLabel1.height = 50; 
				zoomSliderLabel1.x = 662;
				zoomSliderLabel1.y = 500;
				zoomSliderLabel1.alpha = 1;				
				zoomSliderLabel1.text = '00:00';
				
				zoomSliderLabel2.setStyle("fontFamily","nextUpdate");
				zoomSliderLabel2.setStyle("color","0x656500");
				zoomSliderLabel2.setStyle("fontSize",12);
				zoomSliderLabel2.width = 200;
				zoomSliderLabel2.height = 50; 
				zoomSliderLabel2.x = 782;
				zoomSliderLabel2.y = 500;
				zoomSliderLabel2.alpha = 1;				
				zoomSliderLabel2.text = '12:00';
				
				zoomSliderLabel3.setStyle("fontFamily","nextUpdate");
				zoomSliderLabel3.setStyle("color","0x656500");
				zoomSliderLabel3.setStyle("fontSize",12);
				zoomSliderLabel3.width = 200;
				zoomSliderLabel3.height = 50; 
				zoomSliderLabel3.x = 900;
				zoomSliderLabel3.y = 500;
				zoomSliderLabel3.alpha = 1;				
				zoomSliderLabel3.text = '23:58';
				
				sliderPositions[0] = sliderPositions[2] = 0;
				sliderPositions[1] = sliderPositions[3] = 719; 
				
				warningLabel.setStyle("color","yellow");
				warningLabel.setStyle("fontSize",12);
				warningLabel.alpha = 1;
				warningLabel.width = 200;
				warningLabel.height = 50;
				warningLabel.x = 610;
				warningLabel.y = 200;
				warningLabel.text = '';
				warningLabel.visible = false;
				
				chart.addChild(zoomSliderLabel);
				chart.addChild(zoomSliderLabel1);
				chart.addChild(zoomSliderLabel2);
				chart.addChild(zoomSliderLabel3);
				chart.addChild(warningLabel);
				
				
				//				newUserChartBtn.visible = false;
				//				newUserChartBtn.enabled = false;
			}
			
			/*			private function funct():void	
			{
			if (goldozcalc.text == '0.00')  {
			goldozcalc.text='';
			gldWorthv='0'; 
			}
			else 
			gldWorthv=(parseFloat(latestGoldPrice)*parseFloat(goldozcalc.text)).toFixed(2);
			totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString();
			}*/
			
			/*		private function newChartPopUp(event:MouseEvent):void	{
			PopUpManager.addPopUp(panel, this, true);
			PopUpManager.centerPopUp(panel);
			}
			
			private function closeNewChartPopUp(event:MouseEvent):void	{
			PopUpManager.removePopUp(panel);
			} */
			
			/*			private function createPanel():void	{
			var vb:VBox = new VBox();
			var label:mx.controls.Label = new mx.controls.Label();
			var textInput:mx.controls.TextInput = new mx.controls.TextInput();
			var cb:ControlBar = new ControlBar();
			var mx:Spacer = new Spacer();
			var b1:mx.controls.Button = new mx.controls.Button();
			var b2:Button = new Button();
			
			s.percentWidth = 100;
			b1.label = 'OK';
			b1.addEventListener(MouseEvent.CLICK, closeNewChartPopUp);
			b2.label = 'Cancel';
			b2.addEventListener(MouseEvent.CLICK, closeNewChartPopUp);
			cb.addChild(s);
			cb.addChild(b1);
			cb.addChild(b2);
			label.text = "Name: ";
			vb.setStyle("paddingBottom",5);
			vb.setStyle("paddingLeft",5);
			vb.setStyle("paddingRight",5);
			vb.setStyle("paddingTop",5);
			vb.addChild(label);
			vb.addChild(textInput);
			
			panel = new Panel();
			panel.title = "Chart Wizard";
			panel.width = 240;
			panel.height = 180;
			panel.addChild(vb);
			panel.addChild(cb);
			} */
			
			/*private function busyOn():void
			{
			throbber.visible = true;
			}
			
			private function busyOff():void
			{
			throbber.visible = false;
			}*/
			
			private function loadHistory():void	{
				var fileLoad:URLLoader = new URLLoader();
				
				cursorManager.setBusyCursor();
				fileLoad.dataFormat = URLLoaderDataFormat.BINARY;
				fileLoad.load(new URLRequest("hi.zip"));
				fileLoad.addEventListener(Event.COMPLETE, onHistoryZIPLoaded);
				zoomSlider.minimum = 0;
				cursorManager.removeBusyCursor();
				if (currencyComboBoxGold.selectedIndex == 0) { drawChart_History(ARSh); return; }					
				if (currencyComboBoxGold.selectedIndex == 1) { drawChart_History(AUDh); return; }					
				if (currencyComboBoxGold.selectedIndex == 2) { drawChart_History(BRLh); return; }					
				if (currencyComboBoxGold.selectedIndex == 3) { drawChart_History(CADh); return; }					
				if (currencyComboBoxGold.selectedIndex == 4) { drawChart_History(CHFh); return; }					
				if (currencyComboBoxGold.selectedIndex == 5) { drawChart_History(CNYh); return; }					
				if (currencyComboBoxGold.selectedIndex == 6) { drawChart_History(COPh); return; }					
				if (currencyComboBoxGold.selectedIndex == 7) { drawChart_History(EURh); return; }					
				if (currencyComboBoxGold.selectedIndex == 8) { drawChart_History(GBPh); return; }					
				if (currencyComboBoxGold.selectedIndex == 9) { drawChart_History(HKDh); return; }					
				if (currencyComboBoxGold.selectedIndex == 10) { drawChart_History(IDRh); return; }					
				if (currencyComboBoxGold.selectedIndex == 11) { drawChart_History(INRh); return; }					
				if (currencyComboBoxGold.selectedIndex == 12) { drawChart_History(JPYh); return; }					
				if (currencyComboBoxGold.selectedIndex == 13) { drawChart_History(KWDh); return; }					
				if (currencyComboBoxGold.selectedIndex == 14) { drawChart_History(MXNh); return; }					
				if (currencyComboBoxGold.selectedIndex == 15) { drawChart_History(MYRh); return; }					
				if (currencyComboBoxGold.selectedIndex == 16) { drawChart_History(NZDh); return; }					
				if (currencyComboBoxGold.selectedIndex == 17) { drawChart_History(PENh); return; }					
				if (currencyComboBoxGold.selectedIndex == 18) { drawChart_History(PHPh); return; }					
				if (currencyComboBoxGold.selectedIndex == 19) { drawChart_History(RURh); return; }					
				if (currencyComboBoxGold.selectedIndex == 20) { drawChart_History(SEKh); return; }					
				if (currencyComboBoxGold.selectedIndex == 21) { drawChart_History(SGDh); return; }					
				if (currencyComboBoxGold.selectedIndex == 22) { drawChart_History(TRYh); return; }					
				if (currencyComboBoxGold.selectedIndex == 23) { drawChart_History(USDh); return; }					
				if (currencyComboBoxGold.selectedIndex == 24) { drawChart_History(VUVh); return; }					
				if (currencyComboBoxGold.selectedIndex == 25) { drawChart_History(ZARh); return; }			
			}
			
			private function myDataTipFunc(input:String):String {
				return ArrToday[parseInt(input)].split(',')[0];
			}
			
			private function myDataTipFuncH(input:String):String	{
				return ArrHistoryG[parseInt(input)].split(',')[0];
			}
			
			private function sliderChange(event:SliderEvent):void {
				var a_start = parseInt(event.currentTarget.values[0]);
				var a_end = parseInt(event.currentTarget.values[1]);
				if (chartbtn.selectedIndex == 0)	{
					T_a_3Days = Arr3Days[a_start].split(',')[0];
					T_b_3Days = Arr3Days[a_end].split(',')[0];
					sliderPositions[0] = a_start;
					sliderPositions[1] = a_end;
					if (gldslvratioBtn.emphasized)	{
						drawChart_3Days('goldsilverratio');
					}	
					if (gldpltratioBtn.emphasized)	{
						drawChart_3Days('goldplatinumratio');
					}
					if (indivChartBtn.emphasized)	{
						drawChart_3Days('individual');
					}					
					if 	((!gldslvratioBtn.emphasized) && (!gldpltratioBtn.emphasized) && (!indivChartBtn.emphasized))  {
						drawChart_3Days('');
					}
				}
				if (chartbtn.selectedIndex == 1)	{
					T_a_Today = ArrToday[a_start].split(',')[0];
					T_b_Today = ArrToday[a_end].split(',')[0];
					sliderPositions[2] = a_start;
					sliderPositions[3] = a_end;
					if (gldslvratioBtn.emphasized)	{
						ArrToday1 = convertToOneDay(USD,true); 
						ArrToday2 = convertTo(GLDSLV,USD,"oneDay",true); 
						drawChart_Today('goldsilverratio');
					}
					if (gldpltratioBtn.emphasized)	{
						ArrToday1 = convertToOneDay(USD,true); 
						ArrToday2 = convertTo(GLDPLT,USD,"oneDay",true); 
						drawChart_Today('goldplatinumratio');
					}
					if (indivChartBtn.emphasized)	{
						drawChart_Today('individual');						
					}
					if ((!gldslvratioBtn.emphasized) && (!gldpltratioBtn.emphasized) && (!indivChartBtn.emphasized)) {
						drawChart_Today('');				
					}
				}
				if (chartbtn.selectedIndex == 2)	{
					sliderPositions[4] = a_start;
					sliderPositions[5] = a_end;
					if (currencyComboBoxGold.selectedIndex == 0)	{ drawChart_History(ARSh,ARSh[a_start].split(',')[0],ARSh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 1)	{ drawChart_History(AUDh,AUDh[a_start].split(',')[0],AUDh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 2)	{ drawChart_History(BRLh,BRLh[a_start].split(',')[0],BRLh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 3)	{ drawChart_History(CADh,CADh[a_start].split(',')[0],CADh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 4)	{ drawChart_History(CHFh,CHFh[a_start].split(',')[0],CHFh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 5)	{ drawChart_History(CNYh,CNYh[a_start].split(',')[0],CNYh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 6)	{ drawChart_History(COPh,COPh[a_start].split(',')[0],COPh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 7)	{ drawChart_History(EURh,EURh[a_start].split(',')[0],EURh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 8)	{ drawChart_History(GBPh,GBPh[a_start].split(',')[0],GBPh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 9)	{ drawChart_History(HKDh,HKDh[a_start].split(',')[0],HKDh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 10)	{ drawChart_History(IDRh,IDRh[a_start].split(',')[0],IDRh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 11)	{ drawChart_History(INRh,INRh[a_start].split(',')[0],INRh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 12)	{ drawChart_History(JPYh,JPYh[a_start].split(',')[0],JPYh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 13)	{ drawChart_History(KWDh,KWDh[a_start].split(',')[0],KWDh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 14)	{ drawChart_History(MXNh,MXNh[a_start].split(',')[0],MXNh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 15)	{ drawChart_History(MYRh,MYRh[a_start].split(',')[0],MYRh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 16)	{ drawChart_History(NZDh,NZDh[a_start].split(',')[0],NZDh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 17)	{ drawChart_History(PENh,PENh[a_start].split(',')[0],PENh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 18)	{ drawChart_History(PHPh,PHPh[a_start].split(',')[0],PHPh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 19)	{ drawChart_History(RURh,RURh[a_start].split(',')[0],RURh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 20)	{ drawChart_History(SEKh,SEKh[a_start].split(',')[0],SEKh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 21)	{ drawChart_History(SGDh,SGDh[a_start].split(',')[0],SGDh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 22)	{ drawChart_History(TRYh,TRYh[a_start].split(',')[0],TRYh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 23)	{ drawChart_History(USDh,USDh[a_start].split(',')[0],USDh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 24)	{ drawChart_History(VUVh,VUVh[a_start].split(',')[0],VUVh[a_end].split(',')[0]); return; }
					if (currencyComboBoxGold.selectedIndex == 25)	{ drawChart_History(ZARh,ZARh[a_start].split(',')[0],ZARh[a_end].split(',')[0]); return; }
					
					//					drawChart_History(USDh,USDh[a_start].split(',')[0],USDh[a_end].split(',')[0]);
					//					massageDataHistory(USDh,USDh[a_start].split(',')[0],USDh[a_end].split(',')[0]);
				}
			}	
			
			protected function chart_mouseRollOverHandler(event:MouseEvent):void	{
				var delta:int;
				var diff:int;
				if ((event.localX > globalX) && (zoomSlider.values[0] > 0)) {
					delta =  (zoomSlider.values[1] - zoomSlider.values[0])/8;
					zoomSlider.values[0] -= delta;
					zoomSlider.values[1] -= delta; 
				}	
				if (zoomSlider.values[0] < 0)	{
					diff = zoomSlider.values[1] - zoomSlider.values[0];
					zoomSlider.values[0] = 0;
					zoomSlider.values[1] = diff;
				}
				if ((event.localX < globalX) && (zoomSlider.values[1] < zoomSlider.maximum))	{
					delta =  (zoomSlider.values[1] - zoomSlider.values[0])/8;
					zoomSlider.values[0] += delta;
					zoomSlider.values[1] += delta; 
				}
				if (zoomSlider.values[1] > zoomSlider.maximum)  {
					diff = zoomSlider.values[1] - zoomSlider.values[0];
					zoomSlider.values[1] = zoomSlider.maximum;
					zoomSlider.values[0] = zoomSlider.values[1] - diff;
				}
				zoomSlider.invalidateDisplayList();
				switch (chartbtn.selectedIndex)	{
					case 0:
						T_a_3Days = Arr3Days[parseInt(zoomSlider.values[0])].split(',')[0];
						T_b_3Days = Arr3Days[parseInt(zoomSlider.values[1])].split(',')[0];
						if (gldslvratioBtn.emphasized)	{
							drawChart_3Days('goldsilverratio');
							break;
						}	
						if (gldpltratioBtn.emphasized)	{
							drawChart_3Days('goldplatinumratio');
							break;
						}
						if (indivChartBtn.emphasized)	{
							drawChart_3Days('individual');
							break;
						}
						drawChart_3Days('');
						break;
					case 1:
						T_a_Today = ArrToday[parseInt(zoomSlider.values[0])].split(',')[0];
						T_b_Today = ArrToday[parseInt(zoomSlider.values[1])].split(',')[0];
						if (gldslvratioBtn.emphasized)	{
							drawChart_Today('goldsilverratio');
							break;
						}	
						if (gldpltratioBtn.emphasized)	{
							drawChart_Today('goldplatinumratio');
							break;
						}
						if (indivChartBtn.emphasized)	{
							drawChart_Today('individual');
							break;
						}
						drawChart_Today('');
						break;
					case 2:
						sliderPositions[4] = zoomSlider.values[0];
						sliderPositions[5] = zoomSlider.values[1];
						if (currencyComboBoxGold.selectedIndex == 0) { drawChart_History(ARSh,ARSh[zoomSlider.values[0]].split(',')[0],ARSh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }
						if (currencyComboBoxGold.selectedIndex == 1) { drawChart_History(AUDh,AUDh[zoomSlider.values[0]].split(',')[0],AUDh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }							
						if (currencyComboBoxGold.selectedIndex == 2) { drawChart_History(BRLh,BRLh[zoomSlider.values[0]].split(',')[0],BRLh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 3) { drawChart_History(CADh,CADh[zoomSlider.values[0]].split(',')[0],CADh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 4) { drawChart_History(CHFh,CHFh[zoomSlider.values[0]].split(',')[0],CHFh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	 
						if (currencyComboBoxGold.selectedIndex == 5) { drawChart_History(CNYh,CNYh[zoomSlider.values[0]].split(',')[0],CNYh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 6) { drawChart_History(COPh,COPh[zoomSlider.values[0]].split(',')[0],COPh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 7) { drawChart_History(EURh,EURh[zoomSlider.values[0]].split(',')[0],EURh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 8) { drawChart_History(GBPh,GBPh[zoomSlider.values[0]].split(',')[0],GBPh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 9) { drawChart_History(HKDh,HKDh[zoomSlider.values[0]].split(',')[0],HKDh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 10) { drawChart_History(IDRh,IDRh[zoomSlider.values[0]].split(',')[0],IDRh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 11) { drawChart_History(CNYh,CNYh[zoomSlider.values[0]].split(',')[0],INRh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 12) { drawChart_History(JPYh,JPYh[zoomSlider.values[0]].split(',')[0],JPYh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 13) { drawChart_History(KWDh,KWDh[zoomSlider.values[0]].split(',')[0],KWDh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 14) { drawChart_History(MXNh,MXNh[zoomSlider.values[0]].split(',')[0],MXNh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 15) { drawChart_History(MYRh,MYRh[zoomSlider.values[0]].split(',')[0],MYRh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 16) { drawChart_History(NZDh,NZDh[zoomSlider.values[0]].split(',')[0],NZDh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 17) { drawChart_History(PENh,PENh[zoomSlider.values[0]].split(',')[0],PENh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 18) { drawChart_History(PHPh,PHPh[zoomSlider.values[0]].split(',')[0],PHPh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 19) { drawChart_History(RURh,RURh[zoomSlider.values[0]].split(',')[0],RURh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 20) { drawChart_History(SEKh,SEKh[zoomSlider.values[0]].split(',')[0],SEKh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 21) { drawChart_History(SGDh,SGDh[zoomSlider.values[0]].split(',')[0],SGDh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 22) { drawChart_History(TRYh,TRYh[zoomSlider.values[0]].split(',')[0],TRYh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }
						if (currencyComboBoxGold.selectedIndex == 23) { drawChart_History(USDh,USDh[zoomSlider.values[0]].split(',')[0],USDh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 24) { drawChart_History(VUVh,VUVh[zoomSlider.values[0]].split(',')[0],VUVh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						if (currencyComboBoxGold.selectedIndex == 25) { drawChart_History(ZARh,ZARh[zoomSlider.values[0]].split(',')[0],ZARh[zoomSlider.values[1]].split(',')[0]);  globalX = event.localX; return; }	
						break;
				}
				globalX = event.localX;
			}
			
			protected function chart_mouseUpHandler(event:MouseEvent):void	{
				chartLabel.setStyle("color","yellow");
				chartLabel.text = old_chartLabel; 
				this.removeEventListener(MouseEvent.MOUSE_DOWN,chart_mouseDownHandler);
				this.removeEventListener(MouseEvent.MOUSE_MOVE, chart_mouseRollOverHandler);
				this.removeEventListener(MouseEvent.MOUSE_UP,chart_mouseUpHandler);
			}
			
			protected function chart_mouseDownHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (!(event.localY > 0) && (event.localY < 900)) return;
				old_chartLabel = chartLabel.text; 
				if ((zoomSlider.values[0] == 0) && (zoomSlider.values[1] == zoomSlider.maximum)) {
					chartLabel.setStyle("color","red");
					chartLabel.text = 'To scroll you need to zoom-in first!'; 
					this.addEventListener(MouseEvent.MOUSE_UP,chart_mouseUpHandler);
					return;
				}
				globalX = event.localX;
				this.addEventListener(MouseEvent.MOUSE_MOVE,chart_mouseRollOverHandler);
				this.addEventListener(MouseEvent.MOUSE_UP,chart_mouseUpHandler);
			}
			
			private function buildChartLabel():void	{
				if (chartbtn.selectedIndex != 2)	{
					//					latestGoldPrice = latestGoldBtn.label.split(':')[1];
					if (latestGoldBtn.emphasized) 	{ chartLabel.text = 'Live Gold Price in '+currencyComboBoxGold.selectedLabel+':   '+ numForm.format(latestGoldPrice); return; }
					if (latestSilverBtn.emphasized)	{ chartLabel.text = 'Live Silver Price in '+currencyComboBoxGold.selectedLabel+':   '+ numForm.format(latestSilverPrice); return; }
					if (latestPlatinumBtn.emphasized)	{ chartLabel.text = 'Live Platinum Price in '+currencyComboBoxGold.selectedLabel+':   '+ numForm.format(latestPlatinumPrice); return; }
					if (latestPalladiumBtn.emphasized)	{ chartLabel.text = 'Live Palladium Price in '+currencyComboBoxGold.selectedLabel+':   '+ numForm.format(latestPalladiumPrice); return; }
				}
			}
			
			protected function chart_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (!(event.localY > 0) && (event.localY < 700)) return;
				Mouse.cursor = MouseCursor.HAND;
			}
			
			protected function chart_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Mouse.cursor = MouseCursor.ARROW;
			}
			
		]]>
	</fx:Script>
	
	
	
	<!--s:Scroller id="masterScroller" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto"-->
	<!--mx:ProgressBar 
	width="300" 
	source="init" 
	mode="polled" 
	label="Loading %3%%" 
	labelWidth="400"
	/-->
	<!--s:BusyIndicator 
	id="throbber" 
	visible="false" 
	rotationInterval="2000" 
	/-->
	
	<!--s:Label text="Gold LIVE Price AUTO-update with Autoupdating Chart by SH1NY.COM" color="yellow" fontSize="24" /-->
	<!--mx:Spacer height="3"/>
	<s:HGroup>
	<s:Label text="Autoupdating Chart by SH1NY.COM " color="yellow" fontSize="43.5" />
	<s:Label text="Gold, " color="Yellow" fontSize="43.5" />
	<s:Label text="Silver, " color="yellow" fontSize="43.5" />
	<s:Label text="Other." color="0xff6600" fontSize="43.5" />		
	<s:Label id="headline" text="The chart updates itself every 2 minutes." color="Yellow" fontSize="56" />
	</s:HGroup>
	<mx:Spacer height="5"/>
	
	<s:HGroup id="horizontalParent1" resizeMode="noScale">
	<s:Label id="spotLabel" width="92" color="Yellow" fontSize="22.5" text="SPOT PRICE IN"/>
	<mx:Spacer width="20"/>
	<mx:Button id="updateBtnChart" visible="true" label="Live Chart Update in Less Than 2 Minutes! Don't click Reload Button!" styleName="customButton2" color="#FFFF00" alpha="1" click="updateBtnChart.visible=false"/>
	<s:Label id="l1" text="AT" color="Yellow" fontSize="22.5"/>
	<s:Label id="l2" text="{ct}" color="yellow" fontSize="22.5"/>
	<s:Label id="l3" text="NEXT AUTOMATIC CHART AND PRICE UPDATE" color="Yellow" fontSize="22.5" />
	<s:Label id="l4" text="{nt}" color="yellow" fontSize="22.5" />
	<s:Label id="l5" text=" NEW YORK TIME" color="Yellow" fontSize="22.5"/>
	</s:HGroup>
	
	
	<s:layout>
	<s:VerticalLayout/>
	</s:layout-->
	
	<!--mx:HBox-->
	<s:VGroup>
		<s:HGroup>
			<!--s:Label text="Next Live Price Update 00:57" fontSize="50" fontFamily="nextUpdate2" color="0x656500" /-->
			<mx:Spacer height="50"/>
		</s:HGroup>
		<s:HGroup>
			<mx:ComboBox id="currencyComboBoxGold" change="{/*tracker.trackPageview('waluta: '+currencyComboBoxGold.selectedLabel);*/ if (chartbtn.selectedIndex==2) populateChart('history') else if (indivChartBtn.emphasized) populateChart('individual') else if (newButton.emphasized) populateChart('user') else if (gldslvratioBtn.emphasized) populateChart('goldsilverratio') else if (gldpltratioBtn.emphasized) populateChart('goldplatinumratio') else populateChart('');gldWorthv=(parseFloat(latestGoldPrice)*parseFloat(goldozcalc.text)).toFixed(2); slvWorthv=(parseFloat(latestSilverPrice)*parseFloat(silvozcalc.text)).toFixed(2); pltWorthv=(parseFloat(latestPlatinumPrice)*parseFloat(platozcalc.text)).toFixed(2); pldWorthv=(parseFloat(latestPalladiumPrice)*parseFloat(pallozcalc.text)).toFixed(2); totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString(); buildChartLabel(); }"
						 dataProvider="{currencies}" fontSize="20" textRollOverColor="Yellow" dropdownStyleName="customDropDown" selectedIndex="23" height="50" styleName="customButton"
						 textInputStyleName="customDropDownText" disabledColor="0x5f5f00"/>
			<!--mx:Button id="latestGoldBtn" width="200" height="50" emphasized="true" styleName="customButton" label="Gold: {numForm.format(latestGoldPrice)} {currencyCode}     " click="{metal='gld'; deEmphasize('gold'); osy.title=chartLabel.text='Live Gold Price'; populateChart('');}"/-->
			<s:Button id="latestGoldBtn" width="200" height="50" emphasized="true" styleName="customButton" label="Gld:   {numForm.format(latestGoldPrice)}" click="{metal='gld'; deEmphasize('gold'); osy.title=chartLabel.text='Live Gold Price'; populateChart('');}" chromeColor="black" />
			<mx:Button id="latestSilverBtn" width="200" height="50" styleName="customButton" label="Slv:   {numForm.format(latestSilverPrice)}" click="{metal='slv'; deEmphasize('silver'); osy.title=chartLabel.text='Live Silver Price'; populateChart('');}" disabledColor="0x5f5f00" textRollOverColor="0xffff00"  />
			<mx:Button id="latestPlatinumBtn" width="200" height="50" styleName="customButton" label="Plt:   {numForm.format(latestPlatinumPrice)}" click="{metal='plt'; deEmphasize('platinum'); osy.title=chartLabel.text='Live Platinum Price'; populateChart('');}" disabledColor="0x5f5f00" textRollOverColor="0xffff00"  />
			<mx:Button id="latestPalladiumBtn" width="200" height="50" styleName="customButton" label="Pld:   {numForm.format(latestPalladiumPrice)}" click="{metal='pld'; deEmphasize('palladium'); osy.title=chartLabel.text='Live Palladium Price'; populateChart('');}" disabledColor="0x5f5f00" textRollOverColor="0xffff00"  />
			<s:VGroup resizeMode="noScale">
				<s:RadioButton id="radioOunce" groupName="{ouncesOrGramsGold}" color="Yellow" label="OZ" fontFamily="nextUpdate2" fontSize="10" selected="true" click="populateChart(''); buildChartLabel();" toolTip="Ounces" />
				<s:RadioButton id="radioGram" groupName="{ouncesOrGramsGold}" color="Yellow" label="GR" fontFamily="nextUpdate2" fontSize="10" click="populateChart(''); buildChartLabel();" toolTip="Grams" />
				<!--s:RadioButtonGroup id="ouncesOrGramsGold" /-->
			</s:VGroup>
		</s:HGroup>
		<!--mx:Spacer height="10"/-->
		<!--/mx:HBox-->
		<s:HGroup>
			<s:VGroup>	
				<mx:Spacer height="20"/>
				<mx:LineChart id="chart" width="970" height="500" cacheAsBitmap="true" color="0xffffff"
							  dataTipFunction="showDataTip" fontSize="10" horizontalCenter="-10" 
							  selectionMode="none" seriesFilters="[]" mouseDown="chart_mouseDownHandler(event)" mouseOver="chart_mouseOverHandler(event)" mouseOut="chart_mouseOutHandler(event)"
							  showDataTips="true" > <!--itemMouseDown="selectItem(event)" -->
					<mx:backgroundElements>
						<mx:GridLines id="gridlines" horizontalChangeCount="1" verticalChangeCount="1"  >
							<mx:horizontalStroke>
								<mx:SolidColorStroke id="horLine" />						
							</mx:horizontalStroke>
							<mx:verticalStroke>
								<mx:SolidColorStroke id="verLine" />
							</mx:verticalStroke>
							<mx:horizontalFill>
								<mx:SolidColor id="horFill" />
							</mx:horizontalFill>
							<mx:verticalFill>
								<mx:SolidColor id="verFill" />
							</mx:verticalFill>
						</mx:GridLines>			
					</mx:backgroundElements>
					<mx:annotationElements>
						<mx:CartesianDataCanvas id="canvas" includeInRanges="true"/>
					</mx:annotationElements>
					<mx:fill>
						<mx:SolidColor id="backgroundColor" />
					</mx:fill>
					<mx:horizontalAxis>
						<mx:LinearAxis id="osx" title="Date" labelFunction="categoryLabelFunctionDate" />
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis id="osy" baseAtZero="false" title="Live Gold Price in USD" labelFunction="defineVerticalLabel" />
					</mx:verticalAxis>
					<mx:horizontalAxisRenderers>					
						<mx:AxisRenderer axis="{osx}">
							<mx:axisStroke>
								<mx:SolidColorStroke id="XAxis" />
							</mx:axisStroke>							
						</mx:AxisRenderer>
					</mx:horizontalAxisRenderers>
					<mx:verticalAxisRenderers>
						<mx:AxisRenderer axis="{osy}">
							<mx:axisStroke>
								<mx:SolidColorStroke id="YAxis" />
							</mx:axisStroke>
						</mx:AxisRenderer>				
					</mx:verticalAxisRenderers>
					<mx:series>
						<!--mx:LineSeries id="ser4" lineStroke="{red}" interpolateValues="true"/-->
						<mx:LineSeries id="ser1" yField="Price" lineStroke="{green}" interpolateValues="true" selectable="true" />
						<mx:LineSeries id="ser2" lineStroke="{blue}" interpolateValues="true" selectable="true"/>
						<mx:LineSeries id="ser3" lineStroke="{red}" interpolateValues="true" selectable="true"/>
						<!--showDataEffect="{interpolateIn}"/-->
					</mx:series>
				</mx:LineChart>
				<mx:Spacer width="90"/>
			</s:VGroup>
		</s:HGroup>
		<!--mx:Legend dataProvider="{chart}"/-->
		<!--mx:HBox id="hb2"-->
		<s:HGroup id="buttonsGrp" autoLayout="true" includeInLayout="true" width="{chart.width - (chart.width/20)}" resizeMode="noScale">			
			<local:ColoredToggleButtonBar id="chartbtn" buttonStyleName="customButton" color="#FFFF00" alpha="0.8" width="300" height="27"
										  fontSize="14" itemClick="/*tracker.trackPageview('typ wykresu: '+ chartbtn.selectedIndex.toString());*/zoomCheck(); if (chartbtn.selectedIndex==2) if ((USDh[0] == '') || (USDh[0] == null)) loadHistory() else populateChart('history') else latestSilverBtn.enabled = latestPlatinumBtn.enabled = latestPalladiumBtn.enabled = latestGoldBtn.enabled = radioGram.enabled = radioOunce.enabled = gldpltratioBtn.enabled = gldslvratioBtn.enabled = goldozcalc.enabled = silvozcalc.enabled = platozcalc.enabled = pallozcalc.enabled = indivChartBtn.enabled = true; if (indivChartBtn.emphasized) populateChart('individual') else if (gldslvratioBtn.emphasized) populateChart('goldsilverratio') else if (newButton.emphasized) populateChart('user') else if (gldpltratioBtn.emphasized) populateChart('goldplatinumratio') else populateChart('');"
										  selectedIndex="1" dataProvider="['Last 3 Days','Today','History']" selectedFontColor="#ffff00" selectedButtonColor="#ffff00"
										  selectedButtonBorderColor="#ffff00"  > <!--creationComplete="selectChart()" -->
				<!--mx:dataProvider>
				<fx:Array>
				<fx:String>Last 3 Days</fx:String>
				<fx:String>Today</fx:String>
				<fx:String>History</fx:String>
				</fx:Array>
				</mx:dataProvider-->		
			</local:ColoredToggleButtonBar>		
			<!--mx:Label id="startDateLabel" text="Start Date:"/>
			<s:TextInput id="date1" width="75" text="01/02/1973" change="dateChange(event)" restrict="[0-9/]" /-->
			<!--mx:DateField id="startDate" selectedDate="{new Date (1973,1,2)}"
			editable="true" width="100" cachePolicy="off" 
			dataChange="dateFieldChange(event)"/-->
			<!--mx:Label id="endDateLabel" text="End Date:"/>
			<s:TextInput id="date2" width="75" text="02/11/2011" change="dateChange(event)" restrict="[0-9/]"/-->
			<!--mx:DateField id="endDate" selectedDate="{new Date (2010, 8, 12)}" color="{white}"
			editable="true" width="100" cachePolicy="off" 
			dataChange="dateFieldChange(event)" /-->
			<!--mx:Label text="Resolution:"/-->
			<!--s:NumericStepper id="resolution" minimum="0" maximum="300" stepSize="5" value="300" change="{resChange(resolution.value)}" /-->
			<!--mx:Spacer width="30"/-->
			<!--s:Button id="btn" label="Go!" color="red" click="chart.dataProvider=massageData(ro.getData.lastResult.toArray(), startDate.selectedDate, endDate.selectedDate, resolution.value)" /-->
			<!-- click="chart.dataProvider=massageData(ro.getData.lastResult.toArray(), startDate.selectedDate, endDate.selectedDate, resolution.value)" -->
			<!--mx:ButtonBar id="zoombtn" itemClick="zoomInOut(event)">
			<mx:dataProvider>
			<fx:Array>
			<fx:String>Zoom In</fx:String>
			<fx:String>Zoom Out</fx:String>
			</fx:Array>
			</mx:dataProvider>		
			</mx:ButtonBar-->
			<!--mx:Button id="allDataPoints" label="Show All Data Points" click="{changeDataTips()}"/-->
			<!--mx:Label id="zoomModeBtn" text="Zoom-In Mode: Off" /-->
			<!--mx:ButtonBar id="addrmvbtn" itemClick="addOrRemoveDay(event)">
			<mx:dataProvider>
			<fx:Array>
			<fx:String>Add Day</fx:String>
			<fx:String>RemoveDay</fx:String>
			</fx:Array>
			</mx:dataProvider>		
			</mx:ButtonBar-->
			<!--mx:Spacer width="20"/-->
			<!--mx:Button id="resetBtn" label="ZOOM RESET" click="reset()" color="#FFFF00" fontSize="11"
			styleName="customButton"/>
			<mx:Button id="zoomOutBtn" label="ZOOM OUT" click="zoomOut()" color="#FFFF00"
			fontSize="11" styleName="customButton"/-->					
			<!--/s:HGroup>
			<s:HGroup id="buttonsGrp"-->
			<mx:Button id="gldslvratioBtn" width="170" fontSize="5" styleName="customButton" alpha="0.8" label="Gld/Slv Ratio" click="{osy.title=chartLabel.text='Live Gold to Silver Ratio'; deEmphasize('gldslvratio'); populateChart('goldsilverratio');}" disabledColor="0x5f5f00" textRollOverColor="0xffff00" />				
			<mx:Button id="gldpltratioBtn" width="170" fontSize="5" styleName="customButton" alpha="0.8" label="Gld/Plt Ratio" click="{osy.title=chartLabel.text='Live Gold to Platinum Ratio'; deEmphasize('gldpltratio'); populateChart('goldplatinumratio');}" disabledColor="0x5f5f00" textRollOverColor="0xffff00" />
			<mx:Spacer width="20"/>
			<mx:HSlider id="zoomSlider" minimum="0" maximum="719" dataTipFormatFunction="myDataTipFunc" liveDragging="true" change="sliderChange(event)" thumbCount="2" width="250" tickColor="yellow" />
			<!--mx:LinkButton id="wishboxBtn" label="Wish Box..." styleName="customButton3" width="115" click="newWishbox(event)" color="yellow" fontFamily="myFontFamily" fontSize="12"/-->
		</s:HGroup>
		<!--mx:Button id="newUserChartBtn" fontSize="12" color="yellow" label="* Create Your Own Button! *" click="newChart(event)" width="240" fontFamily="nextUpdate" styleName="customButton"/-->
		<!--mx:Spacer height="30"/-->
		<!--s:Label text="See How Much Your Stuff Is Worth:" color="yellow" fontSize="24" /-->
		<mx:Spacer height="5"/>
		<s:Label id="calcLabel1" text='Track Your Stack' color="yellow" fontSize="20" fontFamily="nextUpdate2" />
		<!--mx:Spacer height="2"/-->			
		<s:HGroup width="749" id="calcHGroup">
			<s:VGroup>
				<s:Label id="pmcGoldLabel" text="GOLD ounces:" color="0x656500" fontFamily="nextUpdate2" fontSize="12" />
				<mx:TextInput id="goldozcalc" styleName="customButton" color="0x656500" disabledColor="0x333327" width="170" height="30" fontSize="14" restrict="0-9." maxChars="6" text="0.00" click="{if (goldozcalc.text == '0.00') goldozcalc.text='';}" focusOut="{if (goldozcalc.text == '') goldozcalc.text=gldWorthv='0.00';}" change="{if (goldozcalc.text == '') goldozcalc.text='0.00'; gldWorthv=(parseFloat(latestGoldPrice)*parseFloat(goldozcalc.text)).toFixed(2); totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString()}" keyDown="onKeyDown(event)" />
				<s:Label id="accgold" color="0x656500" fontFamily="nextUpdate2" text="{numForm.format(parseFloat(gldWorthv)) || '0.00'} {currencyComboBoxGold.selectedLabel}" fontSize="10"/>				
			</s:VGroup>
			<s:VGroup>
				<s:Label id="pmcSilverLabel" text="SILVER ounces:" color="0x656500" fontFamily="nextUpdate2" fontSize="12"/>
				<mx:TextInput id="silvozcalc" styleName="customButton" color="0x656500" disabledColor="0x333327" width="170" height="30" fontSize="14" restrict="0-9." maxChars="6" text="0.00" click="{if (silvozcalc.text == '0.00') silvozcalc.text='';}" focusOut="{if (silvozcalc.text == '') silvozcalc.text=slvWorthv='0.00';}" change="{if (silvozcalc.text == '') silvozcalc.text='0.00'; slvWorthv=(parseFloat(latestSilverPrice)*parseFloat(silvozcalc.text)).toFixed(2); totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString()}" keyDown="onKeyDown(event)"/>
				<s:Label id="accsilv" color="0x656500" fontFamily="nextUpdate2" text="{numForm.format(parseFloat(slvWorthv)) || '0.00'} {currencyComboBoxGold.selectedLabel}" fontSize="10"/>				
			</s:VGroup>
			<s:VGroup>
				<s:Label id="pmcPlatinumLabel" text="PLATINUM ounces:" color="0x656500" fontFamily="nextUpdate2" fontSize="12"/>
				<mx:TextInput id="platozcalc" styleName="customButton" color="0x656500" disabledColor="0x333327" width="170" height="30" fontSize="14" restrict="0-9." maxChars="6" text="0.00" click="{if (platozcalc.text == '0.00') platozcalc.text='';}" focusOut="{if (platozcalc.text == '') platozcalc.text=pltWorthv='0.00';}" change="{if (platozcalc.text == '') platozcalc.text='0.00'; pltWorthv=(parseFloat(latestPlatinumPrice)*parseFloat(platozcalc.text)).toFixed(2); totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString()}" keyDown="onKeyDown(event)"/>
				<s:Label id="accplat" color="0x656500" fontFamily="nextUpdate2" text="{numForm.format(parseFloat(pltWorthv)) || '0.00'} {currencyComboBoxGold.selectedLabel}" fontSize="10"/>				
			</s:VGroup>
			<s:VGroup>
				<s:Label id="pmcPalladiumLabel" text="PALLADIUM ounces:" color="0x656500" fontFamily="nextUpdate2" fontSize="12"/>
				<mx:TextInput id="pallozcalc" styleName="customButton" color="0x656500" disabledColor="0x333327" width="170" height="30" fontSize="14" restrict="0-9." maxChars="6" text="0.00" click="{if (pallozcalc.text == '0.00') pallozcalc.text='';}" focusOut="{if (pallozcalc.text == '') pallozcalc.text=pldWorthv='0.00';}" change="{if (pallozcalc.text == '') pallozcalc.text='0.00'; pldWorthv=(parseFloat(latestPalladiumPrice)*parseFloat(pallozcalc.text)).toFixed(2); totalWorthv=(parseFloat(gldWorthv)+parseFloat(slvWorthv)+parseFloat(pltWorthv)+parseFloat(pldWorthv)).toString()}" keyDown="onKeyDown(event)"/>
				<s:Label id="accpall" color="0x656500" fontFamily="nextUpdate2" text="{numForm.format(parseFloat(pldWorthv)) || '0.00'} {currencyComboBoxGold.selectedLabel}" fontSize="10"/>				
			</s:VGroup>
			<mx:Spacer width="10"/>
			<s:VGroup>
				<mx:Button id="indivChartBtn" label="Chart My Stack!" click="deEmphasize('individual'); osy.title = chartLabel.text = 'Tracking Your Stack Live'; populateChart('individual')" color="0xFFFF00" styleName="customButton" height="50" width="220" textRollOverColor="0xffff00" />
				<s:Label id="totalWorth" fontFamily="nextUpdate2"  fontSize="12" color="0x656500" text="Total: {numForm.format(parseFloat(totalWorthv)) || '0.00'} {currencyComboBoxGold.selectedLabel}"/>				
			</s:VGroup>
		</s:HGroup>
		<!--s:HGroup horizontalCenter="150" verticalCenter="0">			
		<mx:ToggleButtonBar id="chartStyleBtn" itemClick="populateChart()" selectedIndex="0" verticalCenter="0"> 
		<mx:dataProvider>
		<fx:Array>
		<fx:String>OnlyHedge</fx:String>
		<fx:String>Classical</fx:String>
		<fx:String>Black and White</fx:String>
		<fx:String>Power Pink</fx:String>
		<fx:String>Custom...</fx:String>
		<fx:String>My Saved Styles</fx:String>
		</fx:Array>
		</mx:dataProvider>		
		</mx:ToggleButtonBar>			
		</s:HGroup-->
	</s:VGroup>
	<s:VGroup y="0" width="686" height="505" paddingBottom="0" paddingLeft="50" paddingRight="0"
			  paddingTop="0">
		<s:BusyIndicator 
			id="throbber" 
			visible="false" 
			alpha="1"
			height="615"
			width="631"
			rotationInterval="{rotationInterval}" />
		<!--s:Button 
		id="start" 
		click="busyOn()" 
		width="100%" 
		height="50" 
		label="start" />
		<s:Button 
		id="stop" 
		click="busyOff()" 
		width="100%" 
		height="50" 
		label="stop" /-->
	</s:VGroup>
	<!--/s:Scroller-->
</s:Application>